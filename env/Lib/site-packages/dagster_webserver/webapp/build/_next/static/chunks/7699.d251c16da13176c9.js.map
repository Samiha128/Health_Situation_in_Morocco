{"version":3,"file":"static/chunks/7699.d251c16da13176c9.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/instance/LastRunSummary.tsx","webpack://_N_E/../ui-core/src/instance/RepoFilterButton.tsx","webpack://_N_E/../ui-core/src/instance/StepSummaryForRun.tsx","webpack://_N_E/../ui-core/src/jobs/JobsRoot.tsx","webpack://_N_E/../ui-core/src/overview/OverviewExpansionKey.tsx","webpack://_N_E/../ui-core/src/overview/sortRepoBuckets.tsx","webpack://_N_E/../ui-core/src/overview/visibleRepoKeys.tsx","webpack://_N_E/../ui-core/src/runs/RunStatusPez.tsx","webpack://_N_E/../ui-components/src/components/useDelayedState.tsx","webpack://_N_E/../ui-core/src/ui/SearchInputSpinner.tsx","webpack://_N_E/../ui-core/src/ui/findDuplicateRepoNames.tsx","webpack://_N_E/../ui-core/src/ui/useRepoExpansionState.tsx","webpack://_N_E/../ui-core/src/workspace/TableSectionHeader.tsx","webpack://_N_E/../ui-core/src/runs/RepoSectionHeader.tsx","webpack://_N_E/../ui-core/src/workspace/VirtualizedWorkspaceTable.tsx"],"sourcesContent":["import {Box, Popover, Tag} from '@dagster-io/ui-components';\nimport {memo, useMemo} from 'react';\n\nimport {StepSummaryForRun} from './StepSummaryForRun';\nimport {RunStatus} from '../graphql/types';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {RunStatusOverlay} from '../runs/RunStatusPez';\nimport {failedStatuses, inProgressStatuses} from '../runs/RunStatuses';\nimport {RunStateSummary, RunTime} from '../runs/RunUtils';\nimport {RunTimeFragment} from '../runs/types/RunUtils.types';\nimport {AnchorButton} from '../ui/AnchorButton';\n\ninterface Props {\n  name: string;\n  run: RunTimeFragment;\n  showHover?: boolean;\n  showButton?: boolean;\n  showSummary?: boolean;\n}\n\nexport const LastRunSummary = memo(\n  ({name, run, showHover = false, showButton = true, showSummary = true}: Props) => {\n    const {status} = run;\n\n    const intent = useMemo(() => {\n      switch (status) {\n        case RunStatus.SUCCESS:\n          return 'success';\n        case RunStatus.CANCELED:\n        case RunStatus.CANCELING:\n        case RunStatus.FAILURE:\n          return 'danger';\n        default:\n          return 'none';\n      }\n    }, [status]);\n\n    const tag = () => {\n      const tagElement = (\n        <Tag intent={intent}>\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <RunStatusIndicator status={run.status} size={10} />\n            <RunTime run={run} />\n          </Box>\n        </Tag>\n      );\n\n      if (!showHover) {\n        return tagElement;\n      }\n\n      return (\n        <Popover\n          position=\"top\"\n          interactionKind=\"hover\"\n          content={\n            <div>\n              <RunStatusOverlay run={run} name={name} />\n            </div>\n          }\n          hoverOpenDelay={100}\n        >\n          {tagElement}\n        </Popover>\n      );\n    };\n\n    return (\n      <Box\n        flex={{\n          direction: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'flex-start',\n          gap: 16,\n        }}\n      >\n        <Box flex={{direction: 'column', alignItems: 'flex-start', gap: 4}}>\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n            {tag()}\n            {showSummary ? <RunStateSummary run={run} /> : null}\n          </Box>\n          {showSummary && (failedStatuses.has(run.status) || inProgressStatuses.has(run.status)) ? (\n            <StepSummaryForRun runId={run.id} />\n          ) : undefined}\n        </Box>\n        {showButton ? <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton> : null}\n      </Box>\n    );\n  },\n);\n","import {Box, Button, Dialog, DialogFooter, DialogHeader, Icon} from '@dagster-io/ui-components';\nimport {useContext, useState} from 'react';\n\nimport {RepoSelector} from '../nav/RepoSelector';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nexport const RepoFilterButton = () => {\n  const {allRepos, visibleRepos, toggleVisible} = useContext(WorkspaceContext);\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <Dialog\n        canOutsideClickClose\n        canEscapeKeyClose\n        isOpen={open}\n        style={{width: 'auto'}}\n        onClose={() => setOpen(false)}\n      >\n        <DialogHeader icon=\"repo\" label=\"Filter code locations\" />\n        <RepoSelector\n          options={allRepos}\n          onBrowse={() => setOpen(false)}\n          onToggle={toggleVisible}\n          selected={visibleRepos}\n        />\n        <DialogFooter>\n          <Box padding={{top: 8}}>\n            <Button intent=\"none\" onClick={() => setOpen(false)}>\n              Done\n            </Button>\n          </Box>\n        </DialogFooter>\n      </Dialog>\n\n      <Button\n        outlined\n        icon={<Icon name=\"folder\" />}\n        rightIcon={<Icon name=\"expand_more\" />}\n        onClick={() => setOpen(true)}\n      >\n        {`${visibleRepos.length} of ${allRepos.length}`}\n      </Button>\n    </>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Caption, Colors} from '@dagster-io/ui-components';\nimport qs from 'qs';\nimport {useMemo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {\n  StepSummaryForRunQuery,\n  StepSummaryForRunQueryVariables,\n} from './types/StepSummaryForRun.types';\nimport {StepEventStatus} from '../graphql/types';\nimport {useBlockTraceOnQueryResult} from '../performance/TraceContext';\nimport {failedStatuses, inProgressStatuses} from '../runs/RunStatuses';\n\ninterface Props {\n  runId: string;\n}\n\nexport const StepSummaryForRun = (props: Props) => {\n  const {runId} = props;\n  const queryResult = useQuery<StepSummaryForRunQuery, StepSummaryForRunQueryVariables>(\n    STEP_SUMMARY_FOR_RUN_QUERY,\n    {\n      variables: {runId},\n    },\n  );\n  const {data} = queryResult;\n  useBlockTraceOnQueryResult(queryResult, 'StepSummaryForRunQuery');\n\n  const run = data?.pipelineRunOrError;\n  const status = run?.__typename === 'Run' ? run.status : null;\n\n  const relevantSteps = useMemo(() => {\n    if (run?.__typename !== 'Run') {\n      return [];\n    }\n\n    const {status} = run;\n    if (failedStatuses.has(status)) {\n      return run.stepStats.filter((step) => step.status === StepEventStatus.FAILURE);\n    }\n\n    if (inProgressStatuses.has(status)) {\n      return run.stepStats.filter((step) => step.status === StepEventStatus.IN_PROGRESS);\n    }\n\n    return [];\n  }, [run]);\n\n  const stepCount = relevantSteps.length;\n\n  if (!stepCount || !status) {\n    return null;\n  }\n\n  if (failedStatuses.has(status)) {\n    if (stepCount === 1) {\n      const step = relevantSteps[0]!;\n      const query = step.endTime\n        ? qs.stringify({focusedTime: Math.floor(step.endTime * 1000)}, {addQueryPrefix: true})\n        : '';\n      return (\n        <Caption color={Colors.textLight()}>\n          Failed at <Link to={`/runs/${runId}${query}`}>{step.stepKey}</Link>\n        </Caption>\n      );\n    }\n    return (\n      <Caption color={Colors.textLight()}>\n        Failed at <Link to={`/runs/${runId}`}>{stepCount} steps</Link>\n      </Caption>\n    );\n  }\n\n  if (inProgressStatuses.has(status)) {\n    if (stepCount === 1) {\n      const step = relevantSteps[0]!;\n      const query = step.endTime\n        ? qs.stringify({focusedTime: Math.floor(step.endTime * 1000)}, {addQueryPrefix: true})\n        : '';\n      return (\n        <Caption color={Colors.textLight()}>\n          In progress at <Link to={`/runs/${runId}${query}`}>{step.stepKey}</Link>\n        </Caption>\n      );\n    }\n    return (\n      <Caption color={Colors.textLight()}>\n        In progress at <Link to={`/runs/${runId}`}>{stepCount} steps</Link>\n      </Caption>\n    );\n  }\n\n  return null;\n};\n\nconst STEP_SUMMARY_FOR_RUN_QUERY = gql`\n  query StepSummaryForRunQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        status\n        stepStats {\n          endTime\n          stepKey\n          status\n        }\n      }\n    }\n  }\n`;\n","import {Box, Heading, PageHeader} from '@dagster-io/ui-components';\n\nimport {JobsPageContent} from './JobsPageContent';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nexport const JobsRoot = () => {\n  useTrackPageView();\n  useDocumentTitle('Jobs');\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <PageHeader title={<Heading>Jobs</Heading>} />\n      <JobsPageContent />\n    </Box>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default JobsRoot;\n","export const OVERVIEW_COLLAPSED_KEY = 'overview-collapsed-state';\n","import {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Bucket {\n  repoAddress: RepoAddress;\n}\n\nexport const sortRepoBuckets = <B extends Bucket>(buckets: B[]) => {\n  return [...buckets].sort((a, b) => {\n    const aString = repoAddressAsHumanString(a.repoAddress);\n    const bString = repoAddressAsHumanString(b.repoAddress);\n    return aString.localeCompare(bString);\n  });\n};\n","import {DagsterRepoOption} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\n\nexport const visibleRepoKeys = (visibleRepos: DagsterRepoOption[]) => {\n  return new Set(\n    visibleRepos.map((option) =>\n      repoAddressAsHumanString(\n        buildRepoAddress(option.repository.name, option.repositoryLocation.name),\n      ),\n    ),\n  );\n};\n","import {Box, CaptionMono, Colors, FontFamily, Popover} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {RunStatusIndicator} from './RunStatusDots';\nimport {RUN_STATUS_COLORS} from './RunStatusTag';\nimport {failedStatuses, inProgressStatuses} from './RunStatuses';\nimport {RunStateSummary, RunTime, titleForRun} from './RunUtils';\nimport {RunTimeFragment} from './types/RunUtils.types';\nimport {RunStatus} from '../graphql/types';\nimport {StepSummaryForRun} from '../instance/StepSummaryForRun';\n\nconst MIN_OPACITY = 0.2;\nconst MAX_OPACITY = 1.0;\nconst MIN_OPACITY_STEPS = 3;\n\ninterface Props {\n  opacity?: number;\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusPez = (props: Props) => {\n  const {status, opacity = MAX_OPACITY} = props;\n  const color = RUN_STATUS_COLORS[status];\n\n  return <Pez $color={color} $opacity={opacity} />;\n};\n\ninterface ListProps {\n  fade: boolean;\n  jobName: string;\n  runs: RunTimeFragment[];\n}\n\nexport const RunStatusPezList = (props: ListProps) => {\n  const {fade, jobName, runs} = props;\n  const count = runs.length;\n  const countForStep = Math.max(MIN_OPACITY_STEPS, count);\n  const step = (MAX_OPACITY - MIN_OPACITY) / countForStep;\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 2}}>\n      {runs.map((run, ii) => (\n        <Popover\n          key={run.id}\n          position=\"top\"\n          interactionKind=\"hover\"\n          content={\n            <div>\n              <RunStatusOverlay run={run} name={jobName} />\n            </div>\n          }\n          hoverOpenDelay={100}\n        >\n          <RunStatusPez\n            key={run.id}\n            runId={run.id}\n            status={run.status}\n            opacity={fade ? MAX_OPACITY - (count - ii - 1) * step : 1.0}\n          />\n        </Popover>\n      ))}\n    </Box>\n  );\n};\n\ninterface OverlayProps {\n  run: RunTimeFragment;\n  name: string;\n}\n\nexport const RunStatusOverlay = ({name, run}: OverlayProps) => {\n  return (\n    <OverlayContainer>\n      <OverlayTitle>{name}</OverlayTitle>\n      <RunRow>\n        <Box flex={{alignItems: 'center', direction: 'row', gap: 8}}>\n          <RunStatusIndicator status={run.status} />\n          <Link to={`/runs/${run.id}`}>\n            <CaptionMono>{titleForRun(run)}</CaptionMono>\n          </Link>\n        </Box>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          <RunStateSummary run={run} />\n        </Box>\n      </RunRow>\n      {failedStatuses.has(run.status) || inProgressStatuses.has(run.status) ? (\n        <SummaryContainer>\n          <StepSummaryForRun runId={run.id} />\n        </SummaryContainer>\n      ) : null}\n    </OverlayContainer>\n  );\n};\n\nconst OverlayContainer = styled.div`\n  padding: 4px;\n  font-size: 12px;\n  width: 220px;\n`;\n\nconst OverlayTitle = styled.div`\n  padding: 8px;\n  box-shadow: inset 0 -1px ${Colors.keylineDefault()};\n  font-family: ${FontFamily.default};\n  font-size: 14px;\n  font-weight: 500;\n  color: ${Colors.textDefault()};\n  max-width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  min-width: 0px;\n`;\n\nconst RunRow = styled.div`\n  padding: 8px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst SummaryContainer = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 4px 8px 8px;\n\n  :empty {\n    display: none;\n  }\n`;\n\nconst Pez = styled.div<{$color: string; $opacity: number}>`\n  background-color: ${({$color}) => $color};\n  border-radius: 2px;\n  height: 16px;\n  opacity: ${({$opacity}) => $opacity};\n  width: 8px;\n`;\n","import {useEffect, useState} from 'react';\n\nexport const useDelayedState = (delayMsec: number) => {\n  const [ready, setReady] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setReady(true), delayMsec);\n    return () => clearTimeout(timer);\n  }, [delayMsec]);\n\n  return ready;\n};\n","import {Box, Spinner, Tooltip, useDelayedState} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\ninterface Props {\n  tooltipContent: string | React.ReactElement | null;\n}\n\nconst SPINNER_WAIT_MSEC = 2000;\n\nexport const SearchInputSpinner = (props: Props) => {\n  const {tooltipContent} = props;\n  const canShowSpinner = useDelayedState(SPINNER_WAIT_MSEC);\n\n  if (!canShowSpinner) {\n    return null;\n  }\n\n  return (\n    <Box margin={{top: 1}}>\n      <Tooltip placement=\"top\" canShow={!!tooltipContent} content={tooltipContent || ''}>\n        <Spinner purpose=\"body-text\" />\n      </Tooltip>\n    </Box>\n  );\n};\n","export const findDuplicateRepoNames = (repoNames: string[]) => {\n  const uniques = new Set<string>();\n  const duplicates = new Set<string>();\n  repoNames.forEach((repoName) => {\n    if (uniques.has(repoName)) {\n      duplicates.add(repoName);\n    } else {\n      uniques.add(repoName);\n    }\n  });\n  return duplicates;\n};\n","import {useCallback, useContext, useMemo} from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\nconst validateExpandedKeys = (parsed: unknown) => (Array.isArray(parsed) ? parsed : []);\nexport const buildStorageKey = (basePath: string, key: string) => `${basePath}:dagster.${key}`;\n\n/**\n * Use localStorage to persist the expanded/collapsed visual state of repository containers,\n * e.g. for the left nav or run timeline.\n */\nexport const useRepoExpansionState = (collapsedKey: string, allKeys: string[]) => {\n  const {basePath} = useContext(AppContext);\n\n  const collapsedStorageKey = buildStorageKey(basePath, collapsedKey);\n  const [collapsedKeys, setCollapsedKeys] = useStateWithStorage<string[]>(\n    collapsedStorageKey,\n    validateExpandedKeys,\n  );\n\n  const onToggle = useCallback(\n    (_key: string | RepoAddress) => {\n      const key = typeof _key === 'object' ? repoAddressAsHumanString(_key) : _key;\n      setCollapsedKeys((current) => {\n        const nextCollapsedKeys = new Set(current || []);\n        if (nextCollapsedKeys.has(key)) {\n          nextCollapsedKeys.delete(key);\n        } else {\n          nextCollapsedKeys.add(key);\n        }\n        return Array.from(nextCollapsedKeys);\n      });\n    },\n    [setCollapsedKeys],\n  );\n\n  const onToggleAll = useCallback(\n    (expand: boolean) => {\n      setCollapsedKeys((current) => {\n        const nextCollapsedKeys = new Set(current || []);\n        allKeys.forEach((key) => {\n          expand ? nextCollapsedKeys.delete(key) : nextCollapsedKeys.add(key);\n        });\n        return Array.from(nextCollapsedKeys);\n      });\n    },\n    [allKeys, setCollapsedKeys],\n  );\n\n  const expandedKeys = useMemo(() => {\n    const collapsedSet = new Set(collapsedKeys);\n    return allKeys.filter((key) => !collapsedSet.has(key));\n  }, [allKeys, collapsedKeys]);\n\n  return useMemo(\n    () => ({\n      expandedKeys,\n      onToggle,\n      onToggleAll,\n    }),\n    [expandedKeys, onToggle, onToggleAll],\n  );\n};\n","import {Box, Colors, Icon, IconWrapper} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nexport const SECTION_HEADER_HEIGHT = 32;\n\nexport interface TableSectionHeaderProps {\n  expanded: boolean;\n  onClick: (e: React.MouseEvent) => void;\n  children?: React.ReactNode;\n  rightElement?: React.ReactNode;\n}\n\nexport const TableSectionHeader = (props: TableSectionHeaderProps) => {\n  const {expanded, onClick, children, rightElement} = props;\n  return (\n    <SectionHeaderButton $open={expanded} onClick={onClick}>\n      <Box\n        flex={{alignItems: 'center', justifyContent: 'space-between'}}\n        padding={{horizontal: 24}}\n      >\n        {children}\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          {rightElement}\n          <Box margin={{top: 2}}>\n            <Icon name=\"arrow_drop_down\" />\n          </Box>\n        </Box>\n      </Box>\n    </SectionHeaderButton>\n  );\n};\n\nconst SectionHeaderButton = styled.button<{$open: boolean}>`\n  background-color: ${Colors.backgroundLight()};\n  border: 0;\n  box-shadow:\n    inset 0px -1px 0 ${Colors.keylineDefault()},\n    inset 0px 1px 0 ${Colors.keylineDefault()};\n  color: ${Colors.textLight()};\n  cursor: pointer;\n  display: block;\n  padding: 0;\n  width: 100%;\n  margin: 0;\n  height: ${SECTION_HEADER_HEIGHT}px;\n  text-align: left;\n\n  :focus,\n  :active {\n    outline: none;\n  }\n\n  :hover {\n    background-color: ${Colors.backgroundLightHover()};\n  }\n\n  ${IconWrapper}[aria-label=\"arrow_drop_down\"] {\n    transition: transform 100ms linear;\n    ${({$open}) => ($open ? null : `transform: rotate(-90deg);`)}\n  }\n`;\n","import {Box, Colors, Icon} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {TableSectionHeader, TableSectionHeaderProps} from '../workspace/TableSectionHeader';\nimport {DUNDER_REPO_NAME} from '../workspace/buildRepoAddress';\n\ninterface Props extends TableSectionHeaderProps {\n  repoName: string;\n  repoLocation: string;\n  showLocation: boolean;\n}\n\nexport const RepoSectionHeader = (props: Props) => {\n  const {repoName, repoLocation, showLocation, ...rest} = props;\n  const isDunderRepoName = repoName === DUNDER_REPO_NAME;\n  return (\n    <TableSectionHeader {...rest}>\n      <Box flex={{alignItems: 'center', gap: 8}}>\n        <Icon name=\"folder\" color={Colors.accentGray()} />\n        <div>\n          <RepoName>{isDunderRepoName ? repoLocation : repoName}</RepoName>\n          {showLocation && !isDunderRepoName ? (\n            <RepoLocation>{`@${repoLocation}`}</RepoLocation>\n          ) : null}\n        </div>\n      </Box>\n    </TableSectionHeader>\n  );\n};\n\nconst RepoName = styled.span`\n  font-weight: 600;\n`;\n\nconst RepoLocation = styled.span`\n  font-weight: 400;\n  color: ${Colors.textLighter()};\n`;\n","import {QueryResult} from '@apollo/client';\nimport {Caption, Colors} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {RepoAddress} from './types';\nimport {CompletionType, useTraceDependency} from '../performance/TraceContext';\nimport {RepoSectionHeader} from '../runs/RepoSectionHeader';\nimport {Row} from '../ui/VirtualizedTable';\n\nexport const RepoRow = ({\n  repoAddress,\n  height,\n  start,\n  expanded,\n  onToggle,\n  onToggleAll,\n  showLocation,\n  rightElement,\n}: {\n  repoAddress: RepoAddress;\n  height: number;\n  start: number;\n  showLocation: boolean;\n  rightElement: React.ReactNode;\n  expanded: boolean;\n  onToggle: (repoAddress: RepoAddress) => void;\n  onToggleAll: (expanded: boolean) => void;\n}) => {\n  return (\n    <Row $height={height} $start={start}>\n      <RepoSectionHeader\n        repoName={repoAddress.name}\n        repoLocation={repoAddress.location}\n        expanded={expanded}\n        onClick={(e: React.MouseEvent) =>\n          e.getModifierState('Shift') ? onToggleAll(!expanded) : onToggle(repoAddress)\n        }\n        showLocation={showLocation}\n        rightElement={rightElement}\n      />\n    </Row>\n  );\n};\n\nexport const LoadingOrNone = ({\n  queryResult,\n  noneString = 'None',\n}: {\n  queryResult: QueryResult<any, any>;\n  noneString?: React.ReactNode;\n}) => {\n  const {called, loading, data} = queryResult;\n  return (\n    <div style={{color: Colors.textLight()}}>\n      {!called || (loading && !data) ? 'Loading' : noneString}\n    </div>\n  );\n};\n\nexport const CaptionText = ({children}: {children: React.ReactNode}) => {\n  return (\n    <CaptionTextContainer>\n      <Caption>{children}</Caption>\n    </CaptionTextContainer>\n  );\n};\n\nconst CaptionTextContainer = styled.div`\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ${Caption} {\n    color: ${Colors.textLight()};\n    white-space: nowrap;\n  }\n`;\n\nconst JOB_QUERY_DELAY = 100;\n\nexport const useDelayedRowQuery = (lazyQueryFn: () => void) => {\n  const dependency = useTraceDependency('DelayedRowQuery');\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      lazyQueryFn();\n      dependency.completeDependency(CompletionType.SUCCESS);\n    }, JOB_QUERY_DELAY);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [lazyQueryFn, dependency]);\n};\n"],"names":["LastRunSummary","memo","name","run","showHover","showButton","showSummary","param","status","intent","useMemo","RunStatus","SUCCESS","CANCELED","CANCELING","FAILURE","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Box","flex","direction","justifyContent","alignItems","gap","tag","tagElement","jsx","Tag","RunStatusIndicator","size","RunTime","Popover","position","interactionKind","content","div","RunStatusOverlay","hoverOpenDelay","RunStateSummary","failedStatuses","has","inProgressStatuses","StepSummaryForRun","runId","id","undefined","AnchorButton","to","concat","RepoFilterButton","allRepos","visibleRepos","toggleVisible","useContext","WorkspaceContext","open","setOpen","useState","Fragment","Dialog","canOutsideClickClose","canEscapeKeyClose","isOpen","style","width","onClose","DialogHeader","icon","label","RepoSelector","options","onBrowse","onToggle","selected","DialogFooter","padding","top","Button","onClick","outlined","Icon","rightIcon","length","props","queryResult","useQuery","STEP_SUMMARY_FOR_RUN_QUERY","variables","data","useBlockTraceOnQueryResult","pipelineRunOrError","__typename","relevantSteps","stepStats","filter","step","StepEventStatus","IN_PROGRESS","stepCount","query","endTime","qs","focusedTime","Math","floor","addQueryPrefix","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Caption","color","Colors","Link","stepKey","gql","JobsRoot","useTrackPageView","useDocumentTitle","height","overflow","PageHeader","title","Heading","JobsPageContent","__webpack_exports__","OVERVIEW_COLLAPSED_KEY","sortRepoBuckets","buckets","sort","a","b","aString","repoAddressAsHumanString","repoAddress","bString","localeCompare","visibleRepoKeys","Set","map","buildRepoAddress","option","repository","repositoryLocation","RunStatusPez","opacity","RUN_STATUS_COLORS","Pez","$color","$opacity","RunStatusPezList","fade","jobName","runs","count","max","ii","MAX_OPACITY","OverlayContainer","OverlayTitle","RunRow","CaptionMono","titleForRun","SummaryContainer","styled","withConfig","FontFamily","default","useDelayedState","ready","setReady","useEffect","timer","setTimeout","delayMsec","clearTimeout","SearchInputSpinner","tooltipContent","jsx_runtime","margin","Tooltip","placement","canShow","Spinner","purpose","findDuplicateRepoNames","uniques","duplicates","repoNames","forEach","repoName","add","validateExpandedKeys","Array","isArray","parsed","buildStorageKey","basePath","key","useRepoExpansionState","collapsedKey","allKeys","AppContext","collapsedStorageKey","collapsedKeys","setCollapsedKeys","useStateWithStorage","useCallback","_key","nextCollapsedKeys","current","delete","from","onToggleAll","expand","expandedKeys","collapsedSet","SECTION_HEADER_HEIGHT","TableSectionHeader","expanded","children","rightElement","SectionHeaderButton","$open","horizontal","button","IconWrapper","RepoSectionHeader","repoLocation","showLocation","rest","isDunderRepoName","DUNDER_REPO_NAME","RepoName","RepoLocation","span","RepoRow","start","Row","$height","$start","location","e","getModifierState","LoadingOrNone","noneString","called","loading","CaptionText","CaptionTextContainer","useDelayedRowQuery","dependency","useTraceDependency","React","lazyQueryFn","completeDependency","CompletionType"],"sourceRoot":""}