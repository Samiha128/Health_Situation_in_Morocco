{"version":3,"file":"static/chunks/4811.a134a375c836c8b5.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/instance/LastRunSummary.tsx","webpack://_N_E/../ui-core/src/instance/StepSummaryForRun.tsx","webpack://_N_E/../ui-core/src/instance/useCanSeeConfig.tsx","webpack://_N_E/../ui-core/src/instigation/InstigationTick.tsx","webpack://_N_E/../ui-core/src/instigation/InstigationUtils.tsx","webpack://_N_E/../ui-core/src/instigation/TickDetailsDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunStatusPez.tsx","webpack://_N_E/../ui-core/src/ticks/InstigationEventLogTable.tsx","webpack://_N_E/../ui-core/src/ticks/TickLogDialog.tsx","webpack://_N_E/../ui-core/src/workspace/TableSectionHeader.tsx","webpack://_N_E/../ui-core/src/runs/RepoSectionHeader.tsx","webpack://_N_E/../ui-core/src/workspace/VirtualizedWorkspaceTable.tsx"],"sourcesContent":["import {Box, Popover, Tag} from '@dagster-io/ui-components';\nimport {memo, useMemo} from 'react';\n\nimport {StepSummaryForRun} from './StepSummaryForRun';\nimport {RunStatus} from '../graphql/types';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {RunStatusOverlay} from '../runs/RunStatusPez';\nimport {failedStatuses, inProgressStatuses} from '../runs/RunStatuses';\nimport {RunStateSummary, RunTime} from '../runs/RunUtils';\nimport {RunTimeFragment} from '../runs/types/RunUtils.types';\nimport {AnchorButton} from '../ui/AnchorButton';\n\ninterface Props {\n  name: string;\n  run: RunTimeFragment;\n  showHover?: boolean;\n  showButton?: boolean;\n  showSummary?: boolean;\n}\n\nexport const LastRunSummary = memo(\n  ({name, run, showHover = false, showButton = true, showSummary = true}: Props) => {\n    const {status} = run;\n\n    const intent = useMemo(() => {\n      switch (status) {\n        case RunStatus.SUCCESS:\n          return 'success';\n        case RunStatus.CANCELED:\n        case RunStatus.CANCELING:\n        case RunStatus.FAILURE:\n          return 'danger';\n        default:\n          return 'none';\n      }\n    }, [status]);\n\n    const tag = () => {\n      const tagElement = (\n        <Tag intent={intent}>\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <RunStatusIndicator status={run.status} size={10} />\n            <RunTime run={run} />\n          </Box>\n        </Tag>\n      );\n\n      if (!showHover) {\n        return tagElement;\n      }\n\n      return (\n        <Popover\n          position=\"top\"\n          interactionKind=\"hover\"\n          content={\n            <div>\n              <RunStatusOverlay run={run} name={name} />\n            </div>\n          }\n          hoverOpenDelay={100}\n        >\n          {tagElement}\n        </Popover>\n      );\n    };\n\n    return (\n      <Box\n        flex={{\n          direction: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'flex-start',\n          gap: 16,\n        }}\n      >\n        <Box flex={{direction: 'column', alignItems: 'flex-start', gap: 4}}>\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n            {tag()}\n            {showSummary ? <RunStateSummary run={run} /> : null}\n          </Box>\n          {showSummary && (failedStatuses.has(run.status) || inProgressStatuses.has(run.status)) ? (\n            <StepSummaryForRun runId={run.id} />\n          ) : undefined}\n        </Box>\n        {showButton ? <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton> : null}\n      </Box>\n    );\n  },\n);\n","import {gql, useQuery} from '@apollo/client';\nimport {Caption, Colors} from '@dagster-io/ui-components';\nimport qs from 'qs';\nimport {useMemo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {\n  StepSummaryForRunQuery,\n  StepSummaryForRunQueryVariables,\n} from './types/StepSummaryForRun.types';\nimport {StepEventStatus} from '../graphql/types';\nimport {useBlockTraceOnQueryResult} from '../performance/TraceContext';\nimport {failedStatuses, inProgressStatuses} from '../runs/RunStatuses';\n\ninterface Props {\n  runId: string;\n}\n\nexport const StepSummaryForRun = (props: Props) => {\n  const {runId} = props;\n  const queryResult = useQuery<StepSummaryForRunQuery, StepSummaryForRunQueryVariables>(\n    STEP_SUMMARY_FOR_RUN_QUERY,\n    {\n      variables: {runId},\n    },\n  );\n  const {data} = queryResult;\n  useBlockTraceOnQueryResult(queryResult, 'StepSummaryForRunQuery');\n\n  const run = data?.pipelineRunOrError;\n  const status = run?.__typename === 'Run' ? run.status : null;\n\n  const relevantSteps = useMemo(() => {\n    if (run?.__typename !== 'Run') {\n      return [];\n    }\n\n    const {status} = run;\n    if (failedStatuses.has(status)) {\n      return run.stepStats.filter((step) => step.status === StepEventStatus.FAILURE);\n    }\n\n    if (inProgressStatuses.has(status)) {\n      return run.stepStats.filter((step) => step.status === StepEventStatus.IN_PROGRESS);\n    }\n\n    return [];\n  }, [run]);\n\n  const stepCount = relevantSteps.length;\n\n  if (!stepCount || !status) {\n    return null;\n  }\n\n  if (failedStatuses.has(status)) {\n    if (stepCount === 1) {\n      const step = relevantSteps[0]!;\n      const query = step.endTime\n        ? qs.stringify({focusedTime: Math.floor(step.endTime * 1000)}, {addQueryPrefix: true})\n        : '';\n      return (\n        <Caption color={Colors.textLight()}>\n          Failed at <Link to={`/runs/${runId}${query}`}>{step.stepKey}</Link>\n        </Caption>\n      );\n    }\n    return (\n      <Caption color={Colors.textLight()}>\n        Failed at <Link to={`/runs/${runId}`}>{stepCount} steps</Link>\n      </Caption>\n    );\n  }\n\n  if (inProgressStatuses.has(status)) {\n    if (stepCount === 1) {\n      const step = relevantSteps[0]!;\n      const query = step.endTime\n        ? qs.stringify({focusedTime: Math.floor(step.endTime * 1000)}, {addQueryPrefix: true})\n        : '';\n      return (\n        <Caption color={Colors.textLight()}>\n          In progress at <Link to={`/runs/${runId}${query}`}>{step.stepKey}</Link>\n        </Caption>\n      );\n    }\n    return (\n      <Caption color={Colors.textLight()}>\n        In progress at <Link to={`/runs/${runId}`}>{stepCount} steps</Link>\n      </Caption>\n    );\n  }\n\n  return null;\n};\n\nconst STEP_SUMMARY_FOR_RUN_QUERY = gql`\n  query StepSummaryForRunQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        status\n        stepStats {\n          endTime\n          stepKey\n          status\n        }\n      }\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\nimport {useBlockTraceOnQueryResult} from '../performance/TraceContext';\n\nexport const useCanSeeConfig = () => {\n  const queryResult = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  useBlockTraceOnQueryResult(queryResult, 'InstanceConfigHasInfoQuery');\n  return !!queryResult.data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Body,\n  Box,\n  Colors,\n  Group,\n  Icon,\n  NonIdealState,\n  Spinner,\n  Tooltip,\n} from '@dagster-io/ui-components';\n\nimport {LaunchedRunListQuery, LaunchedRunListQueryVariables} from './types/InstigationTick.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {useBlockTraceOnQueryResult} from '../performance/TraceContext';\nimport {RUN_TABLE_RUN_FRAGMENT, RunTable} from '../runs/RunTable';\n\nexport const RunList = ({runIds}: {runIds: string[]}) => {\n  const queryResult = useQuery<LaunchedRunListQuery, LaunchedRunListQueryVariables>(\n    LAUNCHED_RUN_LIST_QUERY,\n    {\n      variables: {\n        filter: {\n          runIds,\n        },\n      },\n    },\n  );\n  const {data, loading} = queryResult;\n  useBlockTraceOnQueryResult(queryResult, 'LaunchedRunListQuery');\n\n  if (loading || !data) {\n    return (\n      <Box padding={32}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  if (data.pipelineRunsOrError.__typename !== 'Runs') {\n    return (\n      <Box padding={32}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"An error occurred\"\n          description={data.pipelineRunsOrError.message}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Box padding={{bottom: 8}}>\n      <RunTable runs={data.pipelineRunsOrError.results} />\n    </Box>\n  );\n};\n\nexport const TargetedRunList = ({originRunIds}: {originRunIds?: string[]}) => {\n  if (!originRunIds || !originRunIds.length) {\n    return null;\n  }\n  return (\n    <Group direction=\"column\" spacing={16}>\n      <Box padding={12} border={{side: 'bottom', color: Colors.textLighter()}}>\n        <Body>\n          Targeted Runs\n          <Tooltip content=\"Runs this tick reacted on and reported back to.\">\n            <Icon name=\"info\" color={Colors.textLight()} />\n          </Tooltip>\n        </Body>\n        <RunList runIds={originRunIds} />\n      </Box>\n      <Box padding={12} margin={{bottom: 8}}>\n        <Body>\n          Requested Runs\n          <Tooltip content=\"Runs launched by the run requests in this tick.\">\n            <Icon name=\"info\" color={Colors.textLight()} />\n          </Tooltip>\n        </Body>\n        <NonIdealState\n          icon=\"sensors\"\n          title=\"No runs to display\"\n          description=\"This sensor does not target a pipeline or job.\"\n        />\n      </Box>\n    </Group>\n  );\n};\n\nexport const TICK_TAG_FRAGMENT = gql`\n  fragment TickTagFragment on InstigationTick {\n    id\n    status\n    timestamp\n    skipReason\n    runIds\n    runKeys\n    error {\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst LAUNCHED_RUN_LIST_QUERY = gql`\n  query LaunchedRunListQuery($filter: RunsFilter!) {\n    pipelineRunsOrError(filter: $filter, limit: 500) {\n      ... on PipelineRuns {\n        results {\n          ...RunTableRunFragment\n          id\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Colors, Group, Mono} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {TICK_TAG_FRAGMENT} from './InstigationTick';\nimport {InstigationStateFragment, RunStatusFragment} from './types/InstigationUtils.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {LastRunSummary} from '../instance/LastRunSummary';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {RUN_TIME_FRAGMENT, titleForRun} from '../runs/RunUtils';\n\nexport const InstigatedRunStatus = ({\n  instigationState,\n}: {\n  instigationState: InstigationStateFragment;\n}) => {\n  const [instigationRun] = instigationState.runs;\n  if (!instigationRun) {\n    return <span style={{color: Colors.textLight()}}>None</span>;\n  }\n  return <LastRunSummary run={instigationRun} name={instigationState.name} />;\n};\n\nexport const RunStatusLink = ({run}: {run: RunStatusFragment}) => (\n  <Group direction=\"row\" spacing={4} alignItems=\"center\">\n    <RunStatusIndicator status={run.status} />\n    <Link to={`/runs/${run.id}`} target=\"_blank\" rel=\"noreferrer\">\n      <Mono>{titleForRun({id: run.id})}</Mono>\n    </Link>\n  </Group>\n);\n\nexport const RUN_STATUS_FRAGMENT = gql`\n  fragment RunStatusFragment on Run {\n    id\n    status\n  }\n`;\n\nexport const INSTIGATION_STATE_FRAGMENT = gql`\n  fragment InstigationStateFragment on InstigationState {\n    id\n    selectorId\n    name\n    instigationType\n    status\n    hasStartPermission\n    hasStopPermission\n    repositoryName\n    repositoryLocationName\n    typeSpecificData {\n      ... on SensorData {\n        lastRunKey\n        lastCursor\n      }\n      ... on ScheduleData {\n        cronSchedule\n      }\n    }\n    runs(limit: 1) {\n      id\n      ...RunStatusFragment\n      ...RunTimeFragment\n    }\n    status\n    ticks(limit: 1) {\n      id\n      cursor\n      ...TickTagFragment\n    }\n    runningCount\n  }\n\n  ${RUN_STATUS_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n  ${TICK_TAG_FRAGMENT}\n`;\n\nexport const StatusTable = styled.table`\n  font-size: 13px;\n  border-spacing: 0;\n\n  &&&&& tr {\n    box-shadow: none;\n  }\n\n  &&&&& tbody > tr > td {\n    background: transparent;\n    box-shadow: none !important;\n    padding: 1px 0;\n  }\n\n  &&&&& tbody > tr > td:first-child {\n    color: ${Colors.textLight()};\n  }\n`;\n\nexport const DYNAMIC_PARTITIONS_REQUEST_RESULT_FRAGMENT = gql`\n  fragment DynamicPartitionsRequestResultFragment on DynamicPartitionsRequestResult {\n    partitionsDefName\n    partitionKeys\n    skippedPartitionKeys\n    type\n  }\n`;\n\nexport const HISTORY_TICK_FRAGMENT = gql`\n  fragment HistoryTick on InstigationTick {\n    id\n    tickId\n    status\n    timestamp\n    endTimestamp\n    cursor\n    instigationType\n    skipReason\n    runIds\n    runs {\n      id\n      status\n      ...RunStatusFragment\n    }\n    originRunIds\n    error {\n      ...PythonErrorFragment\n    }\n    logKey\n    ...TickTagFragment\n    dynamicPartitionsRequestResults {\n      ...DynamicPartitionsRequestResultFragment\n    }\n  }\n  ${RUN_STATUS_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${TICK_TAG_FRAGMENT}\n  ${DYNAMIC_PARTITIONS_REQUEST_RESULT_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport 'chartjs-adapter-date-fns';\nimport {\n  Box,\n  Button,\n  ButtonLink,\n  Dialog,\n  DialogFooter,\n  DialogHeader,\n  MiddleTruncate,\n  Spinner,\n  Subtitle2,\n  Tab,\n  Table,\n  Tabs,\n  Tag,\n} from '@dagster-io/ui-components';\nimport {useMemo, useState} from 'react';\n\nimport {RunList, TargetedRunList} from './InstigationTick';\nimport {HISTORY_TICK_FRAGMENT} from './InstigationUtils';\nimport {HistoryTickFragment} from './types/InstigationUtils.types';\nimport {SelectedTickQuery, SelectedTickQueryVariables} from './types/TickDetailsDialog.types';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {formatElapsedTimeWithoutMsec} from '../app/Util';\nimport {Timestamp} from '../app/time/Timestamp';\nimport {AssetDaemonTickFragment} from '../assets/auto-materialization/types/AssetDaemonTicksQuery.types';\nimport {\n  DynamicPartitionsRequestResult,\n  DynamicPartitionsRequestType,\n  InstigationSelector,\n  InstigationTickStatus,\n} from '../graphql/types';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {QueryfulTickLogsTable} from '../ticks/TickLogDialog';\n\ninterface DialogProps extends InnerProps {\n  onClose: () => void;\n  isOpen: boolean;\n}\n\nexport const TickDetailsDialog = ({tickId, isOpen, instigationSelector, onClose}: DialogProps) => {\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onClose}\n      style={{width: '80vw', maxWidth: '1200px', minWidth: '600px'}}\n    >\n      <TickDetailsDialogImpl tickId={tickId} instigationSelector={instigationSelector} />\n      {/* The logs table uses z-index for the column lines. Create a new stacking index\n      for the footer so that the lines don't sit above it. */}\n      <div style={{zIndex: 1}}>\n        <DialogFooter topBorder>\n          <Button onClick={onClose}>Close</Button>\n        </DialogFooter>\n      </div>\n    </Dialog>\n  );\n};\n\ninterface InnerProps {\n  tickId: number | undefined;\n  instigationSelector: InstigationSelector;\n}\n\nconst TickDetailsDialogImpl = ({tickId, instigationSelector}: InnerProps) => {\n  const [activeTab, setActiveTab] = useState<'result' | 'logs'>('result');\n\n  const {data} = useQuery<SelectedTickQuery, SelectedTickQueryVariables>(JOB_SELECTED_TICK_QUERY, {\n    variables: {instigationSelector, tickId: tickId || 0},\n    skip: !tickId,\n  });\n\n  const tick =\n    data?.instigationStateOrError.__typename === 'InstigationState'\n      ? data?.instigationStateOrError.tick\n      : undefined;\n\n  const [addedPartitionRequests, deletedPartitionRequests] = useMemo(() => {\n    const added = tick?.dynamicPartitionsRequestResults.filter(\n      (request) =>\n        request.type === DynamicPartitionsRequestType.ADD_PARTITIONS &&\n        request.partitionKeys?.length,\n    );\n    const deleted = tick?.dynamicPartitionsRequestResults.filter(\n      (request) =>\n        request.type === DynamicPartitionsRequestType.DELETE_PARTITIONS &&\n        request.partitionKeys?.length,\n    );\n    return [added, deleted];\n  }, [tick?.dynamicPartitionsRequestResults]);\n\n  if (!tick) {\n    return (\n      <Box style={{padding: 32}} flex={{alignItems: 'center', justifyContent: 'center'}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <DialogHeader\n        label={\n          <TimestampDisplay\n            timestamp={tick.timestamp}\n            timeFormat={{showTimezone: false, showSeconds: true}}\n          />\n        }\n      />\n      <Box padding={{vertical: 12, horizontal: 24}} border=\"bottom\">\n        <TickDetailSummary tick={tick} />\n      </Box>\n      <Box padding={{horizontal: 24}} border=\"bottom\">\n        <Tabs selectedTabId={activeTab} onChange={setActiveTab}>\n          <Tab id=\"result\" title=\"Result\" />\n          <Tab id=\"logs\" title=\"Logs\" />\n        </Tabs>\n      </Box>\n      {activeTab === 'result' ? (\n        <div style={{height: '500px', overflowY: 'auto'}}>\n          {tick.runIds.length ? (\n            <>\n              <Box padding={{vertical: 12, horizontal: 24}} border=\"bottom\">\n                <Subtitle2>Requested Runs</Subtitle2>\n              </Box>\n              <RunList runIds={tick.runIds} />\n            </>\n          ) : tick.originRunIds.length ? (\n            <TargetedRunList originRunIds={tick.originRunIds} />\n          ) : null}\n          {addedPartitionRequests?.length ? (\n            <>\n              <Box padding={{vertical: 12, horizontal: 24}} border=\"bottom\">\n                <Subtitle2>Added partitions</Subtitle2>\n              </Box>\n              <PartitionsTable partitions={addedPartitionRequests} />\n            </>\n          ) : null}\n          {deletedPartitionRequests?.length ? (\n            <>\n              <Box padding={{vertical: 12, horizontal: 24}} border=\"bottom\">\n                <Subtitle2>Deleted partitions</Subtitle2>\n              </Box>\n              <PartitionsTable partitions={deletedPartitionRequests} />\n            </>\n          ) : null}\n          {tick.error ? (\n            <Box padding={24}>\n              <PythonErrorInfo error={tick.error} />\n            </Box>\n          ) : null}\n          {tick.skipReason ? (\n            <Box padding={24}>\n              <strong>Skip reason:</strong> {tick.skipReason}\n            </Box>\n          ) : null}\n        </div>\n      ) : null}\n      {activeTab === 'logs' ? (\n        <QueryfulTickLogsTable instigationSelector={instigationSelector} tick={tick} />\n      ) : null}\n    </>\n  );\n};\n\nexport function TickDetailSummary({tick}: {tick: HistoryTickFragment | AssetDaemonTickFragment}) {\n  const intent = useMemo(() => {\n    switch (tick?.status) {\n      case InstigationTickStatus.FAILURE:\n        return 'danger';\n      case InstigationTickStatus.STARTED:\n        return 'primary';\n      case InstigationTickStatus.SUCCESS:\n        return 'success';\n    }\n    return undefined;\n  }, [tick]);\n\n  const isAssetDaemonTick = 'requestedAssetMaterializationCount' in tick;\n\n  return (\n    <>\n      <div style={{display: 'grid', gridTemplateColumns: 'repeat(3, minmax(0, 1fr))', gap: 12}}>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <Subtitle2>Status</Subtitle2>\n          <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n            <Tag intent={intent}>\n              {tick.status === InstigationTickStatus.STARTED ? (\n                'Evaluating…'\n              ) : (\n                <>\n                  {(isAssetDaemonTick\n                    ? tick.requestedAssetMaterializationCount\n                    : tick.runIds.length) ?? 0}{' '}\n                  requested\n                </>\n              )}\n            </Tag>\n            {tick.error ? (\n              <ButtonLink\n                onClick={() => {\n                  showCustomAlert({\n                    title: 'Tick error',\n                    body: <PythonErrorInfo error={tick.error!} />,\n                  });\n                }}\n              >\n                View error\n              </ButtonLink>\n            ) : null}\n          </Box>\n        </Box>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <Subtitle2>Timestamp</Subtitle2>\n          <div>\n            {tick ? (\n              <Timestamp timestamp={{unix: tick.timestamp}} timeFormat={{showTimezone: true}} />\n            ) : (\n              '–'\n            )}\n          </div>\n        </Box>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <Subtitle2>Duration</Subtitle2>\n          <div>\n            {tick?.endTimestamp\n              ? formatElapsedTimeWithoutMsec(tick.endTimestamp * 1000 - tick.timestamp * 1000)\n              : '\\u2013'}\n          </div>\n        </Box>\n      </div>\n    </>\n  );\n}\n\nfunction PartitionsTable({partitions}: {partitions: DynamicPartitionsRequestResult[]}) {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Partition definition</th>\n          <th>Partition</th>\n        </tr>\n      </thead>\n      <tbody>\n        {partitions.flatMap(\n          (partition) =>\n            partition.partitionKeys?.map((key) => (\n              <tr key={key}>\n                <td>\n                  <MiddleTruncate text={partition.partitionsDefName} />\n                </td>\n                <td>\n                  <MiddleTruncate text={key} />\n                </td>\n              </tr>\n            )),\n        )}\n      </tbody>\n    </Table>\n  );\n}\n\nconst JOB_SELECTED_TICK_QUERY = gql`\n  query SelectedTickQuery($instigationSelector: InstigationSelector!, $tickId: BigInt!) {\n    instigationStateOrError(instigationSelector: $instigationSelector) {\n      ... on InstigationState {\n        id\n        tick(tickId: $tickId) {\n          id\n          ...HistoryTick\n        }\n      }\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${HISTORY_TICK_FRAGMENT}\n`;\n","import {Box, CaptionMono, Colors, FontFamily, Popover} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {RunStatusIndicator} from './RunStatusDots';\nimport {RUN_STATUS_COLORS} from './RunStatusTag';\nimport {failedStatuses, inProgressStatuses} from './RunStatuses';\nimport {RunStateSummary, RunTime, titleForRun} from './RunUtils';\nimport {RunTimeFragment} from './types/RunUtils.types';\nimport {RunStatus} from '../graphql/types';\nimport {StepSummaryForRun} from '../instance/StepSummaryForRun';\n\nconst MIN_OPACITY = 0.2;\nconst MAX_OPACITY = 1.0;\nconst MIN_OPACITY_STEPS = 3;\n\ninterface Props {\n  opacity?: number;\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusPez = (props: Props) => {\n  const {status, opacity = MAX_OPACITY} = props;\n  const color = RUN_STATUS_COLORS[status];\n\n  return <Pez $color={color} $opacity={opacity} />;\n};\n\ninterface ListProps {\n  fade: boolean;\n  jobName: string;\n  runs: RunTimeFragment[];\n}\n\nexport const RunStatusPezList = (props: ListProps) => {\n  const {fade, jobName, runs} = props;\n  const count = runs.length;\n  const countForStep = Math.max(MIN_OPACITY_STEPS, count);\n  const step = (MAX_OPACITY - MIN_OPACITY) / countForStep;\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 2}}>\n      {runs.map((run, ii) => (\n        <Popover\n          key={run.id}\n          position=\"top\"\n          interactionKind=\"hover\"\n          content={\n            <div>\n              <RunStatusOverlay run={run} name={jobName} />\n            </div>\n          }\n          hoverOpenDelay={100}\n        >\n          <RunStatusPez\n            key={run.id}\n            runId={run.id}\n            status={run.status}\n            opacity={fade ? MAX_OPACITY - (count - ii - 1) * step : 1.0}\n          />\n        </Popover>\n      ))}\n    </Box>\n  );\n};\n\ninterface OverlayProps {\n  run: RunTimeFragment;\n  name: string;\n}\n\nexport const RunStatusOverlay = ({name, run}: OverlayProps) => {\n  return (\n    <OverlayContainer>\n      <OverlayTitle>{name}</OverlayTitle>\n      <RunRow>\n        <Box flex={{alignItems: 'center', direction: 'row', gap: 8}}>\n          <RunStatusIndicator status={run.status} />\n          <Link to={`/runs/${run.id}`}>\n            <CaptionMono>{titleForRun(run)}</CaptionMono>\n          </Link>\n        </Box>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          <RunStateSummary run={run} />\n        </Box>\n      </RunRow>\n      {failedStatuses.has(run.status) || inProgressStatuses.has(run.status) ? (\n        <SummaryContainer>\n          <StepSummaryForRun runId={run.id} />\n        </SummaryContainer>\n      ) : null}\n    </OverlayContainer>\n  );\n};\n\nconst OverlayContainer = styled.div`\n  padding: 4px;\n  font-size: 12px;\n  width: 220px;\n`;\n\nconst OverlayTitle = styled.div`\n  padding: 8px;\n  box-shadow: inset 0 -1px ${Colors.keylineDefault()};\n  font-family: ${FontFamily.default};\n  font-size: 14px;\n  font-weight: 500;\n  color: ${Colors.textDefault()};\n  max-width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  min-width: 0px;\n`;\n\nconst RunRow = styled.div`\n  padding: 8px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst SummaryContainer = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 4px 8px 8px;\n\n  :empty {\n    display: none;\n  }\n`;\n\nconst Pez = styled.div<{$color: string; $opacity: number}>`\n  background-color: ${({$color}) => $color};\n  border-radius: 2px;\n  height: 16px;\n  opacity: ${({$opacity}) => $opacity};\n  width: 8px;\n`;\n","import {gql} from '@apollo/client';\nimport {Box} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {useContext, useEffect, useRef} from 'react';\n\nimport {InstigationEventLogFragment} from './types/InstigationEventLogTable.types';\nimport {EventTypeColumn, Row as LogsRow, TimestampColumn} from '../runs/LogsRowComponents';\nimport {\n  ColumnWidthsContext,\n  ColumnWidthsProvider,\n  Header,\n  HeaderContainer,\n  HeadersContainer,\n} from '../runs/LogsScrollingTableHeader';\nimport {Container, Inner, Row} from '../ui/VirtualizedTable';\n\nconst Headers = () => {\n  const widths = useContext(ColumnWidthsContext);\n  return (\n    <HeadersContainer>\n      <Header\n        width={widths.eventType}\n        onResize={(width) => widths.onChange({...widths, eventType: width})}\n      >\n        Type\n      </Header>\n      <Header\n        width={widths.timestamp}\n        onResize={(width) => widths.onChange({...widths, timestamp: width})}\n      >\n        Timestamp\n      </Header>\n      <HeaderContainer style={{flex: 1}}>Event</HeaderContainer>\n    </HeadersContainer>\n  );\n};\n\nexport const InstigationEventLogTable = ({events}: {events: InstigationEventLogFragment[]}) => {\n  const parentRef = useRef<HTMLDivElement | null>(null);\n\n  const rowVirtualizer = useVirtualizer({\n    count: events.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: () => 28,\n    overscan: 10,\n  });\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const items = rowVirtualizer.getVirtualItems();\n  const isAtBottom = useRef(true);\n\n  useEffect(() => {\n    const el = parentRef.current;\n    if (!el || !('scrollTo' in el)) {\n      return; // scrollTo is not present in jest test\n    }\n    if (isAtBottom.current && events.length) {\n      el.scrollTo(0, el.scrollHeight);\n    }\n    const onScroll = () => {\n      isAtBottom.current = el.scrollTop >= el.scrollHeight - el.clientHeight;\n    };\n    el.addEventListener('scroll', onScroll);\n    return () => el.removeEventListener('scroll', onScroll);\n  });\n\n  return (\n    <ColumnWidthsProvider onWidthsChanged={() => {}}>\n      <Headers />\n      <Container ref={parentRef} style={{position: 'relative'}}>\n        <Inner $totalHeight={totalHeight}>\n          {items.map(({index, key, size, start}) => {\n            const event = events[index]!;\n            return (\n              <Row key={key} $start={start} $height={size}>\n                <LogsRow\n                  level={event.level}\n                  highlighted={false}\n                  data-index={index}\n                  ref={rowVirtualizer.measureElement}\n                  style={{height: 'auto'}}\n                >\n                  <EventTypeColumn>\n                    <span style={{marginLeft: 8}}>{event.level}</span>\n                  </EventTypeColumn>\n                  <TimestampColumn time={event.timestamp} />\n                  <Box padding={{horizontal: 12, vertical: 4}} style={{flex: 1}}>\n                    {event.message}\n                  </Box>\n                </LogsRow>\n              </Row>\n            );\n          })}\n        </Inner>\n      </Container>\n    </ColumnWidthsProvider>\n  );\n};\n\nexport const INSTIGATION_EVENT_LOG_FRAGMENT = gql`\n  fragment InstigationEventLog on InstigationEvent {\n    message\n    timestamp\n    level\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  ExternalAnchorButton,\n  Icon,\n  NonIdealState,\n} from '@dagster-io/ui-components';\n\nimport {INSTIGATION_EVENT_LOG_FRAGMENT, InstigationEventLogTable} from './InstigationEventLogTable';\nimport {TickLogEventsQuery, TickLogEventsQueryVariables} from './types/TickLogDialog.types';\nimport {InstigationSelector} from '../graphql/types';\nimport {HistoryTickFragment} from '../instigation/types/InstigationUtils.types';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\n\nexport const TickLogDialog = ({\n  tick,\n  instigationSelector,\n  onClose,\n}: {\n  tick: HistoryTickFragment;\n  instigationSelector: InstigationSelector;\n  onClose: () => void;\n}) => {\n  const {data} = useQuery<TickLogEventsQuery, TickLogEventsQueryVariables>(TICK_LOG_EVENTS_QUERY, {\n    variables: {instigationSelector, tickId: Number(tick.tickId)},\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const events =\n    data?.instigationStateOrError.__typename === 'InstigationState' &&\n    data?.instigationStateOrError.tick\n      ? data?.instigationStateOrError.tick.logEvents.events\n      : undefined;\n\n  return (\n    <Dialog\n      isOpen={!!events}\n      onClose={onClose}\n      style={{width: '70vw', display: 'flex'}}\n      title={tick ? <TimestampDisplay timestamp={tick.timestamp} /> : null}\n    >\n      <DialogBody>\n        {events && events.length ? (\n          <InstigationEventLogTable events={events} />\n        ) : (\n          <Box\n            flex={{justifyContent: 'center', alignItems: 'center'}}\n            style={{flex: 1, color: Colors.textLight()}}\n          >\n            No logs available\n          </Box>\n        )}\n      </DialogBody>\n      <DialogFooter>\n        <Button intent=\"primary\" onClick={onClose}>\n          OK\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\ninterface TickLogTableProps {\n  tick: HistoryTickFragment;\n  instigationSelector: InstigationSelector;\n}\n\nexport const QueryfulTickLogsTable = ({instigationSelector, tick}: TickLogTableProps) => {\n  const {data, loading} = useQuery<TickLogEventsQuery, TickLogEventsQueryVariables>(\n    TICK_LOG_EVENTS_QUERY,\n    {\n      variables: {instigationSelector, tickId: Number(tick.tickId)},\n    },\n  );\n\n  const events =\n    data?.instigationStateOrError.__typename === 'InstigationState' &&\n    data?.instigationStateOrError.tick\n      ? data?.instigationStateOrError.tick.logEvents.events\n      : undefined;\n\n  if (events && events.length) {\n    return (\n      <Box style={{height: 500}} flex={{direction: 'column'}}>\n        <InstigationEventLogTable events={events} />\n      </Box>\n    );\n  }\n\n  const tickStatus =\n    data?.instigationStateOrError.__typename === 'InstigationState'\n      ? data?.instigationStateOrError.tick.status\n      : undefined;\n  const instigationType =\n    data?.instigationStateOrError.__typename === 'InstigationState'\n      ? data?.instigationStateOrError.instigationType\n      : undefined;\n  const instigationLoggingDocsUrl =\n    instigationType === 'SENSOR'\n      ? 'https://docs.dagster.io/concepts/partitions-schedules-sensors/sensors#logging-in-sensors'\n      : instigationType === 'SCHEDULE'\n      ? 'https://docs.dagster.io/concepts/partitions-schedules-sensors/schedules#logging-in-schedules'\n      : undefined;\n\n  return (\n    <Box\n      style={{height: 500}}\n      flex={{justifyContent: 'center', alignItems: 'center'}}\n      padding={{vertical: 48}}\n    >\n      {loading ? (\n        'Loading logs…'\n      ) : (\n        <NonIdealState\n          icon=\"no-results\"\n          title=\"No logs to display\"\n          description={\n            <Box flex={{direction: 'column', gap: 12}}>\n              <div>\n                Your evaluation did not emit any logs. To learn how to emit logs in your evaluation,\n                visit the documentation for more information.\n              </div>\n              {tickStatus === 'FAILURE' && (\n                <>\n                  <div>\n                    For failed evaluations, logs will only be displayed if your Dagster and Dagster\n                    Cloud agent versions 1.5.14 or higher.\n                  </div>\n                  <div>Upgrade your Dagster versions to view logs for failed evaluations.</div>\n                </>\n              )}\n            </Box>\n          }\n          action={\n            instigationLoggingDocsUrl && (\n              <ExternalAnchorButton\n                href={instigationLoggingDocsUrl}\n                rightIcon={<Icon name=\"open_in_new\" />}\n              >\n                View documentation\n              </ExternalAnchorButton>\n            )\n          }\n        />\n      )}\n    </Box>\n  );\n};\n\nconst TICK_LOG_EVENTS_QUERY = gql`\n  query TickLogEventsQuery($instigationSelector: InstigationSelector!, $tickId: BigInt!) {\n    instigationStateOrError(instigationSelector: $instigationSelector) {\n      ... on InstigationState {\n        id\n        instigationType\n        tick(tickId: $tickId) {\n          id\n          status\n          timestamp\n          logEvents {\n            events {\n              ...InstigationEventLog\n            }\n          }\n        }\n      }\n    }\n  }\n  ${INSTIGATION_EVENT_LOG_FRAGMENT}\n`;\n","import {Box, Colors, Icon, IconWrapper} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nexport const SECTION_HEADER_HEIGHT = 32;\n\nexport interface TableSectionHeaderProps {\n  expanded: boolean;\n  onClick: (e: React.MouseEvent) => void;\n  children?: React.ReactNode;\n  rightElement?: React.ReactNode;\n}\n\nexport const TableSectionHeader = (props: TableSectionHeaderProps) => {\n  const {expanded, onClick, children, rightElement} = props;\n  return (\n    <SectionHeaderButton $open={expanded} onClick={onClick}>\n      <Box\n        flex={{alignItems: 'center', justifyContent: 'space-between'}}\n        padding={{horizontal: 24}}\n      >\n        {children}\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          {rightElement}\n          <Box margin={{top: 2}}>\n            <Icon name=\"arrow_drop_down\" />\n          </Box>\n        </Box>\n      </Box>\n    </SectionHeaderButton>\n  );\n};\n\nconst SectionHeaderButton = styled.button<{$open: boolean}>`\n  background-color: ${Colors.backgroundLight()};\n  border: 0;\n  box-shadow:\n    inset 0px -1px 0 ${Colors.keylineDefault()},\n    inset 0px 1px 0 ${Colors.keylineDefault()};\n  color: ${Colors.textLight()};\n  cursor: pointer;\n  display: block;\n  padding: 0;\n  width: 100%;\n  margin: 0;\n  height: ${SECTION_HEADER_HEIGHT}px;\n  text-align: left;\n\n  :focus,\n  :active {\n    outline: none;\n  }\n\n  :hover {\n    background-color: ${Colors.backgroundLightHover()};\n  }\n\n  ${IconWrapper}[aria-label=\"arrow_drop_down\"] {\n    transition: transform 100ms linear;\n    ${({$open}) => ($open ? null : `transform: rotate(-90deg);`)}\n  }\n`;\n","import {Box, Colors, Icon} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {TableSectionHeader, TableSectionHeaderProps} from '../workspace/TableSectionHeader';\nimport {DUNDER_REPO_NAME} from '../workspace/buildRepoAddress';\n\ninterface Props extends TableSectionHeaderProps {\n  repoName: string;\n  repoLocation: string;\n  showLocation: boolean;\n}\n\nexport const RepoSectionHeader = (props: Props) => {\n  const {repoName, repoLocation, showLocation, ...rest} = props;\n  const isDunderRepoName = repoName === DUNDER_REPO_NAME;\n  return (\n    <TableSectionHeader {...rest}>\n      <Box flex={{alignItems: 'center', gap: 8}}>\n        <Icon name=\"folder\" color={Colors.accentGray()} />\n        <div>\n          <RepoName>{isDunderRepoName ? repoLocation : repoName}</RepoName>\n          {showLocation && !isDunderRepoName ? (\n            <RepoLocation>{`@${repoLocation}`}</RepoLocation>\n          ) : null}\n        </div>\n      </Box>\n    </TableSectionHeader>\n  );\n};\n\nconst RepoName = styled.span`\n  font-weight: 600;\n`;\n\nconst RepoLocation = styled.span`\n  font-weight: 400;\n  color: ${Colors.textLighter()};\n`;\n","import {QueryResult} from '@apollo/client';\nimport {Caption, Colors} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {RepoAddress} from './types';\nimport {CompletionType, useTraceDependency} from '../performance/TraceContext';\nimport {RepoSectionHeader} from '../runs/RepoSectionHeader';\nimport {Row} from '../ui/VirtualizedTable';\n\nexport const RepoRow = ({\n  repoAddress,\n  height,\n  start,\n  expanded,\n  onToggle,\n  onToggleAll,\n  showLocation,\n  rightElement,\n}: {\n  repoAddress: RepoAddress;\n  height: number;\n  start: number;\n  showLocation: boolean;\n  rightElement: React.ReactNode;\n  expanded: boolean;\n  onToggle: (repoAddress: RepoAddress) => void;\n  onToggleAll: (expanded: boolean) => void;\n}) => {\n  return (\n    <Row $height={height} $start={start}>\n      <RepoSectionHeader\n        repoName={repoAddress.name}\n        repoLocation={repoAddress.location}\n        expanded={expanded}\n        onClick={(e: React.MouseEvent) =>\n          e.getModifierState('Shift') ? onToggleAll(!expanded) : onToggle(repoAddress)\n        }\n        showLocation={showLocation}\n        rightElement={rightElement}\n      />\n    </Row>\n  );\n};\n\nexport const LoadingOrNone = ({\n  queryResult,\n  noneString = 'None',\n}: {\n  queryResult: QueryResult<any, any>;\n  noneString?: React.ReactNode;\n}) => {\n  const {called, loading, data} = queryResult;\n  return (\n    <div style={{color: Colors.textLight()}}>\n      {!called || (loading && !data) ? 'Loading' : noneString}\n    </div>\n  );\n};\n\nexport const CaptionText = ({children}: {children: React.ReactNode}) => {\n  return (\n    <CaptionTextContainer>\n      <Caption>{children}</Caption>\n    </CaptionTextContainer>\n  );\n};\n\nconst CaptionTextContainer = styled.div`\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ${Caption} {\n    color: ${Colors.textLight()};\n    white-space: nowrap;\n  }\n`;\n\nconst JOB_QUERY_DELAY = 100;\n\nexport const useDelayedRowQuery = (lazyQueryFn: () => void) => {\n  const dependency = useTraceDependency('DelayedRowQuery');\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      lazyQueryFn();\n      dependency.completeDependency(CompletionType.SUCCESS);\n    }, JOB_QUERY_DELAY);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [lazyQueryFn, dependency]);\n};\n"],"names":["LastRunSummary","memo","name","run","showHover","showButton","showSummary","param","status","intent","useMemo","RunStatus","SUCCESS","CANCELED","CANCELING","FAILURE","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Box","flex","direction","justifyContent","alignItems","gap","tag","tagElement","jsx","Tag","RunStatusIndicator","size","RunTime","Popover","position","interactionKind","content","div","RunStatusOverlay","hoverOpenDelay","RunStateSummary","failedStatuses","has","inProgressStatuses","StepSummaryForRun","runId","id","undefined","AnchorButton","to","concat","props","queryResult","useQuery","STEP_SUMMARY_FOR_RUN_QUERY","variables","data","useBlockTraceOnQueryResult","pipelineRunOrError","__typename","relevantSteps","stepStats","filter","step","StepEventStatus","IN_PROGRESS","stepCount","length","query","endTime","qs","focusedTime","Math","floor","addQueryPrefix","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Caption","color","Colors","Link","stepKey","gql","useCanSeeConfig","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","RunList","runIds","LAUNCHED_RUN_LIST_QUERY","loading","padding","Spinner","purpose","pipelineRunsOrError","NonIdealState","icon","title","description","message","bottom","RunTable","runs","results","TargetedRunList","originRunIds","Group","spacing","border","side","Body","Tooltip","Icon","margin","TICK_TAG_FRAGMENT","PYTHON_ERROR_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","RunStatusLink","target","rel","Mono","titleForRun","RUN_STATUS_FRAGMENT","INSTIGATION_STATE_FRAGMENT","RUN_TIME_FRAGMENT","StatusTable","styled","table","withConfig","DYNAMIC_PARTITIONS_REQUEST_RESULT_FRAGMENT","HISTORY_TICK_FRAGMENT","TickDetailsDialog","tickId","isOpen","instigationSelector","onClose","Dialog","style","width","maxWidth","minWidth","TickDetailsDialogImpl","zIndex","DialogFooter","topBorder","Button","onClick","activeTab","setActiveTab","useState","JOB_SELECTED_TICK_QUERY","skip","tick","instigationStateOrError","addedPartitionRequests","deletedPartitionRequests","dynamicPartitionsRequestResults","request","type","DynamicPartitionsRequestType","ADD_PARTITIONS","partitionKeys","DELETE_PARTITIONS","Fragment","DialogHeader","label","TimestampDisplay","timestamp","timeFormat","showTimezone","showSeconds","vertical","horizontal","TickDetailSummary","Tabs","selectedTabId","onChange","Tab","height","overflowY","Subtitle2","PartitionsTable","partitions","error","PythonErrorInfo","skipReason","strong","QueryfulTickLogsTable","isAssetDaemonTick","InstigationTickStatus","STARTED","display","gridTemplateColumns","requestedAssetMaterializationCount","ButtonLink","showCustomAlert","body","Timestamp","unix","endTimestamp","formatElapsedTimeWithoutMsec","Table","thead","tr","th","tbody","flatMap","partition","map","td","MiddleTruncate","text","partitionsDefName","key","RunStatusPez","opacity","RUN_STATUS_COLORS","Pez","$color","$opacity","RunStatusPezList","fade","jobName","count","max","ii","MAX_OPACITY","OverlayContainer","OverlayTitle","RunRow","CaptionMono","SummaryContainer","FontFamily","default","Headers","widths","useContext","ColumnWidthsContext","HeadersContainer","Header","eventType","onResize","HeaderContainer","InstigationEventLogTable","events","parentRef","useRef","rowVirtualizer","useVirtualizer","getScrollElement","current","estimateSize","overscan","totalHeight","getTotalSize","items","getVirtualItems","isAtBottom","useEffect","el","scrollTo","scrollHeight","onScroll","scrollTop","clientHeight","addEventListener","removeEventListener","ColumnWidthsProvider","onWidthsChanged","Container","ref","Inner","$totalHeight","index","start","event","Row","$start","$height","LogsRow","level","highlighted","data-index","measureElement","EventTypeColumn","span","marginLeft","TimestampColumn","time","INSTIGATION_EVENT_LOG_FRAGMENT","TickLogDialog","TICK_LOG_EVENTS_QUERY","Number","notifyOnNetworkStatusChange","logEvents","DialogBody","tickStatus","instigationType","instigationLoggingDocsUrl","action","ExternalAnchorButton","href","rightIcon","SECTION_HEADER_HEIGHT","TableSectionHeader","expanded","children","rightElement","SectionHeaderButton","$open","top","button","IconWrapper","RepoSectionHeader","repoName","repoLocation","showLocation","rest","isDunderRepoName","DUNDER_REPO_NAME","jsx_runtime","RepoName","RepoLocation","RepoRow","repoAddress","onToggle","onToggleAll","location","e","getModifierState","LoadingOrNone","noneString","called","CaptionText","CaptionTextContainer","useDelayedRowQuery","dependency","useTraceDependency","React","timer","setTimeout","lazyQueryFn","completeDependency","CompletionType","clearTimeout"],"sourceRoot":""}