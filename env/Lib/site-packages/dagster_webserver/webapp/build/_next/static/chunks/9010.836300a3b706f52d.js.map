{"version":3,"file":"static/chunks/9010.836300a3b706f52d.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/runs/AssetTagCollections.tsx","webpack://_N_E/../ui-core/src/runs/CreatedByTag.tsx","webpack://_N_E/../ui-core/src/runs/DeletionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunConfigDialog.tsx","webpack://_N_E/../ui-core/src/runs/ReexecutionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunActionsMenu.tsx","webpack://_N_E/../ui-core/src/instance/useRunQueueConfig.tsx","webpack://_N_E/../ui-core/src/runs/QueuedRunCriteriaDialog.tsx","webpack://_N_E/../ui-core/src/runs/useTagPinning.tsx","webpack://_N_E/../ui-core/src/runs/RunRow.tsx","webpack://_N_E/../ui-core/src/runs/ShowAndHideRunTags.mp4","webpack://_N_E/../ui-core/src/runs/RunTable.tsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  MiddleTruncate,\n  Tag,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {\n  assetDetailsPathForAssetCheck,\n  assetDetailsPathForKey,\n} from '../assets/assetDetailsPathForKey';\nimport {globalAssetGraphPathForAssetsAndDescendants} from '../assets/globalAssetGraphPathToString';\nimport {AssetKey} from '../assets/types';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {VirtualizedItemListForDialog} from '../ui/VirtualizedItemListForDialog';\n\nconst renderItemAssetKey = (assetKey: AssetKey) => (\n  <Link to={assetDetailsPathForKey(assetKey)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={displayNameForAssetKey(assetKey)} />\n  </Link>\n);\n\nconst renderItemAssetCheck = (assetCheck: Check) => (\n  <Link to={assetDetailsPathForAssetCheck(assetCheck)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={labelForAssetCheck(assetCheck)} />\n  </Link>\n);\n\nconst labelForAssetCheck = (check: Check) => {\n  return `${check.name} on ${displayNameForAssetKey(check.assetKey)}`;\n};\n\nfunction useShowMoreDialog<T>(\n  dialogTitle: string,\n  items: T[] | null,\n  renderItem: (item: T) => React.ReactNode,\n) {\n  const [showMore, setShowMore] = React.useState(false);\n\n  const dialog =\n    !!items && items.length > 1 ? (\n      <Dialog\n        title={dialogTitle}\n        onClose={() => setShowMore(false)}\n        style={{minWidth: '400px', width: '50vw', maxWidth: '800px', maxHeight: '70vh'}}\n        isOpen={showMore}\n      >\n        <div style={{height: '500px', overflow: 'hidden'}}>\n          <VirtualizedItemListForDialog items={items} renderItem={renderItem} />\n        </div>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n            Done\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    ) : undefined;\n\n  return {dialog, showMore, setShowMore};\n}\n\ninterface AssetKeyTagCollectionProps {\n  assetKeys: AssetKey[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}\n\nexport const AssetKeyTagCollection = React.memo((props: AssetKeyTagCollectionProps) => {\n  const {assetKeys, useTags, dialogTitle = 'Assets in run'} = props;\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetKeys, renderItemAssetKey);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  if (assetKeys.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const assetKey = assetKeys[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[\n            {\n              label: 'View asset',\n              to: assetDetailsPathForKey(assetKey),\n            },\n            {\n              label: 'View downstream lineage',\n              to: assetDetailsPathForKey(assetKey, {\n                view: 'lineage',\n                lineageScope: 'downstream',\n              }),\n            },\n          ]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForKey(assetKey)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.accentGray()} name=\"asset\" size={16} />\n                {displayNameForAssetKey(assetKey)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n          {\n            label: 'View downstream lineage',\n            to: globalAssetGraphPathForAssetsAndDescendants(assetKeys),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset\">\n            {assetKeys.length} assets\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)} underline=\"hover\">\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.accentGray()} name=\"asset\" size={16} />\n              {`${assetKeys.length} assets`}\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n\ntype Check = {name: string; assetKey: AssetKey};\n\ninterface AssetCheckTagCollectionProps {\n  assetChecks: Check[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}\n\nexport const AssetCheckTagCollection = React.memo((props: AssetCheckTagCollectionProps) => {\n  const {assetChecks, useTags, dialogTitle = 'Asset checks in run'} = props;\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetChecks, renderItemAssetCheck);\n\n  if (!assetChecks || !assetChecks.length) {\n    return null;\n  }\n\n  if (assetChecks.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const check = assetChecks[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[{label: 'View asset check', to: assetDetailsPathForAssetCheck(check)}]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset_check\">\n              {labelForAssetCheck(check)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForAssetCheck(check)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.accentGray()} name=\"asset_check\" size={16} />\n                {labelForAssetCheck(check)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset_check\">\n            {assetChecks.length} asset checks\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)} underline=\"hover\">\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.accentGray()} name=\"asset_check\" size={16} />\n              {`${assetChecks.length} asset checks`}\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n","import {Box, Tag} from '@dagster-io/ui-components';\nimport {memo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {DagsterTag} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTagsFragment} from './types/RunTable.types';\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ntype Props = {\n  repoAddress?: RepoAddress | null;\n  tags: RunTagsFragment[];\n  onAddTag?: (token: RunFilterToken) => void;\n};\n\nexport const CreatedByTagCell = memo(({repoAddress, tags, onAddTag}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>\n      <CreatedByTag repoAddress={repoAddress} tags={tags} onAddTag={onAddTag} />\n    </Box>\n  );\n});\n\ntype TagType =\n  | {\n      type: 'user' | 'schedule' | 'sensor' | 'auto-materialize' | 'auto-observe';\n      tag: RunTagsFragment;\n    }\n  | {type: 'manual'};\n\nconst pluckTagFromList = (tags: RunTagsFragment[]): TagType => {\n  // Prefer user/schedule/sensor\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.User:\n        return {type: 'user', tag};\n      case DagsterTag.ScheduleName:\n        return {type: 'schedule', tag};\n      case DagsterTag.SensorName:\n        return {type: 'sensor', tag};\n    }\n  }\n\n  // If none of those, check for AMP\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.Automaterialize:\n        return {type: 'auto-materialize', tag};\n      case DagsterTag.CreatedBy: {\n        // Backwards compatibility\n        if (tag.value === 'auto_materialize') {\n          return {type: 'auto-materialize', tag};\n        } else {\n          continue;\n        }\n      }\n      case DagsterTag.AutoObserve:\n        return {type: 'auto-observe', tag};\n    }\n  }\n\n  return {type: 'manual'};\n};\n\nexport const CreatedByTag = ({repoAddress, tags, onAddTag}: Props) => {\n  const {UserDisplay} = useLaunchPadHooks();\n\n  const plucked = pluckTagFromList(tags);\n\n  if (plucked.type === 'manual') {\n    return <Tag icon=\"account_circle\">Manually launched</Tag>;\n  }\n\n  const buildTagElement = () => {\n    const {type, tag} = plucked;\n    const {value} = tag;\n    switch (type) {\n      case 'user':\n        return <UserDisplay email={tag.value} />;\n      case 'schedule': {\n        return (\n          <Tag icon=\"schedule\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/schedules/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'sensor': {\n        return (\n          <Tag icon=\"sensors\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/sensors/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'auto-materialize':\n        return <Tag icon=\"auto_materialize_policy\">Auto-materialize policy</Tag>;\n      case 'auto-observe':\n        return <Tag icon=\"auto_observe\">Auto-observation</Tag>;\n    }\n  };\n\n  const tagElement = buildTagElement();\n  if (!onAddTag) {\n    return tagElement;\n  }\n\n  const {tag} = plucked;\n  const {key, value} = tag;\n  return (\n    <TagActionsPopover\n      data={tag}\n      actions={[\n        {\n          label: 'Add to filter',\n          onClick: () => onAddTag({token: 'tag', value: `${key}=${value}`}),\n        },\n      ]}\n    >\n      {tagElement}\n    </TagActionsPopover>\n  );\n};\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport {useEffect, useReducer, useRef} from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = useReducer(deletionDialogReducer, frozenRuns.current, initializeState);\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.accentGreen()} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.accentYellow()} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogFooter,\n  StyledRawCodeMirror,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nimport {RunTags} from './RunTags';\nimport {RunTagsFragment} from './types/RunTable.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  copyConfig: () => void;\n  runConfigYaml: string;\n  mode: string | null;\n  isJob: boolean;\n\n  // Optionally provide tags to display them as well.\n  tags?: RunTagsFragment[];\n}\n\nexport const RunConfigDialog = (props: Props) => {\n  const {isOpen, onClose, copyConfig, runConfigYaml, tags, mode, isJob} = props;\n  const hasTags = !!tags && tags.length > 0;\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onClose}\n      canOutsideClickClose\n      canEscapeKeyClose\n      style={{\n        width: '90vw',\n        maxWidth: '1000px',\n        minWidth: '600px',\n        height: '90vh',\n        maxHeight: '1000px',\n        minHeight: '600px',\n      }}\n      title=\"Run configuration\"\n    >\n      <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n        <Box flex={{direction: 'column', gap: 20}} style={{flex: 1, overflow: 'hidden'}}>\n          {hasTags ? (\n            <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n              <Subheading>Tags</Subheading>\n              <div>\n                <RunTags tags={tags} mode={isJob ? null : mode} />\n              </div>\n            </Box>\n          ) : null}\n          <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n            {hasTags ? (\n              <Box border=\"bottom\" padding={{left: 24, bottom: 16}}>\n                <Subheading>Config</Subheading>\n              </Box>\n            ) : null}\n            <CodeMirrorContainer>\n              <StyledRawCodeMirror\n                value={runConfigYaml}\n                options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n                theme={['config-editor']}\n              />\n            </CodeMirrorContainer>\n          </Box>\n        </Box>\n        <DialogFooter topBorder>\n          <Button onClick={() => copyConfig()} intent=\"none\">\n            Copy config\n          </Button>\n          <Button onClick={onClose} intent=\"primary\">\n            OK\n          </Button>\n        </DialogFooter>\n      </Box>\n    </Dialog>\n  );\n};\n\nconst CodeMirrorContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n\n  .CodeMirror {\n    height: 100%;\n  }\n`;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport {useEffect, useReducer, useRef} from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\nimport {ReexecutionStrategy} from '../graphql/types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.accentGreen()} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.accentYellow()} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Icon,\n  JoinedButtons,\n  Menu,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Popover,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {RunConfigDialog} from './RunConfigDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {DagsterTag} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\nimport {useJobReexecution} from './useJobReExecution';\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {InjectedComponentContext} from '../app/InjectedComponentContext';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePipelineLinkForRun} from '../workspace/workspacePath';\n\ninterface Props {\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}\n\nexport const RunActionsMenu = React.memo(({run, onAddTag, additionalActionsForRun}: Props) => {\n  const {RunMetricsDialog} = React.useContext(InjectedComponentContext);\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags' | 'metrics'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const copyConfig = useCopyToClipboard();\n  const onCopy = async () => {\n    copyConfig(runConfigYaml || '');\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'copy_to_clipboard_done',\n      message: 'Copied!',\n    });\n  };\n\n  const reexecute = useJobReexecution({onCompleted: refetch});\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n  const runMetricsEnabled = run.tags.some((t) => t.key === DagsterTag.RunMetrics);\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  const jobLink = workspacePipelineLinkForRun({\n    run,\n    repositoryName: repoMatch?.match.repository.name,\n    repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n    isJob,\n  });\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                style={{minWidth: 200}}\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"job\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={jobLink.disabledReason || OPEN_LAUNCHPAD_UNKNOWN}\n                  position=\"left\"\n                  disabled={infoReady && !jobLink.disabledReason}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text={jobLink.label}\n                    disabled={!infoReady || !!jobLink.disabledReason}\n                    icon={jobLink.icon}\n                    to={jobLink.to}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      await reexecute(run, ReexecutionStrategy.ALL_STEPS);\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {runMetricsEnabled && RunMetricsDialog ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"asset_plot\"\n                  text=\"View container metrics\"\n                  intent=\"none\"\n                  onClick={() => setVisibleDialog('metrics')}\n                />\n              ) : null}\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {runMetricsEnabled && RunMetricsDialog ? (\n        <RunMetricsDialog\n          runId={run.id}\n          isOpen={visibleDialog === 'metrics'}\n          onClose={closeDialogs}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <RunConfigDialog\n        isOpen={visibleDialog === 'config'}\n        onClose={closeDialogs}\n        copyConfig={onCopy}\n        mode={run.mode}\n        runConfigYaml={runConfigYaml || ''}\n        isJob={isJob}\n      />\n    </>\n  );\n});\n\ninterface RunBulkActionsMenuProps {\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}\n\nexport const RunBulkActionsMenu = React.memo((props: RunBulkActionsMenuProps) => {\n  const {selected, clearSelection} = props;\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => {\n      accum[run.id] = run.canTerminate;\n      return accum;\n    },\n    {} as Record<string, boolean>,\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce(\n    (accum, run) => {\n      accum[run.id] = run.canTerminate;\n      return accum;\n    },\n    {} as Record<string, boolean>,\n  );\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => {\n      accum[run.id] = run.id;\n      return accum;\n    },\n    {} as Record<string, string>,\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => {\n      accum[run.id] = run.id;\n      return accum;\n    },\n    {} as Record<string, string>,\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nexport const PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.backgroundLight()};\n  color: ${Colors.textLight()};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceRunQueueConfigQuery,\n  InstanceRunQueueConfigQueryVariables,\n} from './types/useRunQueueConfig.types';\nimport {useBlockTraceOnQueryResult} from '../performance/TraceContext';\n\nexport const useRunQueueConfig = () => {\n  const queryResult = useQuery<InstanceRunQueueConfigQuery, InstanceRunQueueConfigQueryVariables>(\n    INSTANCE_RUN_QUEUE_CONFIG,\n  );\n  useBlockTraceOnQueryResult(queryResult, 'InstanceRunQueueConfigQuery');\n  return queryResult.data?.instance.runQueueConfig;\n};\n\nconst INSTANCE_RUN_QUEUE_CONFIG = gql`\n  query InstanceRunQueueConfig {\n    instance {\n      id\n      hasInfo\n      runQueueConfig {\n        maxConcurrentRuns\n        tagConcurrencyLimitsYaml\n        isOpConcurrencyAware\n      }\n    }\n  }\n`;\n","import {\n  Box,\n  Button,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Mono,\n  Spinner,\n  Table,\n  Tag,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as yaml from 'yaml';\n\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useRunQueueConfig} from '../instance/useRunQueueConfig';\nimport {StructuredContentTable} from '../metadata/MetadataEntry';\n\ntype TagConcurrencyLimit = {\n  key: string;\n  value?: string;\n  limit: number;\n};\n\nexport const QueuedRunCriteriaDialog = ({\n  isOpen,\n  onClose,\n  run,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  run: RunTableRunFragment;\n}) => {\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Run queue criteria\"\n      canOutsideClickClose\n      canEscapeKeyClose\n      onClose={onClose}\n      style={{width: 700}}\n    >\n      <QueuedRunCriteriaDialogContent run={run} />\n      <DialogFooter topBorder>\n        <Button intent=\"primary\" onClick={onClose}>\n          Close\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst QueuedRunCriteriaDialogContent = ({run}: {run: RunTableRunFragment}) => {\n  const runQueueConfig = useRunQueueConfig();\n  const runTagMap = Object.fromEntries(run.tags.map(({key, value}) => [key, value]));\n  const maxConcurrentRuns = runQueueConfig?.maxConcurrentRuns;\n  const runTagLimits = React.useMemo(() => {\n    try {\n      if (!runQueueConfig?.tagConcurrencyLimitsYaml) {\n        return undefined;\n      }\n      const limits: TagConcurrencyLimit[] = yaml.parse(runQueueConfig.tagConcurrencyLimitsYaml);\n      return limits.filter(\n        (limit) =>\n          limit.key in runTagMap &&\n          (limit.value === undefined || limit.value === runTagMap[limit.key]),\n      );\n    } catch (err) {\n      return undefined;\n    }\n  }, [runQueueConfig, runTagMap]);\n\n  if (!runQueueConfig) {\n    return (\n      <Box padding={32}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  const priority = runTagMap['dagster/priority'];\n  const runIsOpConcurrencyLimited =\n    runQueueConfig?.isOpConcurrencyAware &&\n    run.rootConcurrencyKeys &&\n    run.rootConcurrencyKeys.length > 0 &&\n    !run.hasUnconstrainedRootNodes;\n\n  return (\n    <Table>\n      <tbody>\n        {priority ? (\n          <tr>\n            <td>Priority</td>\n            <td>{priority}</td>\n          </tr>\n        ) : null}\n        {maxConcurrentRuns !== undefined ? (\n          <tr>\n            <td>Max concurrent runs</td>\n            <td>\n              <Mono>{maxConcurrentRuns}</Mono>\n            </td>\n          </tr>\n        ) : null}\n        {runTagLimits?.length ? (\n          <tr>\n            <td>Tag concurrency limits:</td>\n            <td>\n              {runTagLimits.map((limit, i) => (\n                <div style={{overflow: 'auto', paddingBottom: 10}} key={`tagLimit:${i}`}>\n                  <StructuredContentTable cellPadding=\"0\" cellSpacing=\"0\">\n                    <tbody>\n                      <tr>\n                        <td style={{width: 80, fontSize: 12}}>\n                          {limit.value !== undefined ? 'Tag' : 'Tag key'}\n                        </td>\n                        <td>\n                          <Tag interactive>\n                            {limit.value !== undefined ? `${limit.key}=${limit.value}` : limit.key}\n                          </Tag>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td style={{width: 80, fontSize: 12}}>Limit</td>\n                        <td>{limit.limit}</td>\n                      </tr>\n                    </tbody>\n                  </StructuredContentTable>\n                </div>\n              ))}\n            </td>\n          </tr>\n        ) : null}\n        {runIsOpConcurrencyLimited ? (\n          <tr>\n            <td>\n              <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n                <div>Initial concurrency keys</div>\n                <Tooltip\n                  placement=\"bottom\"\n                  content=\"Op/asset concurrency limits are set on all of the initial steps in this run. This run will not start until there are available slots for at least one step.\"\n                >\n                  <Icon name=\"info\" color={Colors.accentGray()} />\n                </Tooltip>\n              </Box>\n            </td>\n            <td>\n              {run.rootConcurrencyKeys!.map((key, i) =>\n                runQueueConfig ? (\n                  <Tag interactive key={`rootConcurrency:${i}`}>\n                    <Link to={`/concurrency?key=${key}`}>{key}</Link>\n                  </Tag>\n                ) : (\n                  <Tag interactive key={`rootConcurrency:${i}`}>\n                    {key}\n                  </Tag>\n                ),\n              )}\n            </td>\n          </tr>\n        ) : null}\n      </tbody>\n    </Table>\n  );\n};\n","import {useCallback} from 'react';\n\nimport {DagsterTag} from './RunTag';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nexport function useTagPinning() {\n  // Most system tags are unpinned by default so we track pinned for these.\n  const [pinnedSystemTags, setPinnedSystemTags] = useStateWithStorage(\n    'pinned-system-tags',\n    validateIsArray,\n  );\n\n  // All user tags are pinned by default so we track unpinned.\n  const [unpinnedTags, setUnpinnedTags] = useStateWithStorage('unpinned-tags', validateIsArray);\n\n  const onToggleTagPin = useCallback(\n    (tagKey: string) => {\n      if (isUnpinnedByDefaultSystemTag(tagKey)) {\n        setPinnedSystemTags((pinnedSystemTags) => toggleTag(pinnedSystemTags, tagKey));\n      } else {\n        setUnpinnedTags((unpinnedTags) => toggleTag(unpinnedTags, tagKey));\n      }\n    },\n    [setUnpinnedTags, setPinnedSystemTags],\n  );\n\n  const isTagPinned = useCallback(\n    (tag: {key: string}) => {\n      return isUnpinnedByDefaultSystemTag(tag.key)\n        ? pinnedSystemTags.indexOf(tag.key) !== -1\n        : unpinnedTags.indexOf(tag.key) === -1;\n    },\n    [pinnedSystemTags, unpinnedTags],\n  );\n\n  return {\n    isTagPinned,\n    onToggleTagPin,\n  };\n}\n\nfunction validateIsArray(value: any) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return [];\n}\n\nfunction isUnpinnedByDefaultSystemTag(key: string) {\n  return (\n    (key.startsWith(DagsterTag.Namespace) &&\n      key !== DagsterTag.Partition &&\n      key !== DagsterTag.Backfill) ||\n    key === 'mode'\n  );\n}\n\nfunction toggleTag(tagsArr: string[] | undefined, tagKey: string): string[] {\n  const tags = tagsArr || [];\n  if (tags.indexOf(tagKey) !== -1) {\n    return tags.filter((key) => key !== tagKey);\n  } else {\n    return [...tags, tagKey];\n  }\n}\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Caption,\n  Checkbox,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Mono,\n  Tag,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {AssetCheckTagCollection, AssetKeyTagCollection} from './AssetTagCollections';\nimport {CreatedByTagCell} from './CreatedByTag';\nimport {QueuedRunCriteriaDialog} from './QueuedRunCriteriaDialog';\nimport {RunActionsMenu} from './RunActionsMenu';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {RunStateSummary, RunTime, assetKeysForRun, titleForRun} from './RunUtils';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useTagPinning} from './useTagPinning';\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {PipelineTag, RunStatus} from '../graphql/types';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\n\nexport const RunRow = ({\n  run,\n  hasCheckboxColumn,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}: {\n  run: RunTableRunFragment;\n  hasCheckboxColumn: boolean;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n  const {isTagPinned, onToggleTagPin} = useTagPinning();\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const repoAddressGuess = React.useMemo(() => {\n    if (repo) {\n      const {match} = repo;\n      return buildRepoAddress(match.repository.name, match.repositoryLocation.name);\n    }\n    return null;\n  }, [repo]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  const allTagsWithPinned = React.useMemo(() => {\n    const allTags: Omit<PipelineTag, '__typename'>[] = [...run.tags];\n    if ((isJob && run.mode !== 'default') || !isJob) {\n      allTags.push({key: 'mode', value: run.mode});\n    }\n    return allTags.map((tag) => {\n      return {...tag, pinned: isTagPinned(tag)};\n    });\n  }, [run, isJob, isTagPinned]);\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const [showRunTags, setShowRunTags] = React.useState(false);\n  const [showQueueCriteria, setShowQueueCriteria] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const tagsToShow = React.useMemo(() => {\n    const targetBackfill = allTagsWithPinned.find((tag) => tag.key === DagsterTag.Backfill);\n    const tagKeys: Set<string> = new Set([]);\n    const tags: TagType[] = [];\n\n    if (targetBackfill && targetBackfill.pinned) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        ...targetBackfill,\n        link,\n      });\n      tagKeys.add(DagsterTag.Backfill as string);\n    }\n    allTagsWithPinned.forEach((tag) => {\n      if (tagKeys.has(tag.key)) {\n        // We already added this tag\n        return;\n      }\n      if (tag.pinned) {\n        tags.push(tag);\n      }\n    });\n    return tags;\n  }, [allTagsWithPinned, run.assetSelection?.length]);\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      {hasCheckboxColumn ? (\n        <td>\n          {canTerminateOrDelete ? (\n            <>{onToggleChecked ? <Checkbox checked={!!checked} onChange={onChange} /> : null}</>\n          ) : null}\n        </td>\n      ) : null}\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          <RunTargetLink isJob={isJob} run={run} repoAddress={repoAddressGuess} />\n          <Box\n            flex={{direction: 'row', alignItems: 'center', wrap: 'wrap'}}\n            style={{gap: '4px 8px'}}\n          >\n            <RunTagsWrapper>\n              {tagsToShow.length ? (\n                <RunTags tags={tagsToShow} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n              ) : null}\n            </RunTagsWrapper>\n            {allTagsWithPinned.length > tagsToShow.length ? (\n              <Caption>\n                <ButtonLink\n                  onClick={() => {\n                    setShowRunTags(true);\n                  }}\n                  color={Colors.textLight()}\n                  style={{margin: '-4px', padding: '4px'}}\n                >\n                  View all tags ({allTagsWithPinned.length})\n                </ButtonLink>\n              </Caption>\n            ) : null}\n            {run.status === RunStatus.QUEUED ? (\n              <Caption>\n                <ButtonLink\n                  onClick={() => {\n                    setShowQueueCriteria(true);\n                  }}\n                  color={Colors.textLight()}\n                >\n                  View queue criteria\n                </ButtonLink>\n              </Caption>\n            ) : null}\n          </Box>\n        </Box>\n        {isHovered && allTagsWithPinned.length ? (\n          <ShortcutHandler\n            key=\"runtabletags\"\n            onShortcut={() => {\n              setShowRunTags((showRunTags) => !showRunTags);\n            }}\n            shortcutLabel=\"t\"\n            shortcutFilter={(e) => e.code === 'KeyT'}\n          >\n            {null}\n          </ShortcutHandler>\n        ) : null}\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <CreatedByTagCell\n            repoAddress={repoAddressGuess}\n            tags={run.tags || []}\n            onAddTag={onAddTag}\n          />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags tags={allTagsWithPinned} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <QueuedRunCriteriaDialog\n        run={run}\n        isOpen={showQueueCriteria}\n        onClose={() => setShowQueueCriteria(false)}\n      />\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n\nconst RunTargetLink = ({\n  run,\n  isJob,\n  repoAddress,\n}: {\n  isJob: boolean;\n  run: RunTableRunFragment;\n  repoAddress: RepoAddress | null;\n}) => {\n  return isHiddenAssetGroupJob(run.pipelineName) ? (\n    <Box flex={{gap: 16, alignItems: 'end', wrap: 'wrap'}}>\n      <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n      <AssetCheckTagCollection assetChecks={run.assetCheckSelection} />\n    </Box>\n  ) : (\n    <PipelineReference\n      isJob={isJob}\n      showIcon\n      pipelineName={run.pipelineName}\n      pipelineHrefContext={repoAddress || 'repo-unknown'}\n    />\n  );\n};\n","export default \"/_next/static/media/ShowAndHideRunTags.3fa9746ba2f415094d257d3c8e73389d.mp4\";","import {gql} from '@apollo/client';\nimport {\n  Box,\n  Checkbox,\n  Colors,\n  Icon,\n  NonIdealState,\n  ProductTour,\n  ProductTourPosition,\n  Table,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunRow} from './RunRow';\nimport {RUN_TIME_FRAGMENT} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport ShowAndHideTagsMP4 from './ShowAndHideRunTags.mp4';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {AnchorButton} from '../ui/AnchorButton';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarSticky?: boolean;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n  emptyState?: () => React.ReactNode;\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarSticky,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n    emptyState,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = !!Object.keys(filter || {}).length;\n      if (emptyState) {\n        return <>{emptyState()}</>;\n      }\n\n      return (\n        <div>\n          <Box margin={{vertical: 32}}>\n            {anyFilter ? (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No matching runs\"\n                description=\"No runs were found for this filter.\"\n              />\n            ) : (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No runs found\"\n                description={\n                  <Box flex={{direction: 'column', gap: 12}}>\n                    <div>You have not launched any runs yet.</div>\n                    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                      <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                        Launch a run\n                      </AnchorButton>\n                      <span>or</span>\n                      <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                        Materialize an asset\n                      </AnchorButton>\n                    </Box>\n                  </Box>\n                }\n              />\n            )}\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              {canTerminateOrDeleteAny ? (\n                <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                </th>\n              ) : null}\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>\n                <TargetHeader />\n              </th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                hasCheckboxColumn={canTerminateOrDeleteAny}\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n                hideCreatedBy={hideCreatedBy}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <ActionBar\n        sticky={actionBarSticky}\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n\nexport const RUN_TAGS_FRAGMENT = gql`\n  fragment RunTagsFragment on PipelineTag {\n    key\n    value\n  }\n`;\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    assetCheckSelection {\n      name\n      assetKey {\n        path\n      }\n    }\n    status\n    tags {\n      ...RunTagsFragment\n    }\n    ...RunTimeFragment\n    rootConcurrencyKeys\n    hasUnconstrainedRootNodes\n  }\n\n  ${RUN_TIME_FRAGMENT}\n  ${RUN_TAGS_FRAGMENT}\n`;\n\nfunction ActionBar({\n  top,\n  bottom,\n  sticky,\n}: {\n  top: React.ReactNode;\n  bottom?: React.ReactNode;\n  sticky?: boolean;\n}) {\n  return (\n    <Box\n      flex={{direction: 'column'}}\n      padding={{vertical: 12}}\n      style={\n        sticky\n          ? {position: 'sticky', top: 0, background: Colors.backgroundDefault(), zIndex: 2}\n          : {}\n      }\n    >\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 12}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border=\"top\"\n          flex={{gap: 8, wrap: 'wrap'}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nfunction TargetHeader() {\n  const [hideTabPinningNux, setHideTabPinningNux] = useStateWithStorage<any>(\n    'RunTableTabPinningNux',\n    (value) => value,\n  );\n  if (hideTabPinningNux) {\n    return <div>Target</div>;\n  }\n  return (\n    <ProductTour\n      title=\"Hide and show run tags\"\n      description={\n        <>\n          You can show tags that you prefer quick access to and hide tags you don&apos;t by hovering\n          over the tag and selecting the show/hide tag option.\n        </>\n      }\n      position={ProductTourPosition.BOTTOM_RIGHT}\n      video={ShowAndHideTagsMP4}\n      width=\"616px\"\n      actions={{\n        dismiss: () => {\n          setHideTabPinningNux('1');\n        },\n      }}\n    >\n      <div>Target</div>\n    </ProductTour>\n  );\n}\n"],"names":["renderItemAssetKey","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Link","to","assetDetailsPathForKey","assetKey","style","display","width","MiddleTruncate","text","displayNameForAssetKey","renderItemAssetCheck","assetDetailsPathForAssetCheck","assetCheck","labelForAssetCheck","check","name","concat","useShowMoreDialog","dialogTitle","items","renderItem","showMore","setShowMore","React","dialog","length","jsxs","Dialog","title","onClose","minWidth","maxWidth","maxHeight","isOpen","div","height","overflow","VirtualizedItemListForDialog","DialogFooter","topBorder","Button","intent","autoFocus","onClick","undefined","AssetKeyTagCollection","assetKeys","useTags","props","span","marginBottom","TagActionsPopover","data","key","value","actions","label","view","lineageScope","Tag","interactive","icon","Box","flex","direction","gap","alignItems","Icon","color","Colors","size","globalAssetGraphPathForAssetsAndDescendants","ButtonLink","underline","AssetCheckTagCollection","assetChecks","CreatedByTagCell","memo","repoAddress","tags","onAddTag","param","CreatedByTag","pluckTagFromList","tag","DagsterTag","User","type","ScheduleName","SensorName","Automaterialize","CreatedBy","AutoObserve","UserDisplay","useLaunchPadHooks","plucked","tagElement","buildTagElement","email","workspacePathFromAddress","token","refineToError","deletePipelineRun","__typename","initializeState","step","frozenRuns","deletion","completed","errors","deletionDialogReducer","prevState","action","id","error","DeletionDialog","onComplete","onTerminateInstead","selectedRuns","useRef","state","dispatch","useReducer","current","runIDs","Object","keys","count","terminatableCount","filter","useEffect","destroy","useMutation","DELETE_MUTATION","mutate","runId","variables","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","progressContent","Fragment","strong","ProgressBar","Math","max","animate","NavigationBlock","message","completionContent","errorCount","successCount","ul","map","li","Mono","slice","buttons","disabled","RunConfigDialog","copyConfig","runConfigYaml","mode","isJob","hasTags","minHeight","padding","top","horizontal","Subheading","RunTags","border","left","bottom","CodeMirrorContainer","StyledRawCodeMirror","options","readOnly","lineNumbers","theme","styled","withConfig","launchPipelineReexecution","errorText","reexecution","reexecutionDialogReducer","ReexecutionDialog","reexecutionStrategy","reexecute","LAUNCH_PIPELINE_REEXECUTION_MUTATION","reexecutionParams","parentRunId","strategy","jsx_runtime","ReexecutionStrategy","ALL_STEPS","RunActionsMenu","run","additionalActionsForRun","RunMetricsDialog","InjectedComponentContext","refetch","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","rootServerURI","AppContext","useCopyToClipboard","onCopy","showSharedToaster","useJobReexecution","onCompleted","loadEnv","called","loading","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","closeDialogs","pipelineRun","pipelineRunOrError","runMetricsEnabled","some","t","RunMetrics","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","has","status","isThisThingAJob","match","pipelineName","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","jobLink","workspacePipelineLinkForRun","repositoryName","repository","repositoryLocationName","repositoryLocation","JoinedButtons","AnchorButton","Popover","content","Menu","MenuItem","tagName","justifyContent","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","Tooltip","disabledReason","OPEN_LAUNCHPAD_UNKNOWN","position","targetTagName","MenuLink","canShow","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","RunBulkActionsMenu","selected","clearSelection","canTerminateAny","canDeleteAny","canReexecuteAny","terminatableRuns","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","FROM_FAILURE","gql","useRunQueueConfig","queryResult","useQuery","INSTANCE_RUN_QUEUE_CONFIG","useBlockTraceOnQueryResult","instance","runQueueConfig","QueuedRunCriteriaDialog","QueuedRunCriteriaDialogContent","runTagMap","fromEntries","maxConcurrentRuns","runTagLimits","tagConcurrencyLimitsYaml","limits","yaml","limit","err","Spinner","purpose","priority","runIsOpConcurrencyLimited","isOpConcurrencyAware","rootConcurrencyKeys","hasUnconstrainedRootNodes","Table","tbody","tr","td","i","paddingBottom","StructuredContentTable","cellPadding","cellSpacing","fontSize","placement","validateIsArray","isArray","isUnpinnedByDefaultSystemTag","startsWith","Namespace","Partition","Backfill","toggleTag","tagsArr","tagKey","indexOf","RunRow","hasCheckboxColumn","canTerminateOrDelete","checked","onToggleChecked","additionalColumns","isHighlighted","hideCreatedBy","repo","useRepositoryForRunWithoutSnapshot","isTagPinned","onToggleTagPin","useTagPinning","pinnedSystemTags","setPinnedSystemTags","useStateWithStorage","unpinnedTags","setUnpinnedTags","useCallback","pipelinesAndJobs","pipelines","find","pipelineOrJob","repoAddressGuess","buildRepoAddress","allTagsWithPinned","allTags","push","pinned","isReexecution","ParentRunId","showRunTags","setShowRunTags","showQueueCriteria","setShowQueueCriteria","isHovered","setIsHovered","tagsToShow","targetBackfill","tagKeys","Set","link","assetSelection","runsPathWithFilters","add","forEach","Row","highlighted","onMouseEnter","onMouseLeave","Checkbox","onChange","e","target","HTMLInputElement","shiftKey","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","RunTargetLink","wrap","RunTagsWrapper","Caption","margin","RunStatus","QUEUED","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","code","RunStatusTagWithStats","RunStateSummary","isHiddenAssetGroupJob","assetKeysForRun","assetCheckSelection","PipelineReference","showIcon","pipelineHrefContext","RunTable","runs","highlightedIds","actionBarSticky","actionBarComponents","belowActionBarComponents","emptyState","allIds","checkedIds","onToggleFactory","onToggleAll","useSelectionReducer","canTerminateOrDeleteAny","selectedFragments","ActionBar","sticky","grow","thead","th","paddingTop","indeterminate","TargetHeader","additionalColumnHeaders","additionalColumnsForRow","includes","anyFilter","vertical","NonIdealState","description","RUN_TAGS_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT","background","zIndex","right","hideTabPinningNux","setHideTabPinningNux","ProductTour","ProductTourPosition","BOTTOM_RIGHT","video","dismiss"],"sourceRoot":""}