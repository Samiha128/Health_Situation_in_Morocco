{"version":3,"file":"static/chunks/8574.68088abfa386d183.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/instance/useCanSeeConfig.tsx","webpack://_N_E/../ui-core/src/workspace/TableSectionHeader.tsx","webpack://_N_E/../ui-core/src/runs/RepoSectionHeader.tsx","webpack://_N_E/../ui-core/src/workspace/VirtualizedWorkspaceTable.tsx"],"sourcesContent":["import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\nimport {useBlockTraceOnQueryResult} from '../performance/TraceContext';\n\nexport const useCanSeeConfig = () => {\n  const queryResult = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  useBlockTraceOnQueryResult(queryResult, 'InstanceConfigHasInfoQuery');\n  return !!queryResult.data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {Box, Colors, Icon, IconWrapper} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nexport const SECTION_HEADER_HEIGHT = 32;\n\nexport interface TableSectionHeaderProps {\n  expanded: boolean;\n  onClick: (e: React.MouseEvent) => void;\n  children?: React.ReactNode;\n  rightElement?: React.ReactNode;\n}\n\nexport const TableSectionHeader = (props: TableSectionHeaderProps) => {\n  const {expanded, onClick, children, rightElement} = props;\n  return (\n    <SectionHeaderButton $open={expanded} onClick={onClick}>\n      <Box\n        flex={{alignItems: 'center', justifyContent: 'space-between'}}\n        padding={{horizontal: 24}}\n      >\n        {children}\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          {rightElement}\n          <Box margin={{top: 2}}>\n            <Icon name=\"arrow_drop_down\" />\n          </Box>\n        </Box>\n      </Box>\n    </SectionHeaderButton>\n  );\n};\n\nconst SectionHeaderButton = styled.button<{$open: boolean}>`\n  background-color: ${Colors.backgroundLight()};\n  border: 0;\n  box-shadow:\n    inset 0px -1px 0 ${Colors.keylineDefault()},\n    inset 0px 1px 0 ${Colors.keylineDefault()};\n  color: ${Colors.textLight()};\n  cursor: pointer;\n  display: block;\n  padding: 0;\n  width: 100%;\n  margin: 0;\n  height: ${SECTION_HEADER_HEIGHT}px;\n  text-align: left;\n\n  :focus,\n  :active {\n    outline: none;\n  }\n\n  :hover {\n    background-color: ${Colors.backgroundLightHover()};\n  }\n\n  ${IconWrapper}[aria-label=\"arrow_drop_down\"] {\n    transition: transform 100ms linear;\n    ${({$open}) => ($open ? null : `transform: rotate(-90deg);`)}\n  }\n`;\n","import {Box, Colors, Icon} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {TableSectionHeader, TableSectionHeaderProps} from '../workspace/TableSectionHeader';\nimport {DUNDER_REPO_NAME} from '../workspace/buildRepoAddress';\n\ninterface Props extends TableSectionHeaderProps {\n  repoName: string;\n  repoLocation: string;\n  showLocation: boolean;\n}\n\nexport const RepoSectionHeader = (props: Props) => {\n  const {repoName, repoLocation, showLocation, ...rest} = props;\n  const isDunderRepoName = repoName === DUNDER_REPO_NAME;\n  return (\n    <TableSectionHeader {...rest}>\n      <Box flex={{alignItems: 'center', gap: 8}}>\n        <Icon name=\"folder\" color={Colors.accentGray()} />\n        <div>\n          <RepoName>{isDunderRepoName ? repoLocation : repoName}</RepoName>\n          {showLocation && !isDunderRepoName ? (\n            <RepoLocation>{`@${repoLocation}`}</RepoLocation>\n          ) : null}\n        </div>\n      </Box>\n    </TableSectionHeader>\n  );\n};\n\nconst RepoName = styled.span`\n  font-weight: 600;\n`;\n\nconst RepoLocation = styled.span`\n  font-weight: 400;\n  color: ${Colors.textLighter()};\n`;\n","import {QueryResult} from '@apollo/client';\nimport {Caption, Colors} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {RepoAddress} from './types';\nimport {CompletionType, useTraceDependency} from '../performance/TraceContext';\nimport {RepoSectionHeader} from '../runs/RepoSectionHeader';\nimport {Row} from '../ui/VirtualizedTable';\n\nexport const RepoRow = ({\n  repoAddress,\n  height,\n  start,\n  expanded,\n  onToggle,\n  onToggleAll,\n  showLocation,\n  rightElement,\n}: {\n  repoAddress: RepoAddress;\n  height: number;\n  start: number;\n  showLocation: boolean;\n  rightElement: React.ReactNode;\n  expanded: boolean;\n  onToggle: (repoAddress: RepoAddress) => void;\n  onToggleAll: (expanded: boolean) => void;\n}) => {\n  return (\n    <Row $height={height} $start={start}>\n      <RepoSectionHeader\n        repoName={repoAddress.name}\n        repoLocation={repoAddress.location}\n        expanded={expanded}\n        onClick={(e: React.MouseEvent) =>\n          e.getModifierState('Shift') ? onToggleAll(!expanded) : onToggle(repoAddress)\n        }\n        showLocation={showLocation}\n        rightElement={rightElement}\n      />\n    </Row>\n  );\n};\n\nexport const LoadingOrNone = ({\n  queryResult,\n  noneString = 'None',\n}: {\n  queryResult: QueryResult<any, any>;\n  noneString?: React.ReactNode;\n}) => {\n  const {called, loading, data} = queryResult;\n  return (\n    <div style={{color: Colors.textLight()}}>\n      {!called || (loading && !data) ? 'Loading' : noneString}\n    </div>\n  );\n};\n\nexport const CaptionText = ({children}: {children: React.ReactNode}) => {\n  return (\n    <CaptionTextContainer>\n      <Caption>{children}</Caption>\n    </CaptionTextContainer>\n  );\n};\n\nconst CaptionTextContainer = styled.div`\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ${Caption} {\n    color: ${Colors.textLight()};\n    white-space: nowrap;\n  }\n`;\n\nconst JOB_QUERY_DELAY = 100;\n\nexport const useDelayedRowQuery = (lazyQueryFn: () => void) => {\n  const dependency = useTraceDependency('DelayedRowQuery');\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      lazyQueryFn();\n      dependency.completeDependency(CompletionType.SUCCESS);\n    }, JOB_QUERY_DELAY);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [lazyQueryFn, dependency]);\n};\n"],"names":["useCanSeeConfig","queryResult","useQuery","INSTANCE_CONFIG_HAS_INFO","useBlockTraceOnQueryResult","data","instance","hasInfo","gql","SECTION_HEADER_HEIGHT","TableSectionHeader","expanded","onClick","children","rightElement","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","SectionHeaderButton","$open","jsxs","Box","flex","alignItems","justifyContent","padding","horizontal","gap","margin","top","Icon","name","styled","button","withConfig","Colors","IconWrapper","param","RepoSectionHeader","repoName","repoLocation","showLocation","rest","isDunderRepoName","DUNDER_REPO_NAME","jsx_runtime","color","div","RepoName","RepoLocation","concat","span","RepoRow","repoAddress","height","start","onToggle","onToggleAll","Row","$height","$start","location","e","getModifierState","LoadingOrNone","noneString","called","loading","style","CaptionText","CaptionTextContainer","Caption","useDelayedRowQuery","dependency","useTraceDependency","React","timer","setTimeout","lazyQueryFn","completeDependency","CompletionType","SUCCESS","clearTimeout"],"sourceRoot":""}