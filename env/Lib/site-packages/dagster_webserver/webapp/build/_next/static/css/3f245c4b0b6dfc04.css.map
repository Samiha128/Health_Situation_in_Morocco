{"version":3,"sources":["webpack://_N_E/../node_modules/@blueprintjs/select/lib/css/blueprint-select.css","webpack://_N_E/../node_modules/@blueprintjs/popover2/lib/css/blueprint-popover2.css"],"names":[],"mappings":"AAYA,kBACE,eACF,CAEA,oCACE,gBAAiB,CACjB,eAAgB,CAChB,aACF,CACA,0DACE,UACF,CACA,oEACE,cAAe,CACf,WACF,CAkDA,aACE,cAAe,CACf,SAAU,CACV,qBAAyB,CACzB,iBAAkB,CAClB,oGAAmH,CACnH,sBAAuB,CACvB,QAAS,CACT,WAAY,CACZ,UACF,CACA,+DACE,iBAAkB,CAClB,SACF,CACA,6EACE,cAAe,CACf,SAAU,CACV,kBAAmB,CACnB,uBAA0B,CAC1B,kCAAoC,CAEpC,oDACF,CACA,8BACE,cAAe,CACf,SACF,CACA,qCACE,iBAAkB,CAClB,SAAU,CACV,kBAAmB,CACnB,uBAA0B,CAC1B,kCAAoC,CAEpC,oDACF,CACA,wBACE,4BAA6B,CAC7B,eACF,CACA,sDACE,eACF,CACA,uBACE,4BAA6B,CAC7B,eAAgB,CAChB,2CAAgD,CAChD,4BAA6B,CAC7B,aACF,CACA,6BACE,YACF,CACA,6CACE,wBAAyB,CACzB,2GACF,CAEA,2CACE,kCACF,CAQA,mFAEE,WACF,CACA,qCACE,eACF,CACA,8BACE,gBAAiB,CACjB,eAAgB,CAChB,aAAc,CACd,SACF,CACA,gDACE,eACF,CACA,sGACE,UACF,CACA,0HACE,cAAe,CACf,WACF,CAQA,+BACE,gBAAiB,CACjB,eAAgB,CAChB,aACF,CACA,qDACE,UACF,CACA,+DACE,cAAe,CACf,WACF,CCrIA,kCACE,cACF,CAkDA,cACE,+FAA8G,CAC9G,kBAAmB,CACnB,iBAAkB,CAClB,oBAAqB,CACrB,UACF,CACA,kCACE,WAAY,CACZ,iBAAkB,CAClB,UACF,CACA,yCACE,WAAY,CACZ,UAAW,CACX,UACF,CACA,oCACE,eACF,CACA,+DAEE,aACF,CACA,yCACE,wCACF,CACA,yCACE,YAAa,CACb,eACF,CACA,uCACE,SACF,CACA,8DACE,uCACE,iBACF,CAGA,cACE,6BACF,CAJF,CAMA,qEACE,mBACF,CACA,mFACE,kBAAmB,CACnB,kBAAmB,CACnB,uBAA0B,CAC1B,6BAA8B,CAE9B,0DACF,CACA,iCACE,kBACF,CACA,wCACE,mBAAqB,CACrB,kBAAmB,CACnB,uBAA0B,CAC1B,6BAA8B,CAE9B,0DACF,CACA,oCACE,iBAAkB,CAClB,iBACF,CACA,gEACE,eAAgB,CAChB,YACF,CACA,4EACE,WACF,CACA,0BACE,kBACF,CACA,8CACE,YACF,CAIA,8JACE,kBACF,CACA,qIACE,kBAAmB,CACnB,kBAAmB,CACnB,uBAA0B,CAC1B,6BAA8B,CAE9B,oDACF,CACA,0DACE,kBACF,CACA,iEACE,kBAAmB,CACnB,kBAAmB,CACnB,uBAA0B,CAC1B,6BAA8B,CAE9B,oDACF,CACA,8CACE,UACF,CACA,+CACE,wHACF,CACA,2FACE,kBACF,CACA,oKAGE,aACF,CACA,qGACE,0DACF,CACA,qGACE,YAAa,CACb,eACF,CACA,iGACE,YACF,CACA,8DACE,iGACE,iBACF,CAGA,+CACE,6BACF,CAJF,CAOA,2BACE,iBAAkB,CAClB,UAAW,CACX,aAAc,CACd,iBAAkB,CAClB,uBACF,CAEA,4CACE,4BACF,CAEA,mCACE,SAAU,CACV,YAAa,CACb,UACF,CACA,6GACE,SACF,CACA,2HACE,SAAU,CACV,kBAAmB,CACnB,uBAA0B,CAC1B,2BAA4B,CAE5B,oDACF,CACA,qDACE,SACF,CACA,4DACE,SAAU,CACV,kBAAmB,CACnB,uBAA0B,CAC1B,2BAA4B,CAE5B,oDACF,CACA,yCACE,YACF,CACA,4EACE,mBACF,CAEA,yBACE,oBACF,CAEA,8BACE,UACF,CAuEA,uFACE,2BAA4B,CAC5B,wBACF,CACA,sFACE,4BAA6B,CAC7B,yBAA0B,CAC1B,iBACF,CACA,uCACE,YAAa,CACb,aACF,CACA,8FACE,yBACF,CACA,6FACE,yBACF,CACA,mGACE,kBACF,CAkDA,wCACE,qBACF,CAkDA,qCACE,aAAc,CACd,cAAe,CACf,mBACF,CA2DA,kCACE,aACF,CACA,0BACE,eAAgB,CAChB,aACF,CACA,gDACE,+FACF,CACA,uEACE,eACF,CACA,mHACE,wHACF,CAkDA,oDACE,kBAAmB,CACnB,YACF,CA2DA,cACE,+FAA8G,CAC9G,kBAAmB,CACnB,aACF,CACA,kCACE,WAAY,CACZ,iBAAkB,CAClB,UACF,CACA,yCACE,WAAY,CACZ,UAAW,CACX,UACF,CACA,oCACE,kBACF,CACA,+DAEE,aACF,CACA,yCACE,wCACF,CACA,yCACE,YAAa,CACb,eACF,CACA,uCACE,YACF,CACA,8DACE,uCACE,iBACF,CAGA,cACE,6BACF,CAJF,CAMA,qEACE,mBACF,CACA,mFACE,kBAAmB,CACnB,kBAAmB,CACnB,uBAA0B,CAC1B,6BAA8B,CAE9B,oDACF,CACA,iCACE,kBACF,CACA,wCACE,mBAAqB,CACrB,kBAAmB,CACnB,uBAA0B,CAC1B,6BAA8B,CAE9B,oDACF,CACA,8BACE,aACF,CACA,iCACE,0BACF,CACA,mCACE,+BACF,CAIA,sCACE,aACF,CAIA,kHACE,aACF,CACA,6DAEE,4BAAiC,CACjC,4CAAiD,CACjD,aACF,CACA,iEAEE,aACF,CACA,kEAEE,4BAAiC,CACjC,4CAAiD,CACjD,aACF,CACA,4EAEE,eAAgB,CAChB,eAAgB,CAChB,aACF,CACA,2DAEE,kBAAmB,CACnB,2EAAuF,CACvF,aACF,CACA,gJACE,aACF,CACA,gJACE,aACF,CACA,gJACE,aACF,CACA,6IACE,aACF,CACA,oCACE,iBACF,CACA,gDACE,gBAAiB,CACjB,eACF,CACA,oCACE,0BACF,CACA,6DACE,0BACF,CACA,8DACE,0BACF,CACA,gEACE,yBACF,CACA,+DACE,yBACF,CACA,+CACE,mEACF,CACA,2FACE,kBACF,CACA,oKAGE,aACF,CACA,qGACE,wCACF,CACA,qGACE,YAAa,CACb,eACF,CACA,iGACE,YACF,CACA,8DACE,iGACE,iBACF,CAGA,+CACE,6BACF,CAJF,CAMA,+EACE,aACF,CACA,qFACE,yBACF,CACA,yFACE,+BACF,CAIA,kHACE,aACF,CAIA,gTACE,aACF,CACA,gKAGE,6BAAoC,CACpC,4CAAiD,CACjD,aACF,CACA,wKAGE,aACF,CACA,0KAGE,6BAAoC,CACpC,6CAAkD,CAClD,aACF,CACA,8LAGE,eAAgB,CAChB,eAAgB,CAChB,aACF,CACA,8DACE,0KAGE,6BAA8B,CAC9B,eACF,CACF,CACA,4JAGE,eAAmB,CACnB,kEAA4E,CAC5E,aACF,CACA,yVACE,aACF,CACA,yVACE,aACF,CACA,yVACE,aACF,CACA,mVACE,aACF,CACA,uDACE,kBAAmB,CACnB,UACF,CACA,0DACE,YACF,CACA,uDACE,kBAAmB,CACnB,UACF,CACA,0DACE,YACF,CACA,uDACE,kBAAmB,CACnB,UACF,CACA,0DACE,YACF,CACA,sDACE,kBAAmB,CACnB,UACF,CACA,yDACE,YACF,CAEA,wBACE,wBAAyB,CACzB,WACF","file":"static/css/3f245c4b0b6dfc04.css","sourcesContent":["/*\n\nCopyright 2017-present Palantir Technologies, Inc. All rights reserved.\nLicensed under the Apache License, Version 2.0.\n\n*/\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n.bp4-multi-select {\n  min-width: 150px;\n}\n\n.bp4-multi-select-popover .bp4-menu {\n  max-height: 300px;\n  max-width: 400px;\n  overflow: auto;\n}\n.bp4-multi-select-popover.bp4-popover2-match-target-width {\n  width: 100%;\n}\n.bp4-multi-select-popover.bp4-popover2-match-target-width .bp4-menu {\n  max-width: none;\n  min-width: 0;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-omnibar {\n  filter: blur(0);\n  opacity: 1;\n  background-color: #ffffff;\n  border-radius: 2px;\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 4px 8px rgba(17, 20, 24, 0.2), 0 18px 46px 6px rgba(17, 20, 24, 0.2);\n  left: calc(50% - 250px);\n  top: 20vh;\n  width: 500px;\n  z-index: 21;\n}\n.bp4-omnibar.bp4-overlay-enter, .bp4-omnibar.bp4-overlay-appear {\n  filter: blur(20px);\n  opacity: 0;\n}\n.bp4-omnibar.bp4-overlay-enter-active, .bp4-omnibar.bp4-overlay-appear-active {\n  filter: blur(0);\n  opacity: 1;\n  transition-delay: 0;\n  transition-duration: 200ms;\n  transition-property: filter, opacity;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-omnibar.bp4-overlay-exit {\n  filter: blur(0);\n  opacity: 1;\n}\n.bp4-omnibar.bp4-overlay-exit-active {\n  filter: blur(20px);\n  opacity: 0;\n  transition-delay: 0;\n  transition-duration: 200ms;\n  transition-property: filter, opacity;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-omnibar .bp4-input {\n  background-color: transparent;\n  border-radius: 0;\n}\n.bp4-omnibar .bp4-input, .bp4-omnibar .bp4-input:focus {\n  box-shadow: none;\n}\n.bp4-omnibar .bp4-menu {\n  background-color: transparent;\n  border-radius: 0;\n  box-shadow: inset 0 1px 0 rgba(17, 20, 24, 0.15);\n  max-height: calc(60vh - 40px);\n  overflow: auto;\n}\n.bp4-omnibar .bp4-menu:empty {\n  display: none;\n}\n.bp4-dark .bp4-omnibar, .bp4-omnibar.bp4-dark {\n  background-color: #383e47;\n  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 4px 8px rgba(17, 20, 24, 0.4), 0 18px 46px 6px rgba(17, 20, 24, 0.4);\n}\n\n.bp4-omnibar-overlay .bp4-overlay-backdrop {\n  background-color: rgba(17, 20, 24, 0.2);\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n.bp4-select-popover .bp4-popover-content,\n.bp4-select-popover .bp4-popover2-content {\n  padding: 5px;\n}\n.bp4-select-popover .bp4-input-group {\n  margin-bottom: 0;\n}\n.bp4-select-popover .bp4-menu {\n  max-height: 300px;\n  max-width: 400px;\n  overflow: auto;\n  padding: 0;\n}\n.bp4-select-popover .bp4-menu:not(:first-child) {\n  padding-top: 5px;\n}\n.bp4-select-popover.bp4-popover2-match-target-width, .bp4-select-popover.bp4-select-match-target-width {\n  width: 100%;\n}\n.bp4-select-popover.bp4-popover2-match-target-width .bp4-menu, .bp4-select-popover.bp4-select-match-target-width .bp4-menu {\n  max-width: none;\n  min-width: 0;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n.bp4-suggest-popover .bp4-menu {\n  max-height: 300px;\n  max-width: 400px;\n  overflow: auto;\n}\n.bp4-suggest-popover.bp4-popover2-match-target-width {\n  width: 100%;\n}\n.bp4-suggest-popover.bp4-popover2-match-target-width .bp4-menu {\n  max-width: none;\n  min-width: 0;\n}","/*\n\nCopyright 2021-present Palantir Technologies, Inc. All rights reserved.\nLicensed under the Apache License, Version 2.0.\n\n*/\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-context-menu2-virtual-target {\n  position: fixed;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-popover2 {\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 2px 4px rgba(17, 20, 24, 0.2), 0 8px 24px rgba(17, 20, 24, 0.2);\n  transform: scale(1);\n  border-radius: 2px;\n  display: inline-block;\n  z-index: 20;\n}\n.bp4-popover2 .bp4-popover2-arrow {\n  height: 30px;\n  position: absolute;\n  width: 30px;\n}\n.bp4-popover2 .bp4-popover2-arrow::before {\n  height: 20px;\n  margin: 5px;\n  width: 20px;\n}\n.bp4-popover2 .bp4-popover2-content {\n  background: #ffffff;\n}\n.bp4-popover2 .bp4-popover2-content,\n.bp4-popover2 .bp4-heading {\n  color: inherit;\n}\n.bp4-popover2 .bp4-popover2-arrow::before {\n  box-shadow: 1px 1px 6px rgba(17, 20, 24, 0.2);\n}\n.bp4-popover2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.1;\n}\n.bp4-popover2 .bp4-popover2-arrow-fill {\n  fill: #ffffff;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-popover2 .bp4-popover2-arrow-fill {\n    fill: buttonborder;\n  }\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-popover2 {\n    border: 1px solid buttonborder;\n  }\n}\n.bp4-popover2-enter > .bp4-popover2, .bp4-popover2-appear > .bp4-popover2 {\n  transform: scale(0.3);\n}\n.bp4-popover2-enter-active > .bp4-popover2, .bp4-popover2-appear-active > .bp4-popover2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 300ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);\n}\n.bp4-popover2-exit > .bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-exit-active > .bp4-popover2 {\n  transform: scale(0.3);\n  transition-delay: 0;\n  transition-duration: 300ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);\n}\n.bp4-popover2 .bp4-popover2-content {\n  border-radius: 2px;\n  position: relative;\n}\n.bp4-popover2.bp4-popover2-content-sizing .bp4-popover2-content {\n  max-width: 350px;\n  padding: 20px;\n}\n.bp4-popover2-target + .bp4-overlay .bp4-popover2.bp4-popover2-content-sizing {\n  width: 350px;\n}\n.bp4-popover2.bp4-minimal {\n  margin: 0 !important; /* stylelint-disable-line declaration-no-important */\n}\n.bp4-popover2.bp4-minimal .bp4-popover2-arrow {\n  display: none;\n}\n.bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-enter > .bp4-popover2.bp4-minimal.bp4-popover2, .bp4-popover2-appear > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-enter-active > .bp4-popover2.bp4-minimal.bp4-popover2, .bp4-popover2-appear-active > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-exit > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-exit-active > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2.bp4-popover2-match-target-width {\n  width: 100%;\n}\n.bp4-popover2.bp4-dark, .bp4-dark .bp4-popover2 {\n  box-shadow: 0 0 0 1px hsl(215, 3%, 38%), inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 2px 4px rgba(17, 20, 24, 0.4), 0 8px 24px rgba(17, 20, 24, 0.4);\n}\n.bp4-popover2.bp4-dark .bp4-popover2-content, .bp4-dark .bp4-popover2 .bp4-popover2-content {\n  background: #2f343c;\n}\n.bp4-popover2.bp4-dark .bp4-popover2-content,\n.bp4-popover2.bp4-dark .bp4-heading, .bp4-dark .bp4-popover2 .bp4-popover2-content,\n.bp4-dark .bp4-popover2 .bp4-heading {\n  color: inherit;\n}\n.bp4-popover2.bp4-dark .bp4-popover2-arrow::before, .bp4-dark .bp4-popover2 .bp4-popover2-arrow::before {\n  box-shadow: 0 0 0 1px #777a7e, 1px 1px 6px rgba(17, 20, 24, 0.4);\n}\n.bp4-popover2.bp4-dark .bp4-popover2-arrow-border, .bp4-dark .bp4-popover2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.2;\n}\n.bp4-popover2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-popover2 .bp4-popover2-arrow-fill {\n  fill: #2f343c;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-popover2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-popover2 .bp4-popover2-arrow-fill {\n    fill: buttonborder;\n  }\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-popover2.bp4-dark, .bp4-dark .bp4-popover2 {\n    border: 1px solid buttonborder;\n  }\n}\n\n.bp4-popover2-arrow::before {\n  border-radius: 1px;\n  content: \"\";\n  display: block;\n  position: absolute;\n  transform: rotate(45deg);\n}\n\n.bp4-overlay-backdrop.bp4-popover2-backdrop {\n  background: rgba(255, 255, 255, 0);\n}\n\n.bp4-popover2-transition-container {\n  opacity: 1;\n  display: flex;\n  z-index: 20;\n}\n.bp4-popover2-transition-container.bp4-popover2-enter, .bp4-popover2-transition-container.bp4-popover2-appear {\n  opacity: 0;\n}\n.bp4-popover2-transition-container.bp4-popover2-enter-active, .bp4-popover2-transition-container.bp4-popover2-appear-active {\n  opacity: 1;\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: opacity;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-transition-container.bp4-popover2-exit {\n  opacity: 1;\n}\n.bp4-popover2-transition-container.bp4-popover2-exit-active {\n  opacity: 0;\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: opacity;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-transition-container:focus {\n  outline: none;\n}\n.bp4-popover2-transition-container.bp4-popover2-leave .bp4-popover2-content {\n  pointer-events: none;\n}\n\nspan.bp4-popover2-target {\n  display: inline-block;\n}\n\n.bp4-popover2-target.bp4-fill {\n  width: 100%;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nCSS `border` property issues:\n- An element can only have one border.\n- Borders can't stack with shadows.\n- Borders modify the size of the element they're applied to.\n- Border positioning requires the extra `box-sizing` property.\n\n`box-shadow` doesn't have these issues, we're using it instead of `border`.\n*/\n.bp4-button-group:not(.bp4-minimal) > .bp4-popover2-target:not(:first-child) .bp4-button {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n.bp4-button-group:not(.bp4-minimal) > .bp4-popover2-target:not(:last-child) .bp4-button {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n  margin-right: -1px;\n}\n.bp4-button-group .bp4-popover2-target {\n  display: flex;\n  flex: 1 1 auto;\n}\n.bp4-button-group.bp4-vertical:not(.bp4-minimal) > .bp4-popover2-target:first-child .bp4-button {\n  border-radius: 2px 2px 0 0;\n}\n.bp4-button-group.bp4-vertical:not(.bp4-minimal) > .bp4-popover2-target:last-child .bp4-button {\n  border-radius: 0 0 2px 2px;\n}\n.bp4-button-group.bp4-vertical:not(.bp4-minimal) > .bp4-popover2-target:not(:last-child) .bp4-button {\n  margin-bottom: -1px;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-control-group .bp4-popover2-target {\n  border-radius: inherit;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\nlabel.bp4-label .bp4-popover2-target {\n  display: block;\n  margin-top: 5px;\n  text-transform: none;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n.bp4-submenu .bp4-popover2-target {\n  display: block;\n}\n.bp4-submenu.bp4-popover2 {\n  box-shadow: none;\n  padding: 0 5px;\n}\n.bp4-submenu.bp4-popover2 > .bp4-popover2-content {\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 2px 4px rgba(17, 20, 24, 0.2), 0 8px 24px rgba(17, 20, 24, 0.2);\n}\n.bp4-dark .bp4-submenu.bp4-popover2, .bp4-submenu.bp4-popover2.bp4-dark {\n  box-shadow: none;\n}\n.bp4-dark .bp4-submenu.bp4-popover2 > .bp4-popover2-content, .bp4-submenu.bp4-popover2.bp4-dark > .bp4-popover2-content {\n  box-shadow: 0 0 0 1px hsl(215, 3%, 38%), inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 2px 4px rgba(17, 20, 24, 0.4), 0 8px 24px rgba(17, 20, 24, 0.4);\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-tree-node-secondary-label .bp4-popover2-target {\n  align-items: center;\n  display: flex;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-tooltip2 {\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 2px 4px rgba(17, 20, 24, 0.2), 0 8px 24px rgba(17, 20, 24, 0.2);\n  transform: scale(1);\n  color: #f6f7f9;\n}\n.bp4-tooltip2 .bp4-popover2-arrow {\n  height: 22px;\n  position: absolute;\n  width: 22px;\n}\n.bp4-tooltip2 .bp4-popover2-arrow::before {\n  height: 14px;\n  margin: 4px;\n  width: 14px;\n}\n.bp4-tooltip2 .bp4-popover2-content {\n  background: #404854;\n}\n.bp4-tooltip2 .bp4-popover2-content,\n.bp4-tooltip2 .bp4-heading {\n  color: #f6f7f9;\n}\n.bp4-tooltip2 .bp4-popover2-arrow::before {\n  box-shadow: 1px 1px 6px rgba(17, 20, 24, 0.2);\n}\n.bp4-tooltip2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.1;\n}\n.bp4-tooltip2 .bp4-popover2-arrow-fill {\n  fill: #404854;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2 .bp4-popover2-arrow-fill {\n    fill: buttonborder;\n  }\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2 {\n    border: 1px solid buttonborder;\n  }\n}\n.bp4-popover2-enter > .bp4-tooltip2, .bp4-popover2-appear > .bp4-tooltip2 {\n  transform: scale(0.8);\n}\n.bp4-popover2-enter-active > .bp4-tooltip2, .bp4-popover2-appear-active > .bp4-tooltip2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-exit > .bp4-tooltip2 {\n  transform: scale(1);\n}\n.bp4-popover2-exit-active > .bp4-tooltip2 {\n  transform: scale(0.8);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-tooltip2 .bp4-text-muted {\n  color: #abb3bf;\n}\n.bp4-tooltip2 .bp4-text-disabled {\n  color: rgba(171, 179, 191, 0.6);\n}\n.bp4-tooltip2 .bp4-running-text hr {\n  border-color: rgba(255, 255, 255, 0.2);\n}\n.bp4-tooltip2 a {\n  color: #8abbff;\n}\n.bp4-tooltip2 a:hover {\n  color: #8abbff;\n}\n.bp4-tooltip2 a .bp4-icon, .bp4-tooltip2 a .bp4-icon-standard, .bp4-tooltip2 a .bp4-icon-large {\n  color: inherit;\n}\n.bp4-tooltip2 a code {\n  color: inherit;\n}\n.bp4-tooltip2 .bp4-code,\n.bp4-tooltip2 .bp4-running-text code {\n  background: rgba(17, 20, 24, 0.3);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.4);\n  color: #abb3bf;\n}\na > .bp4-tooltip2 .bp4-code,\na > .bp4-tooltip2 .bp4-running-text code {\n  color: inherit;\n}\n.bp4-tooltip2 .bp4-code-block,\n.bp4-tooltip2 .bp4-running-text pre {\n  background: rgba(17, 20, 24, 0.3);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.4);\n  color: #f6f7f9;\n}\n.bp4-tooltip2 .bp4-code-block > code,\n.bp4-tooltip2 .bp4-running-text pre > code {\n  background: none;\n  box-shadow: none;\n  color: inherit;\n}\n.bp4-tooltip2 .bp4-key,\n.bp4-tooltip2 .bp4-running-text kbd {\n  background: #383e47;\n  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 1px 1px 0 rgba(17, 20, 24, 0.4);\n  color: #abb3bf;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-primary, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-primary, .bp4-tooltip2 .bp4-icon-large.bp4-intent-primary {\n  color: #8abbff;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-success, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-success, .bp4-tooltip2 .bp4-icon-large.bp4-intent-success {\n  color: #72ca9b;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-warning, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-warning, .bp4-tooltip2 .bp4-icon-large.bp4-intent-warning {\n  color: #fbb360;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-danger, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-danger, .bp4-tooltip2 .bp4-icon-large.bp4-intent-danger {\n  color: #fa999c;\n}\n.bp4-tooltip2 .bp4-popover2-content {\n  padding: 10px 12px;\n}\n.bp4-tooltip2.bp4-compact .bp4-popover2-content {\n  line-height: 1rem;\n  padding: 5px 7px;\n}\n.bp4-tooltip2.bp4-compact .bp4-code {\n  vertical-align: text-bottom;\n}\n.bp4-tooltip2.bp4-popover2-placement-top .bp4-popover2-arrow {\n  transform: translateY(-3px);\n}\n.bp4-tooltip2.bp4-popover2-placement-left .bp4-popover2-arrow {\n  transform: translateX(-3px);\n}\n.bp4-tooltip2.bp4-popover2-placement-bottom .bp4-popover2-arrow {\n  transform: translateY(3px);\n}\n.bp4-tooltip2.bp4-popover2-placement-right .bp4-popover2-arrow {\n  transform: translateX(3px);\n}\n.bp4-tooltip2.bp4-dark, .bp4-dark .bp4-tooltip2 {\n  box-shadow: 0 2px 4px rgba(17, 20, 24, 0.4), 0 8px 24px rgba(17, 20, 24, 0.4);\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-content, .bp4-dark .bp4-tooltip2 .bp4-popover2-content {\n  background: #e5e8eb;\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-content,\n.bp4-tooltip2.bp4-dark .bp4-heading, .bp4-dark .bp4-tooltip2 .bp4-popover2-content,\n.bp4-dark .bp4-tooltip2 .bp4-heading {\n  color: #404854;\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-arrow::before, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow::before {\n  box-shadow: 1px 1px 6px rgba(17, 20, 24, 0.4);\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-arrow-border, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.2;\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow-fill {\n  fill: #e5e8eb;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow-fill {\n    fill: buttonborder;\n  }\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2.bp4-dark, .bp4-dark .bp4-tooltip2 {\n    border: 1px solid buttonborder;\n  }\n}\n.bp4-tooltip2.bp4-dark .bp4-text-muted, .bp4-dark .bp4-tooltip2 .bp4-text-muted {\n  color: #5f6b7c;\n}\n.bp4-tooltip2.bp4-dark .bp4-text-disabled, .bp4-dark .bp4-tooltip2 .bp4-text-disabled {\n  color: rgba(95, 107, 124, 0.6);\n}\n.bp4-tooltip2.bp4-dark .bp4-running-text hr, .bp4-dark .bp4-tooltip2 .bp4-running-text hr {\n  border-color: rgba(17, 20, 24, 0.15);\n}\n.bp4-tooltip2.bp4-dark a, .bp4-dark .bp4-tooltip2 a {\n  color: #215db0;\n}\n.bp4-tooltip2.bp4-dark a:hover, .bp4-dark .bp4-tooltip2 a:hover {\n  color: #215db0;\n}\n.bp4-tooltip2.bp4-dark a .bp4-icon, .bp4-tooltip2.bp4-dark a .bp4-icon-standard, .bp4-tooltip2.bp4-dark a .bp4-icon-large, .bp4-dark .bp4-tooltip2 a .bp4-icon, .bp4-dark .bp4-tooltip2 a .bp4-icon-standard, .bp4-dark .bp4-tooltip2 a .bp4-icon-large {\n  color: inherit;\n}\n.bp4-tooltip2.bp4-dark a code, .bp4-dark .bp4-tooltip2 a code {\n  color: inherit;\n}\n.bp4-tooltip2.bp4-dark .bp4-code,\n.bp4-tooltip2.bp4-dark .bp4-running-text code, .bp4-dark .bp4-tooltip2 .bp4-code,\n.bp4-dark .bp4-tooltip2 .bp4-running-text code {\n  background: rgba(255, 255, 255, 0.7);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.2);\n  color: #5f6b7c;\n}\na > .bp4-tooltip2.bp4-dark .bp4-code,\na > .bp4-tooltip2.bp4-dark .bp4-running-text code, a > .bp4-dark .bp4-tooltip2 .bp4-code,\na > .bp4-dark .bp4-tooltip2 .bp4-running-text code {\n  color: #2d72d2;\n}\n.bp4-tooltip2.bp4-dark .bp4-code-block,\n.bp4-tooltip2.bp4-dark .bp4-running-text pre, .bp4-dark .bp4-tooltip2 .bp4-code-block,\n.bp4-dark .bp4-tooltip2 .bp4-running-text pre {\n  background: rgba(255, 255, 255, 0.7);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.15);\n  color: #1c2127;\n}\n.bp4-tooltip2.bp4-dark .bp4-code-block > code,\n.bp4-tooltip2.bp4-dark .bp4-running-text pre > code, .bp4-dark .bp4-tooltip2 .bp4-code-block > code,\n.bp4-dark .bp4-tooltip2 .bp4-running-text pre > code {\n  background: none;\n  box-shadow: none;\n  color: inherit;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2.bp4-dark .bp4-code-block,\n  .bp4-tooltip2.bp4-dark .bp4-running-text pre, .bp4-dark .bp4-tooltip2 .bp4-code-block,\n  .bp4-dark .bp4-tooltip2 .bp4-running-text pre {\n    border: 1px solid buttonborder;\n    box-shadow: none;\n  }\n}\n.bp4-tooltip2.bp4-dark .bp4-key,\n.bp4-tooltip2.bp4-dark .bp4-running-text kbd, .bp4-dark .bp4-tooltip2 .bp4-key,\n.bp4-dark .bp4-tooltip2 .bp4-running-text kbd {\n  background: #ffffff;\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 1px 1px rgba(17, 20, 24, 0.2);\n  color: #5f6b7c;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-primary, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-primary, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-primary, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-primary, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-primary, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-primary {\n  color: #215db0;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-success, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-success, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-success, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-success, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-success, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-success {\n  color: #1c6e42;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-warning, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-warning, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-warning, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-warning, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-warning, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-warning {\n  color: #935610;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-danger, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-danger, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-danger, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-danger, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-danger, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-danger {\n  color: #ac2f33;\n}\n.bp4-tooltip2.bp4-intent-primary .bp4-popover2-content {\n  background: #2d72d2;\n  color: #ffffff;\n}\n.bp4-tooltip2.bp4-intent-primary .bp4-popover2-arrow-fill {\n  fill: #2d72d2;\n}\n.bp4-tooltip2.bp4-intent-success .bp4-popover2-content {\n  background: #238551;\n  color: #ffffff;\n}\n.bp4-tooltip2.bp4-intent-success .bp4-popover2-arrow-fill {\n  fill: #238551;\n}\n.bp4-tooltip2.bp4-intent-warning .bp4-popover2-content {\n  background: #c87619;\n  color: #ffffff;\n}\n.bp4-tooltip2.bp4-intent-warning .bp4-popover2-arrow-fill {\n  fill: #c87619;\n}\n.bp4-tooltip2.bp4-intent-danger .bp4-popover2-content {\n  background: #cd4246;\n  color: #ffffff;\n}\n.bp4-tooltip2.bp4-intent-danger .bp4-popover2-arrow-fill {\n  fill: #cd4246;\n}\n\n.bp4-tooltip2-indicator {\n  border-bottom: dotted 1px;\n  cursor: help;\n}"],"sourceRoot":""}