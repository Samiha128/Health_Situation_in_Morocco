{"version":3,"file":"static/chunks/7265.fa8d771c921742e8.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/nav/InstanceWarningIcon.tsx","webpack://_N_E/../ui-core/src/nav/WorkspaceStatus.tsx","webpack://_N_E/../ui-core/src/instance/InstanceTabs.tsx"],"sourcesContent":["import {Colors, Icon} from '@dagster-io/ui-components';\nimport {memo, useContext} from 'react';\n\nimport {WarningTooltip} from './WarningTooltip';\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nexport const InstanceWarningIcon = memo(() => {\n  const {daemons} = useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.accentYellow()} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Spinner, Tooltip} from '@dagster-io/ui-components';\nimport {memo, useContext} from 'react';\n\nimport {WarningTooltip} from './WarningTooltip';\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nexport const WorkspaceStatus = memo(({placeholder}: {placeholder: boolean}) => {\n  const {codeLocations} = useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.accentGray()} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.accentYellow()} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig ? (\n          <TabLink id=\"concurrency\" title=\"Concurrency limits\" to=\"/concurrency\" />\n        ) : null}\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n"],"names":["InstanceWarningIcon","memo","daemons","useContext","DeploymentStatusContext","jsx_runtime","jsx","WarningTooltip","content","position","modifiers","offset","enabled","options","Icon","name","color","Colors","WorkspaceStatus","placeholder","param","codeLocations","type","Tooltip","placement","Spinner","purpose","fillColor","div","style","width","InstanceTabs","refreshState","tab","props","healthTitle","InstancePageContext","canSeeConfig","useCanSeeConfig","jsxs","Box","flex","direction","justifyContent","alignItems","Tabs","selectedTabId","TabLink","id","title","to","icon","padding","bottom","QueryRefreshCountdown"],"sourceRoot":""}