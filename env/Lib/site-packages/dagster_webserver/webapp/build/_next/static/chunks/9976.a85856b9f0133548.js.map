{"version":3,"file":"static/chunks/9976.a85856b9f0133548.js","mappings":"+TAuBO,IAAMA,EAA8B,KACzCC,CAAAA,EAAAA,EAAAA,EAAAA,IACA,GAAM,CAAC,EAAGC,CAAI,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IACZC,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,IAEVC,EAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,IAEzBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAkB,wBAClB,IAAMC,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,EAAiB,oBAEzBC,EAAuBC,CAAAA,EAAAA,EAAAA,WAAAA,EAC3B,CAACV,EAAoBW,KACnBT,CAAO,CAACS,EAAK,CAAC,CACZC,SAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAA6Bb,GACvCc,OAAQZ,EAAQa,QAAQ,CAACD,MAAM,EAEnC,EACA,CAACZ,EAAQ,EAGLc,EAA8BN,CAAAA,EAAAA,EAAAA,WAAAA,EAClC,CAACO,EAA2CC,KAC1C,IAAMlB,EAAOmB,CAAAA,EAAAA,EAAAA,CAAAA,EAAuBD,EAAKE,QAAQ,CAAE,CAACC,KAAM,YAAY,EAClEJ,CAAAA,EAAEK,OAAO,CACXC,OAAOC,IAAI,CAACxB,EAAM,UAElBE,EAAQuB,IAAI,CAACzB,EAEjB,EACA,CAACE,EAAQ,EAGL,CAACwB,SAAAA,CAAQ,CAAC,CAAGtB,EAEbuB,EAAeC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IACW,EACpCC,6BAA8B,GAC9BC,kBAAmB,GAAU,CAACJ,EAASR,EACzC,GAEC,CAACQ,EAAS,EAEb,MACE,GAAAK,EAAAC,IAAA,EAACC,EAAAA,CAAIA,CAAAA,CAACC,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,cAAe,CAAC,YACtE,GAAAN,EAAAO,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CACTC,MAAO,GAAAT,EAAAO,GAAA,EAACG,EAAAA,EAAOA,CAAAA,UAAC,yBAChBC,MAAO,GAAAX,EAAAO,GAAA,EAACK,EAAAA,CAAeA,CAAAA,CAACC,MAAM,yBAEhC,GAAAb,EAAAO,GAAA,EAACO,EAAAA,EAAkBA,CAAAA,CACjBlB,aAAcA,EACdvB,iBAAkBA,EAClB0C,QAAS,CAACC,qBAAsB,GAAMC,kBAAmB,EAAI,EAC7DC,aAAcC,CAAAA,EAAAA,EAAAA,EAAAA,EAA+BlD,GAC7CS,qBAAsBA,EACtBO,4BAA6BA,EAC7BmC,cAAa,GACb5C,MAAOA,MAIf,CAIA6C,CAAAA,EAAA,QAAetD","sources":["webpack://_N_E/../ui-core/src/assets/AssetsGroupsGlobalGraphRoot.tsx"],"sourcesContent":["import {Heading, Page, PageHeader} from '@dagster-io/ui-components';\nimport {useCallback, useMemo} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {\n  globalAssetGraphPathFromString,\n  globalAssetGraphPathToString,\n} from './globalAssetGraphPathToString';\nimport {useAssetDefinitionFilterState} from './useAssetDefinitionFilterState';\nimport {useTrackPageView} from '../app/analytics';\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphFetchScope} from '../asset-graph/useAssetGraphData';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {usePageLoadTrace} from '../performance';\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\n\ninterface AssetGroupRootParams {\n  0: string;\n}\n\nexport const AssetsGroupsGlobalGraphRoot = () => {\n  useTrackPageView();\n  const {0: path} = useParams<AssetGroupRootParams>();\n  const history = useHistory();\n\n  const assetFilterState = useAssetDefinitionFilterState();\n\n  useDocumentTitle(`Global Asset Lineage`);\n  const trace = usePageLoadTrace('GlobalAssetGraph');\n\n  const onChangeExplorerPath = useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode]({\n        pathname: globalAssetGraphPathToString(path),\n        search: history.location.search,\n      });\n    },\n    [history],\n  );\n\n  const onNavigateToSourceAssetNode = useCallback(\n    (e: Pick<React.MouseEvent<any>, 'metaKey'>, node: AssetLocation) => {\n      const path = assetDetailsPathForKey(node.assetKey, {view: 'definition'});\n      if (e.metaKey) {\n        window.open(path, '_blank');\n      } else {\n        history.push(path);\n      }\n    },\n    [history],\n  );\n\n  const {filterFn} = assetFilterState;\n\n  const fetchOptions = useMemo(() => {\n    const options: AssetGraphFetchScope = {\n      hideEdgesToNodesOutsideQuery: false,\n      hideNodesMatching: (node) => !filterFn(node),\n    };\n    return options;\n  }, [filterFn]);\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Heading>Global Asset Lineage</Heading>}\n        right={<ReloadAllButton label=\"Reload definitions\" />}\n      />\n      <AssetGraphExplorer\n        fetchOptions={fetchOptions}\n        assetFilterState={assetFilterState}\n        options={{preferAssetRendering: true, explodeComposites: true}}\n        explorerPath={globalAssetGraphPathFromString(path)}\n        onChangeExplorerPath={onChangeExplorerPath}\n        onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n        isGlobalGraph\n        trace={trace}\n      />\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default AssetsGroupsGlobalGraphRoot;\n"],"names":["AssetsGroupsGlobalGraphRoot","useTrackPageView","path","useParams","history","useHistory","assetFilterState","useAssetDefinitionFilterState","useDocumentTitle","trace","usePageLoadTrace","onChangeExplorerPath","useCallback","mode","pathname","globalAssetGraphPathToString","search","location","onNavigateToSourceAssetNode","e","node","assetDetailsPathForKey","assetKey","view","metaKey","window","open","push","filterFn","fetchOptions","useMemo","hideEdgesToNodesOutsideQuery","hideNodesMatching","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Page","style","display","flexDirection","paddingBottom","jsx","PageHeader","title","Heading","right","ReloadAllButton","label","AssetGraphExplorer","options","preferAssetRendering","explodeComposites","explorerPath","globalAssetGraphPathFromString","isGlobalGraph","__webpack_exports__"],"sourceRoot":""}