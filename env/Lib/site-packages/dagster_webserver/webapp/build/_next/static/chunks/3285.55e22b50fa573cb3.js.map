{"version":3,"file":"static/chunks/3285.55e22b50fa573cb3.js","mappings":"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CAC,QAAA,KACAC,QAAa7d,EACb8d,kBAAA,KACAC,WAAA,KACAhW,OAAA,KACAlS,KAAA,KACAqS,SAAA,KACAmO,UAAerW,EACfsW,aAAkBtW,EAClBuW,aAAkBvW,EAClBrI,GAAA,KACAqmB,YAAiBhe,EACjBwW,eAAA,KACAyH,kBAAA,KACAC,GAAA,KACAC,IAAA,KACAC,UAAepe,EACfqe,EAAOre,EACPse,GAAQte,EACRue,GAAQve,EACRwe,GAAQxe,EACRye,GAAQze,EACR0e,aAAkBve,EAClBwe,iBAAA,KACAC,UAAA,KACAC,WAAA,KACAC,SAAA,KACAC,QAAA,KACAhsB,KAAA,KACAisB,aAAA,KACAvI,cAAA,KACAC,cAAA,KACAuI,kBAAuBjf,EACvBkf,MAAA,KACAvI,UAAA,KACAC,UAAA,KACAC,YAAA,KACAsI,aAAA,KACAC,YAAA,KACAC,YAAA,KACAze,KAAA,KACA0e,iBAAA,KACAC,UAAA,KACAC,aAAA,KACAn0B,IAAA,KACAge,MAAA,KACAoW,uBAAA,KACAC,sBAAA,KACAC,UAAe3f,EACf4f,UAAA,KACAtW,OAAA,KACAC,IAAA,KACA/rB,KAAA,KACAiB,KAAA,KACAq4B,QAAA,KACAC,YAAA,KACAC,aAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,SAAA,KACAC,MAAA,KACAC,UAAA,KACAC,WAAA,KACAsI,WAAA,KACAC,SAAA,KACAx9B,OAAA,KACAwnB,QAAA,KACA0N,WAAA,KACAzN,aAAA,KACAG,cAAA,KACAuN,QAAA,KACApN,SAAA,KACAC,UAAA,KACAC,iBAAA,KACAC,SAAA,KACAC,QAAA,KACAC,QAAA,KACAI,OAAA,KACAC,YAAA,KACAC,MAAA,KACAC,WAAA,KACAC,OAAA,KACAC,UAAA,KACAC,YAAA,KACAC,WAAA,KACAC,YAAA,KACAC,WAAA,KACAC,YAAA,KACAC,OAAA,KACAC,iBAAA,KACAC,UAAA,KACA+L,MAAA,KACA9L,QAAA,KACAC,QAAA,KACAC,QAAA,KACA6L,UAAA,KACAC,WAAA,KACA5L,aAAA,KACAC,QAAA,K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A,SACA,KACA,OACA,OACA,OACA,MACA,SACA,KACA,IACA,IACA,QACA,OACA,UACA,OACA,SACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,KACA,KACA,MACA,QACA,CAEAC,EAAA,CACA,YACA,cACA,eACA,QACA,cACA,cACA,sBACA,gBACA,eACA,eACA,gBACA,OACA,SACA,QACA,kBACA,aACA,cACA,iBACA,kBACA,UACA,uBACA,mBACA,yBACA,+BACA,aACA,OACA,YACA,SACA,QAEA,YACA,YACA,aACA,aACA,CAGAC,EAAA,CACA,SACA,WACA,QACA,UACA,UACA,UACA,UACA,MACA,WACA,OACA,QACA,UACA,QACA,cACA,gBACA,aACA,SACA,QACA,gBACA,eACA,MACA,OACA,eACA,QACA,gBACA,WACA,UACA,KACA,OACA,aACA,eACA,OACA,OACA,aACA,MACA,YACA,UACA,iBACA,eACA,mBACA,cACA,aACA,eACA,WACA,eACA,OACA,oBACA,YACA,aACA,WACA,QACA,OACA,QACA,SACA,gBACA,eACA,QACA,UACA,QACA,CAGAC,EAAA,CACA,QACA,WACA,SACA,MACA,aACA,eACA,aACA,gBACA,SACA,OACA,cACA,YACA,UACA,iBACA,CAEAC,EAAA,CACA,gBACA,cACA,aACA,MACA,YACA,kBACA,sBACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,sBACA,aACA,wBACA,wBACA,kBACA,mBACA,mBACA,oBACA,sBACA,oBACA,kBACA,aACA,SACA,eACA,qBACA,mBACA,yBACA,yBACA,yBACA,qBACA,2BACA,2BACA,2BACA,qBACA,qBACA,gBACA,sBACA,4BACA,6BACA,sBACA,sBACA,kBACA,eACA,eACA,sBACA,sBACA,qBACA,sBACA,qBACA,gBACA,sBACA,oBACA,0BACA,0BACA,0BACA,sBACA,4BACA,4BACA,4BACA,sBACA,sBACA,cACA,oBACA,oBACA,oBACA,gBACA,eACA,qBACA,qBACA,qBACA,iBACA,eACA,aACA,mBACA,yBACA,0BACA,mBACA,mBACA,eACA,SACA,uBACA,aACA,aACA,cACA,eACA,eACA,eACA,cACA,QACA,OACA,YACA,YACA,QACA,eACA,cACA,aACA,cACA,oBACA,oBACA,oBACA,cACA,eACA,UACA,UACA,UACA,qBACA,oBACA,gBACA,MACA,YACA,aACA,SACA,YACA,UACA,cACA,SACA,OACA,aACA,iBACA,YACA,YACA,cACA,YACA,QACA,OACA,OACA,eACA,cACA,wBACA,eACA,yBACA,YACA,mBACA,iBACA,eACA,aACA,iBACA,eACA,oBACA,0BACA,yBACA,uBACA,wBACA,0BACA,cACA,MACA,6BACA,OACA,YACA,oBACA,iBACA,iBACA,cACA,kBACA,oBACA,WACA,WACA,eACA,iBACA,gBACA,sBACA,wBACA,qBACA,sBACA,SACA,UACA,OACA,oBACA,kBACA,mBACA,WACA,cACA,YACA,kBACA,OACA,iBACA,aACA,cACA,aACA,mBACA,sBACA,kBACA,SACA,eACA,mBACA,qBACA,gBACA,gBACA,oBACA,sBACA,cACA,eACA,aACA,QACA,OACA,cACA,mBACA,qBACA,qBACA,oBACA,qBACA,oBACA,YACA,iBACA,aACA,YACA,cACA,gBACA,cACA,YACA,YACA,iBACA,aACA,kBACA,YACA,iBACA,aACA,kBACA,YACA,iBACA,WACA,YACA,WACA,YACA,SACA,OACA,SACA,aACA,kBACA,UACA,QACA,UACA,UACA,gBACA,iBACA,gBACA,gBACA,WACA,gBACA,aACA,aACA,UACA,gBACA,oBACA,sBACA,iBACA,iBACA,qBACA,uBACA,eACA,gBACA,cACA,mBACA,oBACA,oBACA,QACA,cACA,eACA,cACA,qBACA,iBACA,WACA,SACA,SACA,OACA,aACA,cACA,QACA,UACA,gBACA,sBACA,0BACA,4BACA,uBACA,uBACA,2BACA,6BACA,qBACA,sBACA,oBACA,iBACA,uBACA,2BACA,6BACA,wBACA,wBACA,4BACA,8BACA,sBACA,uBACA,qBACA,oBACA,mBACA,mBACA,kBACA,mBACA,kBACA,wBACA,eACA,gBACA,QACA,WACA,MACA,WACA,eACA,aACA,iBACA,kBACA,uBACA,kBACA,wBACA,uBACA,wBACA,gBACA,sBACA,yBACA,sBACA,cACA,eACA,mBACA,gBACA,iBACA,cACA,iBACA,0BACA,MACA,YACA,gBACA,mBACA,kBACA,aACA,mBACA,sBACA,sBACA,6BACA,eACA,iBACA,aACA,gBACA,iBACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,SACA,QACA,cACA,aACA,eACA,YACA,eACA,UAGA,CAAAC,OAAA,GKtlBA,IAAAC,EAAA,kBACAC,EAAA,OAAkBD,EAAc,GAChCE,EAAA,8BACAC,EAAA,CACArsC,UAAA,SACA6P,SAAA,CAGA,CAAMvM,MAAA,QAAe4oC,EAAc,KAAKC,EAAK,WAAWA,EACxD,cAAmBD,EAAc,YAD4B,EAG7D,CAAM5oC,MAAA,OAAc4oC,EAAc,KAAKC,EAAK,+BAC5C,CAAM7oC,MAAA,IAAW6oC,EAAK,cACtB,CAAM7oC,MAAA,OAAc4oC,EAAc,aAGlC,CAAM5oC,MAAA,aAAoB8oC,EAAU,SAASA,EAAU,QAAQA,EAC/D,cAAmBF,EAAc,YADwC,EAIzE,CAAM5oC,MAAA,kCAGN,CAAMA,MAAA,YAAmB8oC,EAAU,YAGnC,CAAM9oC,MAAA,0BAGN,CAAMA,MAAA,iCACN,CACAC,UAAA,CACA,ECjCA,IAAAP,EAAA,2BACAspC,EAAA,CACA,KACA,KACA,KACA,KACA,MACA,QACA,UACA,MACA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,UACA,CACAC,EAAA,CACA,OACA,QACA,OACA,YACA,MACA,WACA,CAGAC,EAAA,CAEA,SACA,WACA,UACA,SAEA,OACA,OACA,SACA,SAEA,SACA,SAEA,QACA,eACA,eACA,YACA,aACA,oBACA,aACA,aACA,cACA,cACA,gBACA,iBAEA,MACA,MACA,UACA,UAEA,cACA,oBACA,UACA,WACA,OAEA,UACA,YACA,oBACA,gBAEA,UACA,QAEA,OAEA,cACA,CAEAC,EAAA,CACA,QACA,YACA,gBACA,aACA,iBACA,cACA,YACA,WACA,CAEAC,EAAA,CACA,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,WACA,CAEAC,EAAA,CACA,YACA,OACA,QACA,UACA,SACA,WACA,eACA,iBACA,SACA,SACA,CAEAC,EAAA,GAAArzC,MAAA,CACAmzC,EACAF,EACAC,GE1JA,IAAII,EAAa,kBACbC,EAAI,OAAUD,EAAc,GAC5BE,EAAS,8BACTC,EAAO,CACXhtC,UAAA,SACA6P,SAAA,CAGA,CAAMvM,MAAA,QAAeupC,EAAc,KAAKC,EAAK,WAAWA,EACxD,cAAmBD,EAAc,YAD4B,EAG7D,CAAMvpC,MAAA,OAAcupC,EAAc,KAAKC,EAAK,+BAC5C,CAAMxpC,MAAA,IAAWwpC,EAAK,cACtB,CAAMxpC,MAAA,OAAcupC,EAAc,aAGlC,CAAMvpC,MAAA,aAAoBypC,EAAU,SAASA,EAAU,QAAQA,EAC/D,cAAmBF,EAAc,YADwC,EAIzE,CAAMvpC,MAAA,kCAGN,CAAMA,MAAA,YAAmBypC,EAAU,YAGnC,CAAMzpC,MAAA,0BAGN,CAAMA,MAAA,iCACN,CACAC,UAAA,CACA,ECjCA,IAAM0pC,EAAK,GACX,EACA5B,UAAA,CACA1sC,MAAA,OACA2E,MAAA,YACA,EACAgoC,cAAA/iC,EAAAzE,oBAAA,CACAynC,SAAA,CACA5sC,MAAA,SACA2E,MAAA,iDACA,EACAkoC,kBAAA,CACAxrC,UAAA,WACAsD,MAAA,cACA,EACAmoC,wBAAA,CACA9sC,MAAA,gBACA2E,MAAA,KACApI,IAAA,KACAwJ,QAAA,IACAhB,SAAA,CACA6E,EAAA9D,gBAAA,CACA8D,EAAA5D,iBAAA,CACA,EAEA+mC,gBAAA,CACA/sC,MAAA,SACA2E,MAAAiF,EAAArF,SAAA,CAAAqF,kGASAhF,UAAA,CACA,EACAooC,aAAA,CACA3rC,UAAA,OACAsD,MAAA,0BACA,CACA,GAGM4pC,EAAI,CACV,IACA,OACA,UACA,UACA,QACA,QACA,IACA,aACA,OACA,SACA,SACA,UACA,OACA,OACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,SACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,OACA,MACA,SACA,KACA,IACA,IACA,QACA,OACA,UACA,OACA,SACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,KACA,KACA,MACA,QACA,CAEMC,EAAc,CACpB,YACA,cACA,eACA,QACA,cACA,cACA,sBACA,gBACA,eACA,eACA,gBACA,OACA,SACA,QACA,kBACA,aACA,cACA,iBACA,kBACA,UACA,uBACA,mBACA,yBACA,+BACA,aACA,OACA,YACA,SACA,QAEA,YACA,YACA,aACA,aACA,CAGMC,EAAc,CACpB,SACA,WACA,QACA,UACA,UACA,UACA,UACA,MACA,WACA,OACA,QACA,UACA,QACA,cACA,gBACA,aACA,SACA,QACA,gBACA,eACA,MACA,OACA,eACA,QACA,gBACA,WACA,UACA,KACA,OACA,aACA,eACA,OACA,OACA,aACA,MACA,YACA,UACA,iBACA,eACA,mBACA,cACA,aACA,eACA,WACA,eACA,OACA,oBACA,YACA,aACA,WACA,QACA,OACA,QACA,SACA,gBACA,eACA,QACA,UACA,QACA,CAGMC,EAAe,CACrB,QACA,WACA,SACA,MACA,aACA,eACA,aACA,gBACA,SACA,OACA,cACA,YACA,UACA,iBACA,CAEMC,EAAU,CAChB,gBACA,cACA,aACA,MACA,YACA,kBACA,sBACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,sBACA,aACA,wBACA,wBACA,kBACA,mBACA,mBACA,oBACA,sBACA,oBACA,kBACA,aACA,SACA,eACA,qBACA,mBACA,yBACA,yBACA,yBACA,qBACA,2BACA,2BACA,2BACA,qBACA,qBACA,gBACA,sBACA,4BACA,6BACA,sBACA,sBACA,kBACA,eACA,eACA,sBACA,sBACA,qBACA,sBACA,qBACA,gBACA,sBACA,oBACA,0BACA,0BACA,0BACA,sBACA,4BACA,4BACA,4BACA,sBACA,sBACA,cACA,oBACA,oBACA,oBACA,gBACA,eACA,qBACA,qBACA,qBACA,iBACA,eACA,aACA,mBACA,yBACA,0BACA,mBACA,mBACA,eACA,SACA,uBACA,aACA,aACA,cACA,eACA,eACA,eACA,cACA,QACA,OACA,YACA,YACA,QACA,eACA,cACA,aACA,cACA,oBACA,oBACA,oBACA,cACA,eACA,UACA,UACA,UACA,qBACA,oBACA,gBACA,MACA,YACA,aACA,SACA,YACA,UACA,cACA,SACA,OACA,aACA,iBACA,YACA,YACA,cACA,YACA,QACA,OACA,OACA,eACA,cACA,wBACA,eACA,yBACA,YACA,mBACA,iBACA,eACA,aACA,iBACA,eACA,oBACA,0BACA,yBACA,uBACA,wBACA,0BACA,cACA,MACA,6BACA,OACA,YACA,oBACA,iBACA,iBACA,cACA,kBACA,oBACA,WACA,WACA,eACA,iBACA,gBACA,sBACA,wBACA,qBACA,sBACA,SACA,UACA,OACA,oBACA,kBACA,mBACA,WACA,cACA,YACA,kBACA,OACA,iBACA,aACA,cACA,aACA,mBACA,sBACA,kBACA,SACA,eACA,mBACA,qBACA,gBACA,gBACA,oBACA,sBACA,cACA,eACA,aACA,QACA,OACA,cACA,mBACA,qBACA,qBACA,oBACA,qBACA,oBACA,YACA,iBACA,aACA,YACA,cACA,gBACA,cACA,YACA,YACA,iBACA,aACA,kBACA,YACA,iBACA,aACA,kBACA,YACA,iBACA,WACA,YACA,WACA,YACA,SACA,OACA,SACA,aACA,kBACA,UACA,QACA,UACA,UACA,gBACA,iBACA,gBACA,gBACA,WACA,gBACA,aACA,aACA,UACA,gBACA,oBACA,sBACA,iBACA,iBACA,qBACA,uBACA,eACA,gBACA,cACA,mBACA,oBACA,oBACA,QACA,cACA,eACA,cACA,qBACA,iBACA,WACA,SACA,SACA,OACA,aACA,cACA,QACA,UACA,gBACA,sBACA,0BACA,4BACA,uBACA,uBACA,2BACA,6BACA,qBACA,sBACA,oBACA,iBACA,uBACA,2BACA,6BACA,wBACA,wBACA,4BACA,8BACA,sBACA,uBACA,qBACA,oBACA,mBACA,mBACA,kBACA,mBACA,kBACA,wBACA,eACA,gBACA,QACA,WACA,MACA,WACA,eACA,aACA,iBACA,kBACA,uBACA,kBACA,wBACA,uBACA,wBACA,gBACA,sBACA,yBACA,sBACA,cACA,eACA,mBACA,gBACA,iBACA,cACA,iBACA,0BACA,MACA,YACA,gBACA,mBACA,kBACA,aACA,mBACA,sBACA,sBACA,6BACA,eACA,iBACA,aACA,gBACA,iBACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,SACA,QACA,cACA,aACA,eACA,YACA,eACA,UAGA,CAAArB,OAAA,GAGAsB,EAAyBH,EAAc7zC,MAAA,CAAQ8zC,Gc1lBzCG,EAAK,GACX,EACAnC,UAAA,CACA1sC,MAAA,OACA2E,MAAA,YACA,EACAgoC,cAAA/iC,EAAAzE,oBAAA,CACAynC,SAAA,CACA5sC,MAAA,SACA2E,MAAA,iDACA,EACAkoC,kBAAA,CACAxrC,UAAA,WACAsD,MAAA,cACA,EACAmoC,wBAAA,CACA9sC,MAAA,gBACA2E,MAAA,KACApI,IAAA,KACAwJ,QAAA,IACAhB,SAAA,CACA6E,EAAA9D,gBAAA,CACA8D,EAAA5D,iBAAA,CACA,EAEA+mC,gBAAA,CACA/sC,MAAA,SACA2E,MAAAiF,EAAArF,SAAA,CAAAqF,kGASAhF,UAAA,CACA,EACAooC,aAAA,CACA3rC,UAAA,OACAsD,MAAA,0BACA,CACA,GAGMmqC,EAAI,CACV,IACA,OACA,UACA,UACA,QACA,QACA,IACA,aACA,OACA,SACA,SACA,UACA,OACA,OACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,SACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,OACA,MACA,SACA,KACA,IACA,IACA,QACA,OACA,UACA,OACA,SACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,KACA,KACA,MACA,QACA,CAEMC,EAAc,CACpB,YACA,cACA,eACA,QACA,cACA,cACA,sBACA,gBACA,eACA,eACA,gBACA,OACA,SACA,QACA,kBACA,aACA,cACA,iBACA,kBACA,UACA,uBACA,mBACA,yBACA,+BACA,aACA,OACA,YACA,SACA,QAEA,YACA,YACA,aACA,aACA,CAGMC,EAAc,CACpB,SACA,WACA,QACA,UACA,UACA,UACA,UACA,MACA,WACA,OACA,QACA,UACA,QACA,cACA,gBACA,aACA,SACA,QACA,gBACA,eACA,MACA,OACA,eACA,QACA,gBACA,WACA,UACA,KACA,OACA,aACA,eACA,OACA,OACA,aACA,MACA,YACA,UACA,iBACA,eACA,mBACA,cACA,aACA,eACA,WACA,eACA,OACA,oBACA,YACA,aACA,WACA,QACA,OACA,QACA,SACA,gBACA,eACA,QACA,UACA,QACA,CAGMC,EAAe,CACrB,QACA,WACA,SACA,MACA,aACA,eACA,aACA,gBACA,SACA,OACA,cACA,YACA,UACA,iBACA,CAEMC,EAAU,CAChB,gBACA,cACA,aACA,MACA,YACA,kBACA,sBACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,sBACA,aACA,wBACA,wBACA,kBACA,mBACA,mBACA,oBACA,sBACA,oBACA,kBACA,aACA,SACA,eACA,qBACA,mBACA,yBACA,yBACA,yBACA,qBACA,2BACA,2BACA,2BACA,qBACA,qBACA,gBACA,sBACA,4BACA,6BACA,sBACA,sBACA,kBACA,eACA,eACA,sBACA,sBACA,qBACA,sBACA,qBACA,gBACA,sBACA,oBACA,0BACA,0BACA,0BACA,sBACA,4BACA,4BACA,4BACA,sBACA,sBACA,cACA,oBACA,oBACA,oBACA,gBACA,eACA,qBACA,qBACA,qBACA,iBACA,eACA,aACA,mBACA,yBACA,0BACA,mBACA,mBACA,eACA,SACA,uBACA,aACA,aACA,cACA,eACA,eACA,eACA,cACA,QACA,OACA,YACA,YACA,QACA,eACA,cACA,aACA,cACA,oBACA,oBACA,oBACA,cACA,eACA,UACA,UACA,UACA,qBACA,oBACA,gBACA,MACA,YACA,aACA,SACA,YACA,UACA,cACA,SACA,OACA,aACA,iBACA,YACA,YACA,cACA,YACA,QACA,OACA,OACA,eACA,cACA,wBACA,eACA,yBACA,YACA,mBACA,iBACA,eACA,aACA,iBACA,eACA,oBACA,0BACA,yBACA,uBACA,wBACA,0BACA,cACA,MACA,6BACA,OACA,YACA,oBACA,iBACA,iBACA,cACA,kBACA,oBACA,WACA,WACA,eACA,iBACA,gBACA,sBACA,wBACA,qBACA,sBACA,SACA,UACA,OACA,oBACA,kBACA,mBACA,WACA,cACA,YACA,kBACA,OACA,iBACA,aACA,cACA,aACA,mBACA,sBACA,kBACA,SACA,eACA,mBACA,qBACA,gBACA,gBACA,oBACA,sBACA,cACA,eACA,aACA,QACA,OACA,cACA,mBACA,qBACA,qBACA,oBACA,qBACA,oBACA,YACA,iBACA,aACA,YACA,cACA,gBACA,cACA,YACA,YACA,iBACA,aACA,kBACA,YACA,iBACA,aACA,kBACA,YACA,iBACA,WACA,YACA,WACA,YACA,SACA,OACA,SACA,aACA,kBACA,UACA,QACA,UACA,UACA,gBACA,iBACA,gBACA,gBACA,WACA,gBACA,aACA,aACA,UACA,gBACA,oBACA,sBACA,iBACA,iBACA,qBACA,uBACA,eACA,gBACA,cACA,mBACA,oBACA,oBACA,QACA,cACA,eACA,cACA,qBACA,iBACA,WACA,SACA,SACA,OACA,aACA,cACA,QACA,UACA,gBACA,sBACA,0BACA,4BACA,uBACA,uBACA,2BACA,6BACA,qBACA,sBACA,oBACA,iBACA,uBACA,2BACA,6BACA,wBACA,wBACA,4BACA,8BACA,sBACA,uBACA,qBACA,oBACA,mBACA,mBACA,kBACA,mBACA,kBACA,wBACA,eACA,gBACA,QACA,WACA,MACA,WACA,eACA,aACA,iBACA,kBACA,uBACA,kBACA,wBACA,uBACA,wBACA,gBACA,sBACA,yBACA,sBACA,cACA,eACA,mBACA,gBACA,iBACA,cACA,iBACA,0BACA,MACA,YACA,gBACA,mBACA,kBACA,aACA,mBACA,sBACA,sBACA,6BACA,eACA,iBACA,aACA,gBACA,iBACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,SACA,QACA,cACA,aACA,eACA,YACA,eACA,UAGA,CAAA5B,OAAA,GG9kBA,SAAA9wC,EAAAW,CAAA,SACA,EACA,iBAAAA,EAAAA,EAEAA,EAAAX,MAAA,CAHA,IAIA,CAMA,SAAA2G,EAAAhG,CAAA,EACA,OAAAvC,EAAA,MAAAuC,EAAA,IACA,CAMA,SAAAvC,EAAA,GAAA7B,CAAA,EAEA,OADAA,EAAA0H,GAAA,IAAAjE,EAAAkE,IAAAE,IAAA,IAEA,CA0BA,SAAA0C,EAAA,GAAAvK,CAAA,EAMA,MAHA,IACA0I,CAAAA,SAxBA1I,CAAA,EACA,IAAA0I,EAAA1I,CAAA,CAAAA,EAAAM,MAAA,UAEA,iBAAAoI,GAAAA,EAAAzC,WAAA,GAAAU,QACA3G,EAAAwK,MAAA,CAAAxK,EAAAM,MAAA,MACAoI,GAEA,EAEA,EAaA1I,GAEAyK,OAAA,UACAzK,EAAA0H,GAAA,IAAAjE,EAAAkE,IAAAE,IAAA,SAEA,CAEA,IAAAuuC,EAAAviC,GAAAhS,EACA,KACAgS,EACA,MAAAhT,IAAA,CAAAgT,GAAA,WAIAwiC,EAAA,CACA,WACA,OACA,CAAA3uC,GAAA,CAAA0uC,GAGAE,EAAA,CACA,OACA,OACA,CAAA5uC,GAAA,CAAA0uC,GAGAG,EAAA,CACA,MACA,OACA,CAGAnoC,EAAA,CAIA,QACA,MACA,iBACA,QACA,QACA,OACA,MACA,KACA,QACA,OACA,QACA,QACA,WACA,cACA,UACA,QACA,SACA,SACA,cACA,KACA,UACA,OACA,OACA,YACA,cACA,qBACA,cACA,QACA,MACA,OACA,MACA,QACA,KACA,SACA,WACA,QACA,SACA,QACA,QACA,kBACA,WACA,KACA,KACA,WACA,cACA,OACA,MACA,WACA,cACA,cACA,OACA,WACA,WACA,WACA,UACA,kBACA,SACA,iBACA,UACA,WACA,gBACA,SACA,SACA,WACA,WACA,SACA,MACA,OACA,SACA,SACA,YACA,QACA,SACA,SACA,QACA,QACA,OACA,MACA,YACA,kBACA,oBACA,UACA,MACA,OACA,QACA,QACA,UACA,CAMAooC,EAAA,CACA,QACA,MACA,OACA,CAGAC,EAAA,CACA,aACA,gBACA,aACA,OACA,YACA,OACA,QACA,CAIAC,EAAA,CACA,gBACA,UACA,aACA,QACA,UACA,SACA,SACA,QACA,UACA,eACA,YACA,YACA,MACA,gBACA,WACA,QACA,YACA,kBACA,2BACA,WACA,CAGAC,EAAA,CACA,MACA,MACA,MACA,SACA,mBACA,aACA,OACA,aACA,YACA,4BACA,MACA,MACA,cACA,eACA,eACA,eACA,sBACA,QACA,WACA,gBACA,WACA,SACA,OACA,oCACA,YACA,OACA,gBACA,iBACA,uBACA,2BACA,oBACA,aACA,0BACA,MACA,CAGAC,EAAArsC,EACA,oBACA,kBACA,iBACA,iBACA,iBACA,mCACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,YAIAssC,EAAAtsC,EACAqsC,EACA,kBACA,kBACA,kBACA,kBACA,mBAMAlO,EAAA7mC,EAAA+0C,EAAAC,EAAA,KAGAC,GAAAvsC,EACA,YACA,uDACA,yDACA,yDACA,kBACA,+DACA,yDACA,+BACA,yDACA,yDACA,gCASAwsC,GAAAxsC,EACAusC,GACA,KACA,0DAIAx2B,GAAAze,EAAAi1C,GAAAC,GAAA,KAGAC,GAAAn1C,EAAA,QAAAk1C,GAAA,KAIAE,GAAA,CACA,cACAp1C,EAAA,eAAA0I,EAAA,2BACA,oBACA,kBACA,sBACA,WACA,SACA,gBACA,WACA,eACA,gBACA,WACA,gBACA,YACA,OACA,UACA,oBACA,YACA,YACA1I,EAAA,SAAAye,GAAA,MACA,OACA,cACA,kBACA,iCACA,gBACA,WACA,oBACA,UACA,mBACA,CAGA42B,GAAA,CACA,MACA,0BACA,QACA,4BACA,cACA,kCACA,UACA,8BACA,OACA,2BACA,QACA,CCjYMC,GAAQ,2BACRC,GAAQ,CACd,KACA,KACA,KACA,KACA,MACA,QACA,UACA,MACA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,UACA,CACMC,GAAQ,CACd,OACA,QACA,OACA,YACA,MACA,WACA,CAGMC,GAAK,CAEX,SACA,WACA,UACA,SAEA,OACA,OACA,SACA,SAEA,SACA,SAEA,QACA,eACA,eACA,YACA,aACA,oBACA,aACA,aACA,cACA,cACA,gBACA,iBAEA,MACA,MACA,UACA,UAEA,cACA,oBACA,UACA,WACA,OAEA,UACA,YACA,oBACA,gBAEA,UACA,QAEA,OAEA,cACA,CAEMC,GAAW,CACjB,QACA,YACA,gBACA,aACA,iBACA,cACA,YACA,WACA,CAEMC,GAAgB,CACtB,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,WACA,CAEMC,GAAkB,CACxB,YACA,OACA,QACA,UACA,SACA,WACA,eACA,iBACA,SACA,SACA,CAEMC,GAAS,GAAA71C,MAAA,CACb21C,GACAF,GACAC,8BMxJK,IAAAI,GAAAhxC,OAAAiC,MAAA,CAAAhC,GAAA4J,OAAA,CACPonC,KAAAhxC,GAAAixC,WACAC,MAAAlxC,GAAAmxC,YACAC,UAAApxC,GAAAqxC,gBACAC,OAAAtxC,GAAAuxC,aACApzC,KAAA6B,GAAAwxC,WACAzJ,IAAA/nC,GAAAyxC,SACA,GASO,SAAAzxC,GAAA0xC,CAAA,EAKP,OAFAC,EAAAC,WAAA,CAAAF,EAAAE,WAAA,EAAAF,EAAAnxC,IAAA,CAEAoxC,EAWA,SAAAA,EAAA94C,CAAA,IAAAqmB,CAAA,EAGA,WAAAwyB,EADA74C,EAA4Bg5C,GAASh5C,KAAAqmB,GAAArmB,EAErC,CACA,CCfA,IAAAsgB,GAAA,GAAcC,cAAA,CAEd04B,GAAA,QAcA,SAAA7mC,GAAAK,CAAA,CAAA1M,CAAA,CAAA5C,EAAA,EAAgD,EAChD,IAAAwE,EAAAxE,EAAAwE,MAAA,CAEA,oBAAA8K,EACA,MAAUylC,GAAK,uCAAAzlC,GAGf,IAAOymC,GAAInjC,WAAA,CAAAtD,GACX,MAAUylC,GAAK,2CAAAzlC,GAGf,oBAAA1M,EACA,MAAUmyC,GAAK,wCAAAnyC,SAGf4B,GACAA,CAAAA,EAAAsxC,EAAA,EAKEC,GAAI58B,SAAA,EAAYrK,UAAAknC,GAAA3wC,YAAAb,CAAA,GAElB,IAAA7G,EACIo4C,GAAI9mC,SAAA,CAAArM,EAAA,CAAmB0M,SAAAA,EAAAF,eAAA,KAQ3B,GALE2mC,GAAI58B,SAAA,KAKNxb,EAAA8Y,WAAA,CACA,MAAA9Y,EAAA8Y,WAAA,CAOA,OAHA9Y,EAAAqT,QAAA,CAAA3K,IAAA,CAAA7C,IAAA,CAAA8L,QAAA,CAAA3R,EAAA2R,QAAA,CACA3R,EAAAqT,QAAA,CAAA3K,IAAA,CAAA7C,IAAA,CAAAyF,SAAA,CAAAtL,EAAAsL,SAAA,CAEAtL,EAAAqT,QAAA,CAAA3K,IAAA,CAwHA,MAAA2vC,GAIA3yC,YAAArD,CAAA,EAEA,KAAAA,OAAA,CAAAA,EAEA,KAAAqG,IAAA,EACAlE,KAAA,OACAqB,KAAA,CAAa8L,SAAA,KAAArG,UAAA,GACblD,SAAA,IAGA,KAAAI,KAAA,OAAAE,IAAA,EAMAd,QAAA3C,CAAA,EACA,GAAAA,KAAAA,EAAA,OAEA,IAAAqT,EAAA,KAAA9P,KAAA,MAAAA,KAAA,CAAAzI,MAAA,IACAshB,EAAA/I,EAAAlQ,QAAA,CAAAkQ,EAAAlQ,QAAA,CAAArI,MAAA,IAEAshB,GAAAA,SAAAA,EAAA7c,IAAA,CACA6c,EAAApc,KAAA,EAAAA,EAEAqT,EAAAlQ,QAAA,CAAAxE,IAAA,EAA6BY,KAAA,OAAAS,MAAAA,CAAA,EAE7B,CAMAqE,WAAAgvC,CAAA,EACA,KAAAxwC,QAAA,CAAArH,OAAA63C,GACA,CAIA/uC,UAAA,CACA,KAAAtB,SAAA,EACA,CAMAuB,iBAAA+uC,CAAA,CAAA3xC,CAAA,EACA,IAAA0R,EAAA,KAAA9P,KAAA,MAAAA,KAAA,CAAAzI,MAAA,IACAmZ,EAAAq/B,EAAA7vC,IAAA,CAAAN,QAAA,CAEAxB,EACA0R,EAAAlQ,QAAA,CAAAxE,IAAA,EACAY,KAAA,UACA6b,QAAA,OACAC,WAAA,CAAqBvY,UAAA,CAAAnB,EAAA,EACrBwB,SAAA8Q,CACA,GAEAZ,EAAAlQ,QAAA,CAAAxE,IAAA,IAAAsV,EAEA,CAKApR,SAAAlB,CAAA,EAIA,IAAAmB,EAAAnB,EACAK,KAAA,MACAE,GAAA,EAAAg9B,EAAAtkC,IAAAA,EAAAskC,EAAA,IAAA98B,MAAA,CAAAxH,GAAA,KAAAwC,OAAA,CAAAqF,WAAA,CAAAy8B,GACA7rB,EAAA,KAAA9P,KAAA,MAAAA,KAAA,CAAAzI,MAAA,IAEAkJ,EAAA,CACAzE,KAAA,UACA6b,QAAA,OACAC,WAAA,CAAmBvY,UAAAA,CAAA,EACnBK,SAAA,IAGAkQ,EAAAlQ,QAAA,CAAAxE,IAAA,CAAAqF,GACA,KAAAT,KAAA,CAAA5E,IAAA,CAAAqF,EACA,CAIAhB,WAAA,CACA,KAAAO,KAAA,CAAAI,GAAA,EACA,CAIAgB,UAAA,EAIAF,QAAA,CACA,QACA,CACA,CAEO,IAAA8uC,GAAA,CACPlnC,UAAAA,GACA8B,cAxNA,SAAAnO,CAAA,CAAA5C,EAAA,EAA0C,EAC1C,IAAAo2C,EAAAp2C,EAAAo2C,MAAA,EAAmCL,GAAIj8B,aAAA,GACvCtV,EAAAxE,EAAAwE,MAAA,CACAgE,EAAA,GAEA7K,EAAA,CACAwE,KAAA,OACAqB,KAAA,CAAW8L,SAAA,KAAArG,UAAA,GACXlD,SAAA,IAOA,SAJAvB,GACAA,CAAAA,EAAAsxC,EAAA,EAGA,iBAAAlzC,EACA,MAAUmyC,GAAK,wCAAAnyC,GAGf,OAAA4F,EAAA4tC,EAAA14C,MAAA,GACA,IAAA6G,EAAA6xC,CAAA,CAAA5tC,EAAA,CAEA,IAASutC,GAAInjC,WAAA,CAAArO,GAAA,SAEb,IAAA0R,EAAAhH,GAAA1K,EAAA3B,EAAA5C,EAEAiW,CAAAA,EAAAzS,IAAA,CAAAyF,SAAA,CAAAtL,EAAA6F,IAAA,CAAAyF,SAAA,EAAAtL,CAAAA,EAAAsY,CAAA,CACA,CAEA,OAAAtY,CACA,EA2LA6b,iBAhLA,SAAAlK,CAAA,CAAAgmC,CAAA,EACES,GAAIv8B,gBAAA,CAAAlK,EAAAgmC,EACN,EAiLAe,cAzJA,SAAA/mC,CAAA,CAAAsJ,CAAA,EACA,oBAAAtJ,EAEQymC,GAAIr9B,eAAA,CAAAE,EAAA,CAAyB5J,aAAAM,CAAA,OAC7B,CAER,IAAArL,EAEA,IAAAA,KAAAqL,EACA6N,GAAA7f,IAAA,CAAAgS,EAAArL,IACY8xC,GAAIr9B,eAAA,CAAApJ,CAAA,CAAArL,EAAA,EAAiC+K,aAAA/K,CAAA,EAGjD,CACA,CA4IA,ECjRAkyC,GAAQ38B,gBAAA,WxCqhBR,SAAAvL,CAAA,EACA,IA+WAqoC,EAAAC,SAx6BAtoC,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CAIAkB,EAAA0E,EAAA/E,OAAA,WAAwDE,SAAA,EAAcJ,MAAA,QAAgB,GACtFwtC,EAAA,qBACAC,EAAA,kBAEAC,EAAA,cACAF,EAAA,IACAnuC,EAAAX,QAAA,CAAA+uC,GACA,gBAAApuC,EAAAX,QAAA,CAJA,YAKA,IAEAivC,EAAA,CACAjxC,UAAA,OACAsD,MAAA,oBACA,EAKA4tC,EAAA,CACAlxC,UAAA,SACA6P,SAAA,CACA,CACAvM,MAAA,cACApI,IAAA,IACAwJ,QAAA,MACAhB,SAAA,CAAA6E,EAAAlF,gBAAA,GAEA,CACAC,MAAA,sEACApI,IAAA,IACAwJ,QAAA,GACA,EACA6D,EAAAnD,iBAAA,EACA9B,MAAA,mCACApI,IAAA,qBACA,GACA,EAGAi2C,EAAA,CACAnxC,UAAA,SACA6P,SAAA,CACA,CAAQvM,MAAA,iBACR,CAAQA,MAAA,yFACR,CAAQA,MAAA,uFACR,CACAC,UAAA,CACA,EAEA6tC,EAAA,CACApxC,UAAA,OACAsD,MAAA,eACApI,IAAA,IACA4K,SAAA,CAAgByF,QAChB,wFACA,EACA7H,SAAA,CACA,CACAJ,MAAA,OACAC,UAAA,CACA,EACAgF,EAAAoL,OAAA,CAAAu9B,EAAA,CAA8BlxC,UAAA,WAC9B,CACAA,UAAA,SACAsD,MAAA,OACA,EACAO,EACA0E,EAAAzE,oBAAA,CACA,EAGAmB,EAAA,CACAjF,UAAA,QACAsD,MAAAX,EAAAX,QAAA,CAAA+uC,GAAAxoC,EAAAvF,QAAA,CACAO,UAAA,CACA,EAEA8tC,EAAA1uC,EAAAX,QAAA,CAAA+uC,GAAAxoC,EAAAvF,QAAA,WA6RAsuC,EAAA,CACA70C,KAhMA,CACA,OACA,OACA,WACA,WACA,UACA,SACA,QACA,MACA,OACA,QACA,OACA,UACA,WACA,SACA,QACA,SACA,CAgLA8O,QA5RA,CACA,UACA,UACA,MACA,SACA,MACA,gBACA,gBACA,kBACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,WACA,YACA,WACA,QACA,UACA,gBACA,YACA,YACA,YACA,WACA,WACA,UACA,SACA,KACA,kBACA,OACA,OACA,WACA,SACA,SACA,QACA,QACA,MACA,SACA,OACA,KACA,SACA,SACA,SACA,UACA,YACA,MACA,WACA,MACA,SACA,UACA,WACA,KACA,QACA,WACA,UACA,YACA,SACA,WACA,WACA,sBACA,WACA,SACA,SACA,gBACA,iBACA,SACA,SACA,eACA,WACA,OACA,eACA,QACA,mBACA,2BACA,OACA,MACA,UACA,SACA,WACA,QACA,QACA,UACA,WACA,QACA,MACA,SACA,CAqMAgmC,QAdA,CACA,OACA,QACA,UACA,UACA,OACA,CASAC,SANA,YAOAC,YAjLA,CACA,MACA,WACA,UACA,mBACA,SACA,UACA,qBACA,yBACA,qBACA,QACA,aACA,SACA,YACA,mBACA,gBACA,UACA,QACA,aACA,WACA,WACA,QACA,WACA,gBACA,gBACA,OACA,UACA,iBACA,QACA,kBACA,wBACA,cACA,MACA,gBACA,cACA,eACA,qBACA,aACA,QACA,cACA,eACA,cACA,SACA,YACA,QACA,cACA,aACA,gBACA,qBACA,qBACA,gBACA,UACA,SACA,WACA,UACA,eACA,EA4HAjG,EAAA,CACAxrC,UAAA,oBACAuD,UAAA,EACAuC,SAAA,CAEA4rC,MA/HA,CACA,QACA,MACA,OACA,QACA,WACA,OACA,OACA,QACA,SACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,QACA,OACA,UACA,UACA,QACA,OACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,OACA,UACA,QACA,MACA,QACA,YACA,cACA,4BACA,aACA,cACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,MACA,SACA,UACA,OACA,UACA,QACA,MACA,OACA,WACA,UACA,OACA,SACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,OACA,MACA,OACA,YACA,gBACA,UACA,UACA,WACA,QACA,UACA,WACA,EA2BApuC,MAAAX,EAAApJ,MAAA,CACA,KACA,eACA,SACA,UACA,aACA,YACAgP,EAAAvF,QAAA,CACAL,EAAAb,SAAA,qBACA,EAEA6vC,EAAA,CACAnG,EACA4F,EACAH,EACAptC,EACA0E,EAAAzE,oBAAA,CACAqtC,EACAD,EACA,CAEAU,EAAA,CAIA/hC,SAAA,CACA,CACAvM,MAAA,IACApI,IAAA,GACA,EACA,CACAoI,MAAA,KACApI,IAAA,IACA,EACA,CACAyK,cAAA,wBACAzK,IAAA,GACA,EACA,CACA4K,SAAAwrC,EACA5tC,SAAAiuC,EAAAp4C,MAAA,EACA,CACA+J,MAAA,KACApI,IAAA,KACA4K,SAAAwrC,EACA5tC,SAAAiuC,EAAAp4C,MAAA,WACAgK,UAAA,CACA,EACA,EACAA,UAAA,CACA,EAEAsuC,EAAA,CACA7xC,UAAA,WACAsD,MAAA,IAAA0tC,EAAA,eAAAK,EACAxpC,YAAA,GACA3M,IAAA,QACA6M,WAAA,GACAjC,SAAAwrC,EACA5sC,QAAA,iBACAhB,SAAA,CACA,CACAJ,MAAAwtC,EACAhrC,SAAAwrC,EACA/tC,UAAA,CACA,EACA,CACAD,MAAA+tC,EACAxpC,YAAA,GACAnE,SAAA,CAAAuB,EAAA,CACA1B,UAAA,CACA,EAGA,CACAD,MAAA,KACAC,UAAA,CACA,EAEA,CACAD,MAAA,IACAyJ,eAAA,GACArJ,SAAA,CACAwtC,EACAC,EACA,EAIA,CACA5tC,UAAA,EACA5I,MAAA,GACA,EACA,CACAqF,UAAA,SACAsD,MAAA,KACApI,IAAA,KACA4K,SAAAwrC,EACA/tC,UAAA,EACAG,SAAA,CACAG,EACA0E,EAAAzE,oBAAA,CACAotC,EACAC,EACAF,EAEA,CACA3tC,MAAA,KACApI,IAAA,KACA4K,SAAAwrC,EACA/tC,UAAA,EACAG,SAAA,CACA,OACAG,EACA0E,EAAAzE,oBAAA,CACAotC,EACAC,EACAF,EACA,EAEA,EAEAA,EACAptC,EACA0E,EAAAzE,oBAAA,CACAstC,EACA,EAGA,OACAvyC,KAAA,MACA4J,QAAA,CACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,CACA3C,SAAAwrC,EACA5sC,QAAA,KACAoG,iBAAA,CAAwB,gCACxBpH,SAAA,GAAAnK,MAAA,CACAq4C,EACAC,EACArG,EACAmG,EACA,CACAP,EACA,CACA9tC,MAAA,4MACApI,IAAA,IACA4K,SAAAwrC,EACA5tC,SAAA,CACA,OACAutC,EACA,EAEA,CACA3tC,MAAAiF,EAAAvF,QAAA,MACA8C,SAAAwrC,CACA,EACA,CACA32C,MAAA,CAEA,wDACA,MACA,MACA,CACAqF,UAAA,CACA,YACA,eACA,CACA,EACA,CACA,CACA,EA0XAuI,GAEAupC,EAA6ClB,EAAA9qC,QAAA,CAoB7C,OAlBAgsC,EAAAr1C,IAAA,KACAq1C,EAAAr1C,IAAA,CAlXA,UACA,OACA,OACA,SAiXA,CACAq1C,EAAAP,OAAA,KACAO,EAAAP,OAAA,CA/BA,kBACA,iBACA,iBACA,iBACA,gBACA,eACA,eACA,eACA,eACA,cACA,cACA,cACA,WACA,WACA,UACA,SACA,QACA,OACA,MAeA,CACAO,EAAAN,QAAA,KACAM,EAAAN,QAAA,CApXA,qBACA,kBACA,iBACA,iBACA,iBACA,gBACA,eACA,eACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,KAgUA,CACAM,EAAAC,MAAA,CA/TA,CACA,QACA,OACA,gCACA,wBACA,wBACA,uBACA,uBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,anB,EAAA/xC,IAAA,WACA+xC,EAAAnoC,OAAA,SACAmoC,EAAAj/B,UAAA,OAEAi/B,CACA,GwC35BAH,GAAQ38B,gBAAA,QvClCR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CACAqvC,EAAA,GAYA3zC,OAAAiC,MAAA,CAAA0xC,EAAA,CACAhyC,UAAA,WACA6P,SAAA,CACA,CAAQvM,MAAAX,EAAApJ,MAAA,sBAGR,wBAjBA,CACA+J,MAAA,OACApI,IAAA,KACAwI,SAAA,CACA,OACA,CACAJ,MAAA,KACAI,SAAA,CAAAsuC,EAAA,EAEA,EAUA,GAGA,IAAAC,EAAA,CACAjyC,UAAA,QACAsD,MAAA,OACApI,IAAA,KACAwI,SAAA,CAAA6E,EAAAlF,gBAAA,GAEA6uC,EAAA,CACA5uC,MAAA,iBACAgD,OAAA,CAAc5C,SAAA,CACd6E,EAAAnD,iBAAA,EACA9B,MAAA,QACApI,IAAA,QACA8E,UAAA,QACA,GACA,CACA,EACAmyC,EAAA,CACAnyC,UAAA,SACAsD,MAAA,IACApI,IAAA,IACAwI,SAAA,CACA6E,EAAAlF,gBAAA,CACA2uC,EACAC,EACA,EAEAA,EAAAvuC,QAAA,CAAA7H,IAAA,CAAAs2C,GAWA,IAAAC,EAAA,CACA9uC,MAAA,UACApI,IAAA,OACAwI,SAAA,CACA,CACAJ,MAAA,gBACAtD,UAAA,QACA,EACAuI,EAAA1D,WAAA,CACAmtC,EACA,EAaAK,EAAA9pC,EAAAlE,OAAA,EACAE,OAAA,4CACAhB,UAAA,EACA,GACA+uC,EAAA,CACAtyC,UAAA,WACAsD,MAAA,4BACAuE,YAAA,GACAnE,SAAA,CAAA6E,EAAAoL,OAAA,CAAApL,EAAAtD,UAAA,EAAgD3B,MAAA,eAAqB,CACrEC,UAAA,CACA,EA2PA,OACA1E,KAAA,OACA4J,QAAA,OACA3C,SAAA,CACAgJ,SAAA,wBACAvD,QA9PA,CACA,KACA,OACA,OACA,OACA,KACA,MACA,QACA,QACA,KACA,KACA,OACA,OACA,OACA,WACA,SACA,CA+OAgmC,QA7OA,CACA,OACA,QACA,CA2OAC,SAAA,CApOA,QACA,KACA,WACA,OACA,OACA,OACA,SACA,UACA,OACA,MACA,WACA,SACA,QACA,OACA,QACA,OACA,QACA,QAIA,QACA,OACA,UACA,SACA,UACA,UACA,OACA,SACA,OACA,MACA,QACA,SACA,UACA,SACA,OACA,YACA,SACA,OACA,UACA,SACA,UA+LA,MACA,QA5LA,WACA,KACA,UACA,MACA,MACA,QACA,QACA,gBACA,WACA,UACA,eACA,YACA,aACA,YACA,WACA,UACA,aACA,OACA,UACA,SACA,SACA,SACA,UACA,KACA,KACA,QACA,YACA,SACA,QACA,UACA,UACA,OACA,OACA,QACA,MACA,SACA,OACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,OACA,UACA,SACA,aACA,SACA,UACA,WACA,QACA,OACA,SACA,QACA,QACA,WACA,UACA,OACA,MACA,WACA,aACA,QACA,OACA,cACA,UACA,SACA,OAIA,QACA,QACA,QACA,QACA,KACA,KACA,KACA,MACA,YACA,KACA,KACA,QACA,SACA,QACA,SACA,KACA,WACA,KACA,QACA,QACA,OACA,QACA,WACA,OACA,QACA,SACA,SACA,MACA,QACA,OACA,SACA,MACA,SACA,MACA,OACA,OACA,OACA,SACA,KACA,SACA,KACA,QACA,MACA,KACA,UACA,YACA,YACA,YACA,YACA,OACA,OACA,QACA,MACA,MACA,OACA,KACA,QACA,WACA,OACA,KACA,OACA,WACA,SACA,OACA,UACA,KACA,OACA,MACA,OACA,SAEA,SACA,SACA,KACA,OACA,UACA,OACA,QACA,QACA,UACA,QACA,WACA,SACA,MACA,WACA,SACA,MACA,QACA,OACA,SACA,OACA,MACA,OACA,UAEA,MACA,QACA,SACA,SACA,QACA,MACA,SACA,MAkBA,EAEA9tC,SAAA,CACA2uC,EACA9pC,EAAAlE,OAAA,GACAiuC,EACAF,EACA7pC,EAAAxE,iBAAA,CACAmuC,EAxPA,CAAsBv3C,MAAA,kBA0PtBw3C,EA/TA,CACAnyC,UAAA,GACAsD,MAAA,KAEA,EACA,CACAtD,UAAA,SACAsD,MAAA,IACApI,IAAA,GACA,EAyTA82C,EACA,CAEA,GuCtVAvB,GAAQ38B,gBAAA,KtCrCR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CAIAkB,EAAA0E,EAAA/E,OAAA,WAAwDE,SAAA,EAAcJ,MAAA,QAAgB,GACtFwtC,EAAA,qBACAC,EAAA,kBAEAC,EAAA,IACAF,EAAA,IACAnuC,EAAAX,QAAA,CAAA+uC,GACA,gBAAApuC,EAAAX,QAAA,CAJA,YAKA,IAGAwqC,EAAA,CACAxsC,UAAA,OACA6P,SAAA,CACA,CAAQvM,MAAA,sBACR,CAAQ3I,MAAA,uBAA2B,EACnC,EAOAu2C,EAAA,CACAlxC,UAAA,SACA6P,SAAA,CACA,CACAvM,MAAA,cACApI,IAAA,IACAwJ,QAAA,MACAhB,SAAA,CAAA6E,EAAAlF,gBAAA,GAEA,CACAC,MAAA,sEACApI,IAAA,IACAwJ,QAAA,GACA,EACA6D,EAAAnD,iBAAA,EACA9B,MAAA,mCACApI,IAAA,qBACA,GACA,EAGAi2C,EAAA,CACAnxC,UAAA,SACA6P,SAAA,CACA,CAAQvM,MAAA,iBACR,CAAQA,MAAA,yFACR,CAAQA,MAAA,uFACR,CACAC,UAAA,CACA,EAEA6tC,EAAA,CACApxC,UAAA,OACAsD,MAAA,eACApI,IAAA,IACA4K,SAAA,CAAgByF,QAChB,wFACA,EACA7H,SAAA,CACA,CACAJ,MAAA,OACAC,UAAA,CACA,EACAgF,EAAAoL,OAAA,CAAAu9B,EAAA,CAA8BlxC,UAAA,WAC9B,CACAA,UAAA,SACAsD,MAAA,OACA,EACAO,EACA0E,EAAAzE,oBAAA,CACA,EAGAmB,EAAA,CACAjF,UAAA,QACAsD,MAAAX,EAAAX,QAAA,CAAA+uC,GAAAxoC,EAAAvF,QAAA,CACAO,UAAA,CACA,EAEA8tC,EAAA1uC,EAAAX,QAAA,CAAA+uC,GAAAxoC,EAAAvF,QAAA,WAsEAspC,EAAA,CACA/gC,QArEA,CACA,MACA,OACA,QACA,OACA,WACA,UACA,KACA,OACA,OACA,SACA,MACA,UACA,OACA,KACA,SACA,WACA,WACA,SACA,SACA,SACA,SACA,UACA,QACA,WACA,QACA,WACA,WACA,UACA,WACA,YACA,iBACA,gBAEA,UACA,UACA,WACA,gBACA,eAEA,UACA,CA6BA9O,KA3BA,CACA,QACA,SACA,SACA,WACA,MACA,QACA,OACA,OACA,OACA,QACA,WACA,aACA,aACA,aACA,cAEA,QACA,SAEA,UACA,OACA,YACA,CAKA80C,QAAA,kBAEAC,SAAA,kzBASA,EAEAG,EAAA,CACAP,EACA5E,EACA3oC,EACA0E,EAAAzE,oBAAA,CACAqtC,EACAD,EACA,CAEAU,EAAA,CAIA/hC,SAAA,CACA,CACAvM,MAAA,IACApI,IAAA,GACA,EACA,CACAoI,MAAA,KACApI,IAAA,IACA,EACA,CACAyK,cAAA,wBACAzK,IAAA,GACA,EACA,CACA4K,SAAAwmC,EACA5oC,SAAAiuC,EAAAp4C,MAAA,EACA,CACA+J,MAAA,KACApI,IAAA,KACA4K,SAAAwmC,EACA5oC,SAAAiuC,EAAAp4C,MAAA,WACAgK,UAAA,CACA,EACA,EACAA,UAAA,CACA,EAEAsuC,EAAA,CACAvuC,MAAA,IAAA0tC,EAAA,eAAAK,EACAxpC,YAAA,GACA3M,IAAA,QACA6M,WAAA,GACAjC,SAAAwmC,EACA5nC,QAAA,iBACAhB,SAAA,CACA,CACAJ,MAAAwtC,EACAhrC,SAAAwmC,EACA/oC,UAAA,CACA,EACA,CACAD,MAAA+tC,EACAxpC,YAAA,GACAnE,SAAA,CAAA6E,EAAAoL,OAAA,CAAA1O,EAAA,CAA+CjF,UAAA,mBAA6B,CAC5EuD,UAAA,CACA,EAGA,CACAA,UAAA,EACA5I,MAAA,GACA,EACA,CACAqF,UAAA,SACAsD,MAAA,KACApI,IAAA,KACA4K,SAAAwmC,EACA/oC,UAAA,EACAG,SAAA,CACAG,EACA0E,EAAAzE,oBAAA,CACAotC,EACAC,EACA3E,EAEA,CACAlpC,MAAA,KACApI,IAAA,KACA4K,SAAAwmC,EACA/oC,UAAA,EACAG,SAAA,CACA,OACAG,EACA0E,EAAAzE,oBAAA,CACAotC,EACAC,EACA3E,EACA,EAEA,EAEAA,EACA3oC,EACA0E,EAAAzE,oBAAA,CACAstC,EACA,EAGA,OACAvyC,KAAA,IACA4J,QAAA,MACA3C,SAAAwmC,EAGAxjC,kBAAA,GACApE,QAAA,KACAhB,SAAA,GAAAnK,MAAA,CACAq4C,EACAC,EACAF,EACA,CACAP,EACA,CACA9tC,MAAAiF,EAAAvF,QAAA,MACA8C,SAAAwmC,CACA,EACA,CACAtsC,UAAA,QACA2F,cAAA,0BACAzK,IAAA,WACAwI,SAAA,CACA,CAAciC,cAAA,sBACd4C,EAAAtD,UAAA,CACA,EAEA,EACA9L,QAAA,CACAo5C,aAAAnB,EACAoB,QAAAtB,EACAprC,SAAAwmC,CACA,CACA,CACA,GsC9QAmE,GAAQ38B,gBAAA,OrCtCR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CAIAkB,EAAA0E,EAAA/E,OAAA,WAAwDE,SAAA,EAAcJ,MAAA,QAAgB,GACtFwtC,EAAA,qBACAC,EAAA,kBAEAC,EAAA,cACAF,EAAA,IACAnuC,EAAAX,QAAA,CAAA+uC,GACA,gBAAApuC,EAAAX,QAAA,CAJA,YAKA,IAEAivC,EAAA,CACAjxC,UAAA,OACAsD,MAAA,oBACA,EAKA4tC,EAAA,CACAlxC,UAAA,SACA6P,SAAA,CACA,CACAvM,MAAA,cACApI,IAAA,IACAwJ,QAAA,MACAhB,SAAA,CAAA6E,EAAAlF,gBAAA,GAEA,CACAC,MAAA,sEACApI,IAAA,IACAwJ,QAAA,GACA,EACA6D,EAAAnD,iBAAA,EACA9B,MAAA,mCACApI,IAAA,qBACA,GACA,EAGAi2C,EAAA,CACAnxC,UAAA,SACA6P,SAAA,CACA,CAAQvM,MAAA,iBACR,CAAQA,MAAA,yFACR,CAAQA,MAAA,uFACR,CACAC,UAAA,CACA,EAEA6tC,EAAA,CACApxC,UAAA,OACAsD,MAAA,eACApI,IAAA,IACA4K,SAAA,CAAgByF,QAChB,wFACA,EACA7H,SAAA,CACA,CACAJ,MAAA,OACAC,UAAA,CACA,EACAgF,EAAAoL,OAAA,CAAAu9B,EAAA,CAA8BlxC,UAAA,WAC9B,CACAA,UAAA,SACAsD,MAAA,OACA,EACAO,EACA0E,EAAAzE,oBAAA,CACA,EAGAmB,EAAA,CACAjF,UAAA,QACAsD,MAAAX,EAAAX,QAAA,CAAA+uC,GAAAxoC,EAAAvF,QAAA,CACAO,UAAA,CACA,EAEA8tC,EAAA1uC,EAAAX,QAAA,CAAA+uC,GAAAxoC,EAAAvF,QAAA,WA6RAsuC,EAAA,CACA70C,KAhMA,CACA,OACA,OACA,WACA,WACA,UACA,SACA,QACA,MACA,OACA,QACA,OACA,UACA,WACA,SACA,QACA,SACA,CAgLA8O,QA5RA,CACA,UACA,UACA,MACA,SACA,MACA,gBACA,gBACA,kBACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,WACA,YACA,WACA,QACA,UACA,gBACA,YACA,YACA,YACA,WACA,WACA,UACA,SACA,KACA,kBACA,OACA,OACA,WACA,SACA,SACA,QACA,QACA,MACA,SACA,OACA,KACA,SACA,SACA,SACA,UACA,YACA,MACA,WACA,MACA,SACA,UACA,WACA,KACA,QACA,WACA,UACA,YACA,SACA,WACA,WACA,sBACA,WACA,SACA,SACA,gBACA,iBACA,SACA,SACA,eACA,WACA,OACA,eACA,QACA,mBACA,2BACA,OACA,MACA,UACA,SACA,WACA,QACA,QACA,UACA,WACA,QACA,MACA,SACA,CAqMAgmC,QAdA,CACA,OACA,QACA,UACA,UACA,OACA,CASAC,SANA,YAOAC,YAjLA,CACA,MACA,WACA,UACA,mBACA,SACA,UACA,qBACA,yBACA,qBACA,QACA,aACA,SACA,YACA,mBACA,gBACA,UACA,QACA,aACA,WACA,WACA,QACA,WACA,gBACA,gBACA,OACA,UACA,iBACA,QACA,kBACA,wBACA,cACA,MACA,gBACA,cACA,eACA,qBACA,aACA,QACA,cACA,eACA,cACA,SACA,YACA,QACA,cACA,aACA,gBACA,qBACA,qBACA,gBACA,UACA,SACA,WACA,UACA,eACA,EA4HAjG,EAAA,CACAxrC,UAAA,oBACAuD,UAAA,EACAuC,SAAA,CAEA4rC,MA/HA,CACA,QACA,MACA,OACA,QACA,WACA,OACA,OACA,QACA,SACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,QACA,OACA,UACA,UACA,QACA,OACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,OACA,UACA,QACA,MACA,QACA,YACA,cACA,4BACA,aACA,cACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,MACA,SACA,UACA,OACA,UACA,QACA,MACA,OACA,WACA,UACA,OACA,SACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,OACA,MACA,OACA,YACA,gBACA,UACA,UACA,WACA,QACA,UACA,WACA,EA2BApuC,MAAAX,EAAApJ,MAAA,CACA,KACA,eACA,SACA,UACA,aACA,YACAgP,EAAAvF,QAAA,CACAL,EAAAb,SAAA,qBACA,EAEA6vC,EAAA,CACAnG,EACA4F,EACAH,EACAptC,EACA0E,EAAAzE,oBAAA,CACAqtC,EACAD,EACA,CAEAU,EAAA,CAIA/hC,SAAA,CACA,CACAvM,MAAA,IACApI,IAAA,GACA,EACA,CACAoI,MAAA,KACApI,IAAA,IACA,EACA,CACAyK,cAAA,wBACAzK,IAAA,GACA,EACA,CACA4K,SAAAwrC,EACA5tC,SAAAiuC,EAAAp4C,MAAA,EACA,CACA+J,MAAA,KACApI,IAAA,KACA4K,SAAAwrC,EACA5tC,SAAAiuC,EAAAp4C,MAAA,WACAgK,UAAA,CACA,EACA,EACAA,UAAA,CACA,EAEAsuC,EAAA,CACA7xC,UAAA,WACAsD,MAAA,IAAA0tC,EAAA,eAAAK,EACAxpC,YAAA,GACA3M,IAAA,QACA6M,WAAA,GACAjC,SAAAwrC,EACA5sC,QAAA,iBACAhB,SAAA,CACA,CACAJ,MAAAwtC,EACAhrC,SAAAwrC,EACA/tC,UAAA,CACA,EACA,CACAD,MAAA+tC,EACAxpC,YAAA,GACAnE,SAAA,CAAAuB,EAAA,CACA1B,UAAA,CACA,EAGA,CACAD,MAAA,KACAC,UAAA,CACA,EAEA,CACAD,MAAA,IACAyJ,eAAA,GACArJ,SAAA,CACAwtC,EACAC,EACA,EAIA,CACA5tC,UAAA,EACA5I,MAAA,GACA,EACA,CACAqF,UAAA,SACAsD,MAAA,KACApI,IAAA,KACA4K,SAAAwrC,EACA/tC,UAAA,EACAG,SAAA,CACAG,EACA0E,EAAAzE,oBAAA,CACAotC,EACAC,EACAF,EAEA,CACA3tC,MAAA,KACApI,IAAA,KACA4K,SAAAwrC,EACA/tC,UAAA,EACAG,SAAA,CACA,OACAG,EACA0E,EAAAzE,oBAAA,CACAotC,EACAC,EACAF,EACA,EAEA,EAEAA,EACAptC,EACA0E,EAAAzE,oBAAA,CACAstC,EACA,EAGA,OACAvyC,KAAA,MACA4J,QAAA,CACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,CACA3C,SAAAwrC,EACA5sC,QAAA,KACAoG,iBAAA,CAAwB,gCACxBpH,SAAA,GAAAnK,MAAA,CACAq4C,EACAC,EACArG,EACAmG,EACA,CACAP,EACA,CACA9tC,MAAA,4MACApI,IAAA,IACA4K,SAAAwrC,EACA5tC,SAAA,CACA,OACAutC,EACA,EAEA,CACA3tC,MAAAiF,EAAAvF,QAAA,MACA8C,SAAAwrC,CACA,EACA,CACA32C,MAAA,CAEA,wDACA,MACA,MACA,CACAqF,UAAA,CACA,YACA,eACA,CACA,EACA,CACA,CACA,GqCvgBAywC,GAAQ38B,gBAAA,UpCrCR,SAAAvL,CAAA,EA8IA,IAAA+jC,EAAA,CACA/gC,QAAAknC,CAhGA,WACA,KACA,OACA,QACA,OACA,QACA,QACA,QACA,WACA,KACA,OACA,QACA,WACA,SACA,UACA,QACA,MACA,UACA,OACA,KACA,WACA,KACA,YACA,WACA,KACA,OACA,YACA,MACA,WACA,MACA,WACA,SACA,UACA,YACA,SACA,WACA,SACA,MACA,SACA,SACA,SACA,SACA,aACA,SACA,SACA,SACA,OACA,QACA,MACA,SACA,YACA,SACA,QACA,UACA,OACA,WACA,QACA,CAuCAl5C,MAAA,CAtCA,CACA,MACA,QACA,MACA,YACA,QACA,QACA,KACA,aACA,SACA,OACA,MACA,SACA,QACA,OACA,OACA,OACA,MACA,SACA,MACA,UACA,KACA,KACA,UACA,UACA,SACA,SACA,MACA,YACA,UACA,MACA,OACA,QACA,OACA,QACA,EAIAi4C,SA/IA,CACA,OACA,OACA,OACA,UACA,WACA,SACA,UACA,OACA,QACA,MACA,OACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,SACA,CA2HAD,QAzGA,CACA,UACA,QACA,OACA,OACA,EAsGAtsC,EAAAsD,EAAAoL,OAAA,CAAApL,EAAAtD,UAAA,EAAqD3B,MAAA,uBACrD6tC,EAAA,CACAnxC,UAAA,SACA6P,SAAA,CACA,CAAQvM,MAAA,iBACR,CAAQA,MAAA,mEACR,CAAQA,MAAA,uFACR,CACAC,UAAA,CACA,EACAmvC,EAAA,CACA1yC,UAAA,SACAsD,MAAA,KACApI,IAAA,IACAwI,SAAA,EAAkBJ,MAAA,MAAc,EAEhCqvC,EAAApqC,EAAAoL,OAAA,CAAA++B,EAAA,CAAgEhuC,QAAA,OAChEutC,EAAA,CACAjyC,UAAA,QACAsD,MAAA,KACApI,IAAA,KACA4K,SAAAwmC,CACA,EACAsG,EAAArqC,EAAAoL,OAAA,CAAAs+B,EAAA,CAA4CvtC,QAAA,OAC5CmuC,EAAA,CACA7yC,UAAA,SACAsD,MAAA,MACApI,IAAA,IACAwJ,QAAA,KACAhB,SAAA,CACA,CAAQJ,MAAA,MAAY,EACpB,CAAQA,MAAA,MAAY,EACpBiF,EAAAlF,gBAAA,CACAuvC,EACA,EAEAE,EAAA,CACA9yC,UAAA,SACAsD,MAAA,OACApI,IAAA,IACAwI,SAAA,CACA,CAAQJ,MAAA,MAAY,EACpB,CAAQA,MAAA,MAAY,EACpB,CAAQA,MAAA,MACR2uC,EACA,EAEA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,UAAA,OACAuD,UAAA,GACA5I,MAAAgI,EAAAV,MAAA,CACA,+BACA,8BACA,uBAEA,EACA,CACAjC,UAAA,UACA6P,SAAA,CACA,CACAvM,MAAAX,EAAAV,MAAA,CACA,UACA,SACA,QACA,QACA,UACA,SACA,eAEA/G,IAAA,GACA,EACA,CAAYP,MAAA,UAAe,EAC3B,EAEA,CACAqF,UAAA,WACAsD,MAAA,MACApI,IAAA,GACA,EACA,CACA8E,UAAA,WACAsD,MAAA,KACApI,IAAA,GACA,EACA,CACA8E,UAAA,WACAsD,MAAA,KACApI,IAAA,GACA,EACA,CAEA,GkCVAu1C,GAAQ38B,gBAAA,MjCxCR,SAAAvL,CAAA,EAyEA,IAAA+jC,EAAA,CACA/gC,QA5BA,CACA,QACA,OACA,OACA,QACA,WACA,UACA,QACA,OACA,cACA,MACA,OACA,KACA,OACA,KACA,SACA,YACA,MACA,UACA,QACA,SACA,SACA,SACA,SACA,OACA,MACA,CAGA9O,KAnDA,CACA,OACA,OACA,YACA,aACA,QACA,UACA,UACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,MACA,OACA,UACA,OACA,CA+BA80C,QA3EA,CACA,OACA,QACA,OACA,MACA,CAuEAC,SAtEA,CACA,SACA,MACA,QACA,UACA,OACA,OACA,MACA,OACA,MACA,QACA,QACA,UACA,OACA,UACA,SACA,EAwDA,OACA3yC,KAAA,KACA4J,QAAA,WACA3C,SAAAwmC,EACA5nC,QAAA,KACAhB,SAAA,CACA6E,EAAA1E,mBAAA,CACA0E,EAAAzE,oBAAA,CACA,CACA9D,UAAA,SACA6P,SAAA,CACAtH,EAAA5D,iBAAA,CACA4D,EAAA9D,gBAAA,CACA,CACAnB,MAAA,IACApI,IAAA,GACA,EACA,EAEA,CACA8E,UAAA,SACA6P,SAAA,CACA,CACAvM,MAAAiF,EAAApF,WAAA,OACAI,UAAA,CACA,EACAgF,EAAAzD,aAAA,CACA,EAEA,CAAQxB,MAAA,IACR,EACA,CACAtD,UAAA,WACA2F,cAAA,OACAzK,IAAA,cACA6M,WAAA,GACArE,SAAA,CACA6E,EAAAtD,UAAA,CACA,CACAjF,UAAA,SACAsD,MAAA,KACApI,IAAA,KACAuL,WAAA,GACAX,SAAAwmC,EACA5nC,QAAA,MACA,EACA,EAEA,CAEA,GiCxFA+rC,GAAQ38B,gBAAA,WhC1CR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CAEA,OACA9D,KAAA,UACA4J,QAAA,QACAgC,iBAAA,GACA3B,kBAAA,GACAhD,SAAA,CACAyF,QAAA,CACA,QACA,WACA,eACA,OACA,QACA,SACA,YACA,YACA,QACA,SACA,WACA,OACA,KACA,CACAgmC,QAAA,CACA,OACA,QACA,OACA,EAEA7tC,SAAA,CACA6E,EAAAxE,iBAAA,CACAwE,EAAA5D,iBAAA,CACA4D,EAAA1D,WAAA,CACA,CACAlG,MAAA,cACAhE,MAAA,SACA4I,UAAA,CACA,EACA,CACA5E,MAAA,cACA2E,MAAA,4BACAC,UAAA,CACA,EACA,CACA5E,MAAA,WACA2E,MAAA,KACApI,IAAA,KACA6M,WAAA,GACAxE,UAAA,CACA,EACA,CACA5E,MAAA,OACAhE,MAAA,OACAoN,WAAA,EACA,EACA,CACApJ,MAAA,SACA2E,MAAAX,EAAApJ,MAAA,CAxDA,yBAwDAoJ,EAAAb,SAAA,UACAyB,UAAA,CACA,EACA,CACAmB,QAAA,CACA,QACA,QACA,CAEA,GgCxBA+rC,GAAQ38B,gBAAA,O/B3CR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CACAwuC,EAAA,CACAnxC,UAAA,SACAuD,UAAA,EACAsM,SAAA,CACA,CAAQvM,MAAA,wBACR,CAAQA,MAAAiF,EAAArF,SAAA,EACR,EAEAqwC,EAAAhrC,EAAA/E,OAAA,EACA+vC,CAAAA,EAAA1jC,QAAA,EACA,CACAvM,MAAA,IACApI,IAAA,GACA,EACA,CACAoI,MAAA,IACApI,IAAA,GACA,EACA,CACA,IAAAs4C,EAAA,CACAxzC,UAAA,WACA6P,SAAA,CACA,CAAQvM,MAAA,qBACR,CAAQA,MAAA,aAAmB,EAC3B,EAEAipC,EAAA,CACAvsC,UAAA,UACAsD,MAAA,8BACA,EACA4tC,EAAA,CACAlxC,UAAA,SACA0D,SAAA,CAAA6E,EAAAlF,gBAAA,EACAwM,SAAA,CACA,CACAvM,MAAA,MACApI,IAAA,MACAqI,UAAA,EACA,EACA,CACAD,MAAA,MACApI,IAAA,MACAqI,UAAA,EACA,EACA,CACAD,MAAA,IACApI,IAAA,GACA,EACA,CACAoI,MAAA,IACApI,IAAA,GACA,EACA,EAmBAu4C,EAAA9wC,EAAAV,MAAA,CAHA,iBACA,gBACA,WASA,OACApD,KAAA,iBACA4J,QAAA,SACAgC,iBAAA,GACA/F,QAAA,KACAhB,SAAA,CACA6vC,EACA,CACAvzC,UAAA,UACAsD,MAAA,MACApI,IAAA,KACA,EACA,CACAoI,MAlBAX,EAAApJ,MAAA,CACAk6C,EAAA,eAAAA,EAAA,KACA9wC,EAAAb,SAAA,mBAiBA9B,UAAA,OACAsG,OAAA,CACApL,IAAA,IACAwI,SAAA,CACA6vC,EA3CA,CACAjwC,MAAA,KACApI,IAAA,KACAwI,SAAA,CACA6vC,EACAhH,EACAiH,EACAtC,EACAC,EACA,OACA,CACA5tC,UAAA,CACA,EAiCAgpC,EACAiH,EACAtC,EACAC,EACA,CAEA,EACA,CAEA,G+BlEAV,GAAQ38B,gBAAA,Q9BUR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CACA+wC,EAAA,uCACAC,EAAAD,EACAE,SAbAA,EAAA93C,CAAA,CAAA+3C,CAAA,CAAAv5B,CAAA,SACA,KAAAA,EAAA,GAEAxe,EAAAhD,OAAA,CAAA+6C,EAAAvyB,GACAsyB,EAAA93C,EAAA+3C,EAAAv5B,EAAA,GAEA,EAOA,OAAAo5B,EAAA,kBAAAA,EAAA,qBAoEApH,EAAA,CACA/gC,QApEA,CACA,eACA,WACA,UACA,MACA,SACA,KACA,SACA,MACA,QACA,WACA,UACA,YACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,YACA,QACA,aACA,WACA,OACA,SACA,UACA,UACA,SACA,MACA,SACA,WACA,SACA,YACA,SACA,UACA,SACA,WACA,UACA,KACA,SACA,QACA,UACA,CA0BAgmC,QAnBA,CACA,QACA,OACA,OACA,CAgBA90C,KAdA,CACA,OACA,UACA,OACA,QACA,MACA,OACA,QACA,SACA,CAMA+0C,SA1BA,CACA,QACA,OACA,EA0BAsC,EAAA,CACA9zC,UAAA,OACAsD,MAAA,IAAAowC,EACAhwC,SAAA,CACA,CACAJ,MAAA,KACApI,IAAA,KACAwI,SAAA,UAEA,EAEAqwC,EAAA,CACA/zC,UAAA,SACAsD,MAAA,KACApI,IAAA,KACA4K,SAAAwmC,EACA/oC,UAAA,EACAG,SAAA,CAAA6E,EAAAzE,oBAAA,EACA2C,WAAA,EACA,EAEA,OACA5H,KAAA,OACA4J,QAAA,QACA3C,SAAAwmC,EACA5nC,QAAA,QACAhB,SAAA,CACA6E,EAAA/E,OAAA,CACA,UACA,OACA,CACAD,UAAA,EACAG,SAAA,CACA,CAEAJ,MAAA,OACAC,UAAA,CACA,EACA,CACAvD,UAAA,SACAsD,MAAA,YACA,EACA,GAIA,CACAA,MAAA,wBACAwC,SAAA,SACAvC,UAAA,CACA,EACAgF,EAAA1E,mBAAA,CACA0E,EAAAzE,oBAAA,CACA,CACAR,MAAA,MACApI,IAAA,MACA8E,UAAA,SACA0D,SAAA,CAAA6E,EAAAlF,gBAAA,GAEAkF,EAAA9D,gBAAA,CACA8D,EAAA5D,iBAAA,CACA,CACAhK,MAAA,CACA,oDACA,MACA+4C,EACA,CACA1zC,UAAA,CACA,YACA,eACA,CACA,EACA,CAEArF,MAAA,aACAgE,MAAA,SACA,EACA,CACA2E,MAAA,CACAX,EAAApJ,MAAA,YAAAm6C,GACA,MACAA,EACA,MACA,SACA,CACA1zC,UAAA,CACA,SACA,aACA,YACA,CACA,EACA,CACAsD,MAAA,CACA,SACA,MACAowC,EACA,CACA1zC,UAAA,CACA,YACA,eACA,EACA0D,SAAA,CACAqwC,EACAxrC,EAAA1E,mBAAA,CACA0E,EAAAzE,oBAAA,CACA,EAEA,CAGA6B,cAAA,wBACApC,UAAA,CACA,EACA,CACAD,MAAA,CACA,MAAAqwC,EAAA,QACApr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,EAAA/lC,QAAA,IAAAnM,QAAA,EAFAkyC,EAEA,CAEA,CACA/2C,KAAA,SACA4J,QAAA,CACA,KACA,MACA,CACA3C,SAAAwmC,EACA5oC,SAAA,CACA6E,EAAA/E,OAAA,CACA,UACA,OACA,CACAD,UAAA,EACAG,SAAA,CACA,CACA1D,UAAA,SACAsD,MAAA,YACA,EACA,GAGAiF,EAAA1E,mBAAA,CACA8xC,EA5HA,CACA31C,UAAA,UACAsD,MAAA,mCACAgD,OAAA,CAAc5C,SAAA,CACd,CACA1D,UAAA,SACAsD,MAAA,MACA,EACA,CACA,EAqHAkyC,EACAE,EACA5B,EACA,CACA9zC,UAAA,WACA2F,cAAA,MACAzK,IAAA,QACA2M,YAAA,GACAE,WAAA,GACAjC,SAAAwmC,EACA/oC,UAAA,EACAG,SAAA,CACA,CACAJ,MAAAiF,EAAAtF,mBAAA,WACA4E,YAAA,GACAtE,UAAA,EACAG,SAAA,CAAA6E,EAAArD,qBAAA,GAEA,CACAlF,UAAA,OACAsD,MAAA,IACApI,IAAA,IACA4K,SAAA,UACAvC,UAAA,CACA,EACA,CACAvD,UAAA,SACAsD,MAAA,KACApI,IAAA,KACAuL,WAAA,GACAX,SAAAwmC,EACA/oC,UAAA,EACAG,SAAA,CACA,CACAJ,MAAA,IACApI,IAAA,SACA6R,eAAA,GACArJ,SAAA,CACAkyC,EACArtC,EAAA1E,mBAAA,CACA8xC,EACA,CACApyC,UAAA,CACA,EACAgF,EAAA1E,mBAAA,CACA8xC,EACAD,EACA5B,EACAd,EACAzqC,EAAAzD,aAAA,CACA,EAEA6wC,EACA,EAEA,CACAryC,MAAA,CACA,wBACA,MACAiF,EAAAtF,mBAAA,CACA,CACAwE,WAAA,CACA,eACA,EACA3B,SAAA,wBACA5K,IAAA,WACA6M,WAAA,GACArD,QAAA,qBACAhB,SAAA,CACA,CAAYiC,cAAA,iDACZ4C,EAAArD,qBAAA,CACA,CACAlF,UAAA,OACAsD,MAAA,IACApI,IAAA,IACAyI,aAAA,GACAoE,WAAA,GACAxE,UAAA,CACA,EACA,CACAvD,UAAA,OACAsD,MAAA,UACApI,I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,MAAA,SACR,CACAA,MAAA,kBAGAI,SAAA,CACA,CACAJ,MAAA,cACApI,IAAA,QACA,EACA,CACAqI,UAAA,CACA,EACA,EAhCA,CACAD,MAAA,cACApI,IAAA,GACA,EAuNA67C,EAlLA,CACAzzC,MAAA,eACAuE,YAAA,GACAnE,SAAA,CACA,CACA1D,UAAA,SACAsD,MAAA,KACApI,IAAA,KACAyI,aAAA,GACAoE,WAAA,EACA,EACA,CACA/H,UAAA,OACAsD,MAAA,OACApI,IAAA,IACAyI,aAAA,EACA,EACA,EAmKA,CAEA,GuBlLA8sC,GAAQ38B,gBAAA,ctBpDR,SAAAvL,CAAA,EAKA,IAAA8uC,EAAA,yBAkKAC,EAAA,CACAxoC,SAAAuoC,EACA9rC,QAAA,CACA,aACA,SACA,YACA,kBACA,EAEA,OACA1M,KAAA,cACA4J,QAAA,CACA,KACA,OACA,QACA,UACA,gBACA,CACA3C,SA7BA,CACA,qBACA,OACA,QACA,CACAgJ,SAAAuoC,EACA9rC,QA3IA,CACA,QACA,SACA,SACA,UACA,QACA,SACA,MACA,QACA,WACA,SACA,UACA,KACA,KACA,SACA,OACA,OACA,OACA,QACA,SACA,MACA,OACA,UACA,WACA,WACA,WACA,SACA,WACA,SACA,WACA,SACA,YACA,OACA,gBACA,KACA,SACA,YACA,WACA,WACA,SACA,OACA,OACA,KACA,MACA,QACA,SACA,QACA,SACA,WACA,SACA,UACA,kBACA,WACA,aACA,UACA,OACA,YACA,OACA,SACA,SACA,WACA,mBACA,cACA,WACA,YACA,YACA,YACA,UACA,WACA,UACA,QACA,uBACA,WACA,oBACA,oBACA,kBACA,cACA,kBACA,WACA,WACA,YACA,oBACA,eACA,sBACA,gBACA,SACA,SACA,SACA,oBACA,UACA,WACA,mBACA,kBACA,QACA,eACA,4BACA,iBACA,oBACA,2BACA,YACA,eACA,gBACA,UACA,aACA,uBACA,0BACA,wBACA,uBACA,gBACA,mBACA,YACA,aACA,gBACA,iBACA,gBACA,CAyBAgmC,QAxBA,CACA,QACA,OACA,QACA,OACA,MACA,MACA,KACA,OACA,CAgBAC,SAfA,CACA,kBACA,mBACA,gBACA,iBACA,gBACA,CAUA/0C,KA/JA,CACA,MACA,QACA,OACA,WACA,SACA,QACA,OACA,SACA,UACA,UACA,OACA,OACA,OACA,OACA,QACA,EAoKAiI,QAAA,KACAhB,SAAA,CA1LA,CACA1D,UAAA,WACAsD,MAAA,sEACA,EAyLAiF,EAAA1E,mBAAA,CACA0E,EAAAzE,oBAAA,CACAyE,EAAAzD,aAAA,CACAyD,EAAA5D,iBAAA,CACA4D,EAAA9D,gBAAA,CACA,CACAzE,UAAA,SACA6P,SAAA,CACA,CACAvM,MAAA,KACApI,IAAA,IACAwJ,QAAA,MACAhB,SAAA,CAAA6E,EAAAlF,gBAAA,GAEA,EAEA,CACArD,UAAA,OACAsD,MAAA,eACApI,IAAA,IACA4K,SAAA,CAAoByF,QACpB,gFACA,EACA7H,SAAA,CACA,CACAJ,MAAA,OACAC,UAAA,CACA,EACAgF,EAAAoL,OAAA,CAAApL,EAAA5D,iBAAA,EAAiD3E,UAAA,WACjD,CACAA,UAAA,SACAsD,MAAA,QACApI,IAAA,IACAwJ,QAAA,KACA,EACA6D,EAAA1E,mBAAA,CACA0E,EAAAzE,oBAAA,CACA,EAEA,CACA9D,UAAA,QACAsD,MAAA,IAAAg0C,EAAA/rC,OAAA,CAAAhM,IAAA,aACArE,IAAA,SACA6M,WAAA,GACAjC,SAAAwxC,EACA5zC,SAAA,CAAA6E,EAAArD,qBAAA,GAEA,CACA5B,MAAA,MAAAiF,EAAAtF,mBAAA,CACAM,UAAA,CACA,EACA,CAEA,GsB7LAktC,GAAQ38B,gBAAA,QrBrDR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CA2OA40C,EAAA,uBACAC,EAAA,CACA1oC,SAAA,SACAvD,QAAA+gC,qiDACA,EACA2F,EAAA,CACAjyC,UAAA,QACAsD,MAAA,UACApI,IAAA,MACA4K,SAAA0xC,CACA,EACAC,EAAA,CACAn0C,MAAA,OACApI,IAAA,IAEA,EACA82C,EAAA,CAAgBniC,SAAA,CAChB,CAAMvM,MAAA,QACN,CAAMA,MAAAX,EAAApJ,MAAA,CACN,iDAGA,wBACA,EACA,CACA+J,MAAA,gBACAC,UAAA,CACA,EACA,EACAm0C,EAAA,CACAnvC,EAAAlF,gBAAA,CACA4uC,EACAD,EACA,CACA2F,EAAA,CACA,IACA,KACA,KACA,KACA,IACA,IACA,IACA,CAMAC,EAAA,CAAA94C,EAAA2wB,EAAAooB,EAAA,SACA,IAAAC,EAAA,QAAAD,EACAA,EACAl1C,EAAApJ,MAAA,CAAAs+C,EAAApoB,GACA,OAAA9sB,EAAApJ,MAAA,CACAoJ,EAAApJ,MAAA,OAAAuF,EAAA,KACA2wB,EACA,oBACAqoB,EACA,oBACAD,EACAN,EAEA,EAMAQ,EAAA,CAAAj5C,EAAA2wB,EAAAooB,IACAl1C,EAAApJ,MAAA,CACAoJ,EAAApJ,MAAA,OAAAuF,EAAA,KACA2wB,EACA,oBACAooB,EACAN,GAGAS,EAAA,CACAhG,EACAzpC,EAAAxE,iBAAA,CACAwE,EAAA/E,OAAA,CACA,OACA,OACA,CAAQuJ,eAAA,KAER0qC,EACA,CACAz3C,UAAA,SACA0D,SAAAg0C,EACA7nC,SAAA,CACA,CACAvM,MAAA,kBACApI,IAAA,MACAqI,UAAA,CACA,EACA,CACAD,MAAA,kBACApI,IAAA,MACAqI,UAAA,CACA,EACA,CACAD,MAAA,kBACApI,IAAA,MACAqI,UAAA,CACA,EACA,CACAD,MAAA,kBACApI,IAAA,MACAqI,UAAA,CACA,EACA,CACAD,MAAA,gBACApI,IAAA,IACAqI,UAAA,CACA,EACA,CACAD,MAAA,UACApI,IAAA,IACAqI,UAAA,CACA,EACA,CACAD,MAAA,IACApI,IAAA,IACAwI,SAAA,CAAA6E,EAAAlF,gBAAA,GAEA,CACAC,MAAA,IACApI,IAAA,GACA,EACA,CACAoI,MAAA,IACApI,IAAA,IACAwI,SAAA,CAAA6E,EAAAlF,gBAAA,GAEA,CACAC,MAAA,UACAC,UAAA,CACA,EACA,CACAD,MAAA,eACAC,UAAA,CACA,EACA,EAEA,CACAvD,UAAA,SACAsD,MAAA,4EACAC,UAAA,CACA,EACA,CACAD,MAAA,WAAAiF,EAAAnE,cAAA,iDACA0B,SAAA,kCACAvC,UAAA,EACAG,SAAA,CACA6E,EAAAxE,iBAAA,CACA,CACA/D,UAAA,SACA6P,SAAA,CAEA,CAAcvM,MAAAs0C,EAAA,SAAAj1C,EAAAV,MAAA,IAAA01C,EAAA,CAAkEx1C,QAAA,KAAe,EAE/F,CAAcmB,MAAAs0C,EAAA,uBACd,CAAct0C,MAAAs0C,EAAA,uBACd,CAAct0C,MAAAs0C,EAAA,eAAsC,MAAO,EAC3D,CACAr0C,UAAA,CACA,EACA,CACAvD,UAAA,SACA6P,SAAA,CACA,CAGAvM,MAAA,aACAC,UAAA,CACA,EAEA,CAAcD,MAAAy0C,EAAA,wBAEd,CAAcz0C,MAAAy0C,EAAA,OAAAp1C,EAAAV,MAAA,IAAA01C,EAAA,CAAyDx1C,QAAA,KAAe,OAEtF,CAAcmB,MAAAy0C,EAAA,mBACd,CAAcz0C,MAAAy0C,EAAA,mBACd,CAAcz0C,MAAAy0C,EAAA,YAA4B,KAAM,EAChD,EAEA,EAEA,CACA/3C,UAAA,WACA2F,cAAA,MACAzK,IAAA,uBACA6M,WAAA,GACAxE,UAAA,EACAG,SAAA,CAAA6E,EAAAtD,UAAA,GAEA,CACA3B,MAAA,UACAC,UAAA,CACA,EACA,CACAD,MAAA,aACApI,IAAA,YACA+P,YAAA,cACAvH,SAAA,CACA,CACAJ,MAAA,QACApI,IAAA,IACA8E,UAAA,SACA,EACA,EAEA,CAIA,OAHAiyC,EAAAvuC,QAAA,CAAAs0C,EACAP,EAAA/zC,QAAA,CAAAs0C,EAEA,CACAn5C,KAAA,OACA4J,QAAA,CACA,KACA,KACA,CACA3C,SAAA0xC,EACA9zC,SAAAs0C,CACA,CACA,GqBtZAvH,GAAQ38B,gBAAA,OpBlDR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CAGAs1C,EAAA,yBACAj1C,EAAAL,EAAApJ,MAAA,CACA,2CACA0+C,GAEAC,EAAAv1C,EAAApJ,MAAA,CACA,yEACA0+C,GACAxC,EAAA,CACA92C,MAAA,WACAhE,MAAA,OAAAqI,CACA,EAWAivC,EAAA,CACAtzC,MAAA,QACAkR,SAAA,CACA,CAAQvM,MAAA,SACR,CACAA,MAAA,OACApI,IAAA,IACA,EACA,EAEAi9C,EAAA5vC,EAAAoL,OAAA,CAAApL,EAAA9D,gBAAA,EAA8DC,QAAA,OAC9D0zC,EAAA7vC,EAAAoL,OAAA,CAAApL,EAAA5D,iBAAA,EACAD,QAAA,KACAhB,SAAA6E,EAAA5D,iBAAA,CAAAjB,QAAA,CAAAnK,MAAA,CAAA04C,EACA,GAEAoG,EAAA,CACA/0C,MAAA,+BACApI,IAAA,gBACAwI,SAAA6E,EAAA5D,iBAAA,CAAAjB,QAAA,CAAAnK,MAAA,CAAA04C,GACA,YAAAl2C,EAAAyI,KAA+BA,EAAA1G,IAAA,CAAAuH,WAAA,CAAAtJ,CAAA,KAAAA,CAAA,KAC/B,UAAAA,EAAAyI,KAA6BA,EAAA1G,IAAA,CAAAuH,WAAA,GAAAtJ,CAAA,KAAAyI,EAAAxG,WAAA,GAC7B,EAEAs6C,EAAA/vC,EAAAnD,iBAAA,EACA9B,MAAA,qBACApI,IAAA,eACA,GAEAq9C,EAAA,SACAvF,EAAA,CACAr0C,MAAA,SACAkR,SAAA,CACAuoC,EACAD,EACAE,EACAC,EACA,EAEAjE,EAAA,CACA11C,MAAA,SACAkR,SAAA,CACA,CAAQvM,MAAA,iCACR,CAAQA,MAAA,mCACR,CAAQA,MAAA,+CAER,CAAQA,MAAA,+EACR,CACAC,UAAA,CACA,EACAgpC,EAAA,CACA,QACA,OACA,OACA,CACAiM,EAAA,CAGA,YACA,UACA,WACA,eACA,2BACA,WACA,aACA,gBACA,YAGA,MACA,OACA,OACA,UACA,eACA,QACA,UACA,eAMA,QACA,WACA,MACA,KACA,SACA,OACA,UACA,QACA,WACA,OACA,QACA,QACA,QACA,QACA,WACA,UACA,UACA,KACA,SACA,OACA,SACA,QACA,aACA,SACA,aACA,QACA,YACA,WACA,OACA,OACA,UACA,QACA,UACA,QACA,MACA,UACA,OACA,SACA,OACA,KACA,aACA,aACA,YACA,MACA,UACA,YACA,QACA,WACA,OACA,UACA,QACA,MACA,QACA,SACA,KACA,UACA,YACA,SACA,WACA,OACA,SACA,SACA,SACA,QACA,QACA,MACA,QACA,MACA,MACA,OACA,QACA,MACA,QACA,CAEA5L,EAAA,CAGA,UACA,iBACA,qBACA,kBACA,gBACA,cACA,iBACA,2BACA,yBACA,kBACA,yBACA,eACA,YACA,oBACA,sBACA,kBACA,gBACA,iBACA,YACA,qBACA,iBACA,eACA,mBACA,2BACA,mBACA,kBACA,gBACA,iBACA,mBACA,mBACA,uBACA,sBACA,gBACA,oBACA,iBACA,aACA,iBACA,yBACA,2BACA,kCACA,6BACA,0BACA,oBACA,4BACA,yBACA,wBACA,gBACA,mBACA,mBACA,sBACA,cACA,gBACA,gBACA,UACA,aACA,aACA,mBACA,cACA,mBACA,WACA,WACA,aACA,oBACA,YACA,qBACA,2BACA,sBAGA,cACA,aACA,UACA,QACA,YACA,WACA,oBACA,eACA,aACA,YACA,cACA,WACA,gBACA,UAGA,YACA,yBACA,SACA,kBACA,OACA,SACA,WACA,CAsBAN,EAAA,CACA/gC,QAAAitC,EACAjH,QAAAkH,CAhBA,IAEA,IAAAxgD,EAAA,GASA,OARAygD,EAAAl6C,OAAA,CAAAiS,IACAxY,EAAA4D,IAAA,CAAA4U,GACAA,EAAA/F,WAAA,KAAA+F,EACAxY,EAAA4D,IAAA,CAAA4U,EAAAxX,WAAA,IAEAhB,EAAA4D,IAAA,CAAA4U,EAAA/F,WAAA,GAEA,GACAzS,CACA,GAIAs0C,GACAiF,SAAA5E,CACA,EAIA+L,EAAA,GACAD,EAAAt5C,GAAA,CAAAqR,GACAA,EAAA3X,OAAA,eAIA8/C,EAAA,CAA6B/oC,SAAA,CAC7B,CACAlV,MAAA,CACA,MACAgI,EAAApJ,MAAA,CAAAg/C,EAAA,KAEA51C,EAAApJ,MAAA,OAAAo/C,EAAA/L,GAAArtC,IAAA,iBACA24C,EACA,CACAv5C,MAAA,CACA,YACA,eACA,CACA,EACA,EAEAk6C,EAAAl2C,EAAApJ,MAAA,CAAAyJ,EAAA,cAEA81C,EAAA,CAAgDjpC,SAAA,CAChD,CACAlV,MAAA,CACAgI,EAAApJ,MAAA,CACA,KACAoJ,EAAAb,SAAA,iBAEA+2C,EACA,CACAl6C,MAAA,CAAe,sBACf,EACA,CACAhE,MAAA,CACA,KACA,QACA,CACAgE,MAAA,CAAe,sBACf,EACA,CACAhE,MAAA,CACAu9C,EACAv1C,EAAApJ,MAAA,CACA,KACAoJ,EAAAb,SAAA,iBAEA+2C,EACA,CACAl6C,MAAA,CACA,gBACA,qBACA,CACA,EACA,CACAhE,MAAA,CACAu9C,EACAv1C,EAAApJ,MAAA,CACA,KACAoJ,EAAAb,SAAA,iBAEA,CACAnD,MAAA,CAAe,gBACf,EACA,CACAhE,MAAA,CACAu9C,EACA,KACA,QACA,CACAv5C,MAAA,CACA,gBACA,qBACA,CACA,EACA,EAEAo6C,EAAA,CACAp6C,MAAA,OACAhE,MAAAgI,EAAApJ,MAAA,CAAAyJ,EAAAL,EAAAb,SAAA,MAAAa,EAAAb,SAAA,WACA,EACAk3C,EAAA,CACAz1C,UAAA,EACAD,MAAA,KACApI,IAAA,KACA4K,SAAAwmC,EACA5oC,SAAA,CACAq1C,EACAtD,EACAqD,EACAvwC,EAAAzE,oBAAA,CACAkvC,EACAqB,EACAuE,EACA,EAEAK,EAAA,CACA11C,UAAA,EACA5I,MAAA,CACA,KAEAgI,EAAApJ,MAAA,yBAAAo/C,EAAAH,GAAAj5C,IAAA,aAAAo5C,EAAA/L,GAAArtC,IAAA,iBACAyD,EACAL,EAAApJ,MAAA,CAAAg/C,EAAA,KACA51C,EAAAb,SAAA,WACA,CACAnD,MAAA,CAAa,2BACb+E,SAAA,CAAAs1C,EAAA,EAEAA,EAAAt1C,QAAA,CAAA7H,IAAA,CAAAo9C,GAEA,IAAAC,EAAA,CACAH,EACAD,EACAvwC,EAAAzE,oBAAA,CACAkvC,EACAqB,EACAuE,EACA,CAsCA,OACAnuC,iBAAA,GACA3E,SAAAwmC,EACA5oC,SAAA,CAvCA,CACAJ,MAAAX,EAAApJ,MAAA,UAAA2+C,GACAzwC,WAAA,OACAvM,IAAA,IACAsG,SAAA,OACAsE,SAAA,CACAyrC,QAAAhF,EACAhhC,QAAA,CACA,MACA,QACA,EAEA7H,SAAA,CACA,CACAJ,MAAA,KACApI,IAAA,IACA4K,SAAA,CACAyrC,QAAAhF,EACAhhC,QAAA,CACA,MACA,QACA,EAEA7H,SAAA,CACA,UACAw1C,EACA,KAEAA,EACA,CACAv6C,MAAA,OACAhE,MAAAu9C,CACA,EACA,EAQA3vC,EAAAxE,iBAAA,CACAwE,EAAA/E,OAAA,WACA+E,EAAA/E,OAAA,CACA,OACA,OACA,CAAUE,SAAA,CACV,CACA/E,MAAA,SACAhE,MAAA,YACA,EACA,GAEA,CACAA,MAAA,uBACAmL,SAAA,kBACAQ,OAAA,CACA3H,MAAA,UACAzD,IAAAqN,EAAApE,gBAAA,CACAT,SAAA,CACA,CACA/I,MAAA,MACAgE,MAAA,OACA8H,WAAA,EACA,EACA,CAEA,EAjeA,CACA9H,MAAA,OACAkR,SAAA,CACA,CAAQvM,MAAA,SAAAC,UAAA,IACR,CAAQD,MAAA,QAER,CAAQA,MAAA,MAAAC,UAAA,IACR,CAAQD,MAAA,OACR,EA2dA,CACA3E,MAAA,oBACAhE,MAAA,UACA,EACA86C,EACAwD,EACAH,EACA,CACAn+C,MAAA,CACA,QACA,KACAqI,EACA,CACArE,MAAA,CACA,YACA,qBACA,CACA,EACAi6C,EACA,CACAj6C,MAAA,WACA4E,UAAA,EACAoC,cAAA,cACAzK,IAAA,OACA6M,WAAA,GACArD,QAAA,UACAhB,SAAA,CACA,CAAYiC,cAAA,OACZ4C,EAAArD,qBAAA,CACA,CACA5B,MAAA,KACAmD,WAAA,EACA,EACA,CACA9H,MAAA,SACA2E,MAAA,MACApI,IAAA,MACAyI,aAAA,GACAoE,WAAA,GACAjC,SAAAwmC,EACA5oC,SAAA,CACA,OACA+xC,EACAqD,EACAvwC,EAAAzE,oBAAA,CACAkvC,EACAqB,EACA,EAEA,EAEA,CACA11C,MAAA,QACAkR,SAAA,CACA,CACAlK,cAAA,OACAjB,QAAA,OACA,EACA,CACAiB,cAAA,wBACAjB,QAAA,QACA,EACA,CACAnB,UAAA,EACArI,IAAA,KACA6M,WAAA,GACArE,SAAA,CACA,CAAYiC,cAAA,sBACZ4C,EAAArD,qBAAA,CACA,EAKA,CACAS,cAAA,YACApC,UAAA,EACArI,IAAA,IACAwJ,QAAA,OACAhB,SAAA,CAAA6E,EAAAoL,OAAA,CAAApL,EAAArD,qBAAA,EAA+DvG,MAAA,gBAAsB,EAErF,CACAgH,cAAA,MACApC,UAAA,EACArI,IAAA,IACAwI,SAAA,CAEA,CACA/I,MAAA,0BACAgE,MAAA,SACA,EAEA4J,EAAArD,qBAAA,CACA,EAEA8tC,EACAqB,EACA,CAEA,GoBniBA5D,GAAQ38B,gBAAA,gBnBvDR,SAAAvL,CAAA,EACA,OACA1J,KAAA,eACAoM,YAAA,MACAvH,SAAA,CACA,CACAJ,MAAA,cACApI,IAAA,MACA+P,YAAA,MACAvH,SAAA,CAGA,CACAJ,MAAA,OACApI,IAAA,OACA0M,KAAA,EACA,EACA,CACAtE,MAAA,KACApI,IAAA,IACA0M,KAAA,EACA,EACA,CACAtE,MAAA,KACApI,IAAA,IACA0M,KAAA,EACA,EACAW,EAAAoL,OAAA,CAAApL,EAAA9D,gBAAA,EACAC,QAAA,KACA1E,UAAA,KACA0D,SAAA,KACAkE,KAAA,EACA,GACAW,EAAAoL,OAAA,CAAApL,EAAA5D,iBAAA,EACAD,QAAA,KACA1E,UAAA,KACA0D,SAAA,KACAkE,KAAA,EACA,GACA,EAEA,CAEA,GmBaA6oC,GAAQ38B,gBAAA,alBzDR,SAAAvL,CAAA,EACA,OACA1J,KAAA,aACA4J,QAAA,CACA,OACA,MACA,CACAK,kBAAA,EACA,CACA,GkBiDA2nC,GAAQ38B,gBAAA,UjB1DR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CACAK,EAAA,qCACAm2C,EAAA,CACA,MACA,KACA,SACA,QACA,QACA,QACA,OACA,QACA,WACA,MACA,MACA,OACA,OACA,SACA,UACA,MACA,OACA,SACA,KACA,SACA,KACA,KACA,SACA,QACA,cACA,MACA,KACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,CAsGA7M,EAAA,CACAx9B,SAAA,sBACAvD,QAAA4tC,EACA3H,SAvGA,CACA,aACA,MACA,MACA,MACA,QACA,MACA,OACA,aACA,YACA,QACA,WACA,MACA,cACA,UACA,UACA,UACA,OACA,MACA,SACA,YACA,OACA,OACA,SACA,QACA,SACA,YACA,UACA,UACA,UACA,OACA,OACA,MACA,KACA,QACA,MACA,aACA,aACA,OACA,MACA,OACA,SACA,MACA,MACA,aACA,MACA,OACA,SACA,MACA,OACA,MACA,MACA,QACA,WACA,QACA,OACA,WACA,QACA,MACA,UACA,QACA,SACA,eACA,MACA,MACA,QACA,QACA,OACA,OACA,MACA,CAkCAD,QAhCA,CACA,YACA,WACA,QACA,OACA,iBACA,OACA,CA0BA90C,KArBA,CACA,MACA,WACA,YACA,OACA,OACA,UACA,UACA,WACA,WACA,MACA,QACA,OACA,QACA,EAUA28C,EAAA,CACAp5C,UAAA,OACAsD,MAAA,gBACA,EAEA2uC,EAAA,CACAjyC,UAAA,QACAsD,MAAA,KACApI,IAAA,KACA4K,SAAAwmC,EACA5nC,QAAA,GACA,EAEA20C,EAAA,CACA/1C,MAAA,OACAC,UAAA,CACA,EAEAyvC,EAAA,CACAhzC,UAAA,SACA0D,SAAA,CAAA6E,EAAAlF,gBAAA,EACAwM,SAAA,CACA,CACAvM,MAAA,yCACApI,IAAA,MACAwI,SAAA,CACA6E,EAAAlF,gBAAA,CACA+1C,EACA,CACA71C,UAAA,EACA,EACA,CACAD,MAAA,yCACApI,IAAA,MACAwI,SAAA,CACA6E,EAAAlF,gBAAA,CACA+1C,EACA,CACA71C,UAAA,EACA,EACA,CACAD,MAAA,8BACApI,IAAA,MACAwI,SAAA,CACA6E,EAAAlF,gBAAA,CACA+1C,EACAC,EACApH,EACA,EAEA,CACA3uC,MAAA,8BACApI,IAAA,MACAwI,SAAA,CACA6E,EAAAlF,gBAAA,CACA+1C,EACAC,EACApH,EACA,EAEA,CACA3uC,MAAA,eACApI,IAAA,IACAqI,UAAA,EACA,EACA,CACAD,MAAA,eACApI,IAAA,IACAqI,UAAA,EACA,EACA,CACAD,MAAA,4BACApI,IAAA,GACA,EACA,CACAoI,MAAA,4BACApI,IAAA,GACA,EACA,CACAoI,MAAA,4BACApI,IAAA,IACAwI,SAAA,CACA6E,EAAAlF,gBAAA,CACAg2C,EACApH,EACA,EAEA,CACA3uC,MAAA,4BACApI,IAAA,IACAwI,SAAA,CACA6E,EAAAlF,gBAAA,CACAg2C,EACApH,EACA,EAEA1pC,EAAA9D,gBAAA,CACA8D,EAAA5D,iBAAA,CACA,EAIA20C,EAAA,kBACAC,EAAA,QAA6BD,EAAU,SAASA,EAAU,QAAQA,EAAU,MAM5Ex3C,EAAA,OAA2Bq3C,EAAA55C,IAAA,MAAyB,EACpD80C,EAAA,CACAr0C,UAAA,SACAuD,UAAA,EACAsM,SAAA,CAWA,CACAvM,MAAA,QAAuBg2C,EAAU,KAAKC,EAAW,cAAcD,EAAU,WAAWx3C,EAAU,IAE9F,CACAwB,MAAA,IAAmBi2C,EAAW,SAS9B,CACAj2C,MAAA,0CAAyDxB,EAAU,IAEnE,CACAwB,MAAA,4BAA2CxB,EAAU,IAErD,CACAwB,MAAA,6BAA4CxB,EAAU,IAEtD,CACAwB,MAAA,mCAAkDxB,EAAU,IAK5D,CACAwB,MAAA,OAAsBg2C,EAAU,UAAUx3C,EAAU,IAEpD,EAEA03C,EAAA,CACAx5C,UAAA,UACAsD,MAAAX,EAAAb,SAAA,YACA5G,IAAA,IACA4K,SAAAwmC,EACA5oC,SAAA,CACA,CACAJ,MAAA,SACA,EAEA,CACAA,MAAA,IACApI,IAAA,OACA6R,eAAA,EACA,EACA,EAEAgnC,EAAA,CACA/zC,UAAA,SACA6P,SAAA,CAEA,CACA7P,UAAA,GACAsD,MAAA,UACAsE,KAAA,EACA,EACA,CACAtE,MAAA,KACApI,IAAA,KACAyI,aAAA,GACAoE,WAAA,GACAjC,SAAAwmC,EACA5oC,SAAA,CACA,OACA01C,EACA/E,EACArB,EACAzqC,EAAAxE,iBAAA,CACA,EAEA,EAQA,OANAkuC,EAAAvuC,QAAA,EACAsvC,EACAqB,EACA+E,EACA,CAEA,CACAv6C,KAAA,SACA4J,QAAA,CACA,KACA,MACA,UACA,CACA8E,aAAA,GACAzH,SAAAwmC,EACA5nC,QAAA,cACAhB,SAAA,CACA01C,EACA/E,EACA,CAEA/wC,MAAA,UACA,EACA,CAGAqC,cAAA,KACApC,UAAA,CACA,EACAyvC,EACAwG,EACAjxC,EAAAxE,iBAAA,CACA,CACApJ,MAAA,CACA,cACAqI,EACA,CACArE,MAAA,CACA,YACA,kBACA,EACA+E,SAAA,CAAAqwC,EAAA,EAEA,CACAlkC,SAAA,CACA,CACAlV,MAAA,CACA,gBACAqI,EAAA,MACA,QAAAA,EAAA,QACA,EAEA,CACArI,MAAA,CACA,gBACAqI,EACA,EAEA,CACArE,MAAA,CACA,YACA,gBACA,yBACA,CACA,EACA,CACAqB,UAAA,OACAsD,MAAA,WACApI,IAAA,UACAwI,SAAA,CACA2wC,EACAN,EACAf,EACA,EAEA,CAEA,GiB7WAvC,GAAQ38B,gBAAA,ehB3DR,SAAAvL,CAAA,EACA,OACAE,QAAA,UACA/E,SAAA,CACA,CACA1D,UAAA,cACAsG,OAAA,CAGApL,IAAA,MACAoL,OAAA,CACApL,IAAA,IACA+P,YAAA,QACA,CACA,EACA4E,SAAA,CACA,CAAYvM,MAAA,iBACZ,CAAYA,MAAA,oBACZ,EAEA,CAEA,GgBsCAmtC,GAAQ38B,gBAAA,KfzDR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CAOAK,EAAA,uDACAy2C,EAAA92C,EAAAV,MAAA,CAEA,gDAEA,0CAEA,iDAEAy3C,EAAA,mEACAC,EAAAh3C,EAAAV,MAAA,CACA,OACA,OACA,OACA,QACA,KACA,KAGA,OACApD,KAAA,IAEAiH,SAAA,CACAgJ,SAAA9L,EACAuI,QACA,kDACAgmC,QACA,wFAEAC,SAEA,ghCAqBA,EAEA9tC,SAAA,CAEA6E,EAAA/E,OAAA,CACA,KACA,IACA,CAAUE,SAAA,CACV,CAMA/E,MAAA,SACAhE,MAAA,YACA2L,OAAA,CACApL,IAAAyH,EAAAb,SAAA,CAAAa,EAAAV,MAAA,CAEA,yBAEA,cAEAwE,WAAA,EACA,CACA,EACA,CAGA9H,MAAA,SACA2E,MAAA,SACApI,IAAA,IACAwI,SAAA,CACA,CACA/E,MAAA,WACAkR,SAAA,CACA,CAAoBlV,MAAAqI,CAAA,EACpB,CAAoBrI,MAAA,qBACpB,CACA8L,WAAA,EACA,EACA,EAEA,CACA9H,MAAA,SACAhE,MAAA,YACA,EACA,CACAgE,MAAA,UACAhE,MAAA,aACA,EACA,GAGA4N,EAAAxE,iBAAA,CAEA,CACApF,MAAA,SACA+E,SAAA,CAAA6E,EAAAlF,gBAAA,EACAwM,SAAA,CACAtH,EAAAnD,iBAAA,EACA9B,MAAA,cACApI,IAAA,SACA,GACAqN,EAAAnD,iBAAA,EACA9B,MAAA,cACApI,IAAA,SACA,GACAqN,EAAAnD,iBAAA,EACA9B,MAAA,cACApI,IAAA,SACA,GACAqN,EAAAnD,iBAAA,EACA9B,MAAA,cACApI,IAAA,SACA,GACAqN,EAAAnD,iBAAA,EACA9B,MAAA,cACApI,IAAA,SACA,GACAqN,EAAAnD,iBAAA,EACA9B,MAAA,cACApI,IAAA,SACA,GACA,CACAoI,MAAA,IACApI,IAAA,IACAqI,UAAA,CACA,EACA,CACAD,MAAA,IACApI,IAAA,IACAqI,UAAA,CACA,EACA,EAYA,CACAA,UAAA,EACAsM,SAAA,CACA,CACAlR,MAAA,CACA,aACA,UACA,EACAhE,MAAA,CACA++C,EACAD,EACA,EAEA,CACA96C,MAAA,CACA,aACA,UACA,EACAhE,MAAA,CACA,UACA8+C,EACA,EAEA,CACA96C,MAAA,CACA,gBACA,UACA,EACAhE,MAAA,CACAg/C,EACAF,EACA,EAEA,CACA96C,MAAA,CAAqB,YACrBhE,MAAA,CACA,mBACA8+C,EACA,EAEA,EAIA,CAEA96C,MAAA,CAAiB,cACjBhE,MAAA,CACAqI,EACA,MACA,KACA,MACA,EAGA,CACArE,MAAA,WACA4E,UAAA,EACAsM,SAAA,CACA,CAAYlV,MAAA++C,CAAA,EACZ,CAAY/+C,MAAA,WACZ,EAGA,CACAgE,MAAA,cACA4E,UAAA,EACA5I,MAAAg/C,CACA,EAEA,CAEAr2C,MAAA,IACApI,IAAA,IACAwI,SAAA,EAAsBJ,MAAA,OAAe,EAErC,CAEA,Ge1LAmtC,GAAQ38B,gBAAA,Qd3DR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CACAi3C,EAAA,qFAEAC,EAAAl3C,EAAAV,MAAA,CACA,uBAEA,8BAGA63C,EAAAn3C,EAAApJ,MAAA,CAAAsgD,EAAA,YAaAE,EAAA,CACA,qBACA,WACA,WACA,eACA,CACA,qBACA,OACA,QACA,CACAxuC,QAAA,CACA,QACA,MACA,QACA,QACA,QACA,OACA,QACA,UACA,KACA,OACA,QACA,MACA,MACA,SACA,MACA,KACA,KACA,SACA,OACA,MACA,KACA,OACA,UACA,SACA,QACA,SACA,OACA,QACA,SACA,QACA,OACA,QACA,QApDA,UACA,SACA,UACA,SACA,UACA,YACA,QACA,QA+CA,CACAimC,SAAA,CACA,OACA,SACA,gBACA,cACA,cACA,gBACA,mBACA,kBACA,CACAD,QAAA,CACA,OACA,QACA,MACA,EAEAyI,EAAA,CACAh6C,UAAA,SACAsD,MAAA,YACA,EACA22C,EAAA,CACA32C,MAAA,KACApI,IAAA,GACA,EACAg/C,EAAA,CACA3xC,EAAA/E,OAAA,CACA,IACA,IACA,CAAQE,SAAA,CAAAs2C,EAAA,GAERzxC,EAAA/E,OAAA,CACA,UACA,QACA,CACAE,SAAA,CAAAs2C,EAAA,CACAz2C,UAAA,EACA,GAEAgF,EAAA/E,OAAA,YAAA+E,EAAApE,gBAAA,EACA,CACA8tC,EAAA,CACAjyC,UAAA,QACAsD,MAAA,MACApI,IAAA,KACA4K,SAAAi0C,CACA,EACA/G,EAAA,CACAhzC,UAAA,SACA0D,SAAA,CACA6E,EAAAlF,gBAAA,CACA4uC,EACA,CACApiC,SAAA,CACA,CACAvM,MAAA,IACApI,IAAA,GACA,EACA,CACAoI,MAAA,IACApI,IAAA,GACA,EACA,CACAoI,MAAA,IACApI,IAAA,GACA,EACA,CACAoI,MAAA,cACApI,IAAA,IACA,EACA,CACAoI,MAAA,cACApI,IAAA,IACA,EACA,CACAoI,MAAA,cACApI,IAAA,IACA,EACA,CACAoI,MAAA,aACApI,IAAA,GACA,EACA,CACAoI,MAAA,cACApI,IAAA,IACA,EACA,CACAoI,MAAA,aACApI,IAAA,GACA,EACA,CACAoI,MAAA,aACApI,IAAA,GACA,EACA,CACAoI,MAAA,cACApI,IAAA,IACA,EAGA,CAAQoI,MAAA,iBAAsB,EAC9B,CAAQA,MAAA,2BAAgC,EACxC,CAAQA,MAAA,iCAAqC,EAC7C,CAAQA,MAAA,2DACR,CAAQA,MAAA,2BACR,CAAQA,MAAA,aAER,CAGAA,MAAAX,EAAApJ,MAAA,CACA,YACAoJ,EAAAb,SAAA,8CAEA4B,SAAA,CACA6E,EAAAnD,iBAAA,EACA9B,MAAA,QACApI,IAAA,QACAwI,SAAA,CACA6E,EAAAlF,gBAAA,CACA4uC,EACA,GAEA,EAEA,EAOA35C,EAAA,kBACA+7C,EAAA,CACAr0C,UAAA,SACAuD,UAAA,EACAsM,SAAA,CAEA,CAAQvM,MAAA,8BAA8BhL,kBAAuBA,aAAO,EAIpE,CAAQgL,MAAA,kCACR,CAAQA,MAAA,kCACR,CAAQA,MAAA,kCACR,CAAQA,MAAA,8CAGR,CAAQA,MAAA,yBACR,EAGAywC,EAAA,CACAlkC,SAAA,CACA,CACAlV,MAAA,MACA,EACA,CACAqF,UAAA,SACAsD,MAAA,KACApI,IAAA,SACAyI,aAAA,GACA8C,WAAA,GACAX,SAAAi0C,CACA,EACA,EA4EAI,EAAA,CACAnH,EA/DA,CACAnjC,SAAA,CACA,CACAlV,MAAA,CACA,WACAm/C,EACA,UACAA,EACA,EAEA,CACAn/C,MAAA,CACA,sBACAm/C,EACA,EAEA,CACAn7C,MAAA,CACA,gBACA,yBACA,EACAmH,SAAAi0C,CACA,EAjCA,CACAp/C,MAAA,CACA,sBACAm/C,EACA,CACAn7C,MAAA,CACA,eACA,EACAmH,SAAAi0C,CACA,EA8CA,CACAx2C,UAAA,EACA5I,MAAA,CACAm/C,EACA,aACA,CACAn7C,MAAA,CACA,eACA,CACA,EA7BA,CACA4E,UAAA,EACA5I,MAAA,sBACAqF,UAAA,mBACA,EA4BA,CACAuD,UAAA,EACA5I,MAAAk/C,EACAl7C,MAAA,aACA,EA9BA,CACAhE,MAAA,CACA,YACAi/C,EACA,CACAj7C,MAAA,CACA,YACA,kBACA,EACA+E,SAAA,CACAqwC,EACA,EA6BA,CAEAzwC,MAAAiF,EAAAvF,QAAA,OACA,CACAhD,UAAA,SACAsD,MAAAiF,EAAAtF,mBAAA,aACAM,UAAA,CACA,EACA,CACAvD,UAAA,SACAsD,MAAA,WACAI,SAAA,CACAsvC,EACA,CAAU1vC,MAAAs2C,CAAA,EACV,CACAr2C,UAAA,CACA,EACA8wC,EACA,CAGAr0C,UAAA,WACAsD,MAAA,4DACA,EACA,CACAtD,UAAA,SACAsD,MAAA,KACApI,IAAA,KACAyI,aAAA,GACAoE,WAAA,GACAxE,UAAA,EACAuC,SAAAi0C,CACA,EACA,CACAz2C,MAAA,IAAAiF,EAAAnE,cAAA,gBACA0B,SAAA,SACApC,SAAA,CACA,CACA1D,UAAA,SACA0D,SAAA,CACA6E,EAAAlF,gBAAA,CACA4uC,EACA,CACAvtC,QAAA,KACAmL,SAAA,CACA,CACAvM,MAAA,IACApI,IAAA,SACA,EACA,CACAoI,MAAA,OACApI,IAAA,UACA,EACA,CACAoI,MAAA,QACApI,IAAA,WACA,EACA,CACAoI,MAAA,MACApI,IAAA,SACA,EACA,CACAoI,MAAA,QACApI,IAAA,WACA,EACA,EAEA,CAAA3B,MAAA,CAAA0gD,EAAAC,GACA32C,UAAA,CACA,EACA,CAAAhK,MAAA,CAAA0gD,EAAAC,EAEAjI,CAAAA,EAAAvuC,QAAA,CAAAy2C,EACApG,EAAArwC,QAAA,CAAAy2C,EASA,IAAAC,EAAA,CACA,CACA92C,MAAA,SACAgD,OAAA,CACApL,IAAA,IACAwI,SAAAy2C,CACA,CACA,EACA,CACAn6C,UAAA,cACAsD,MAAA,iGACAgD,OAAA,CACApL,IAAA,IACA4K,SAAAi0C,EACAr2C,SAAAy2C,CACA,CACA,EACA,CAIA,OAFAD,EAAA1pC,OAAA,CAAAypC,GAEA,CACAp7C,KAAA,OACA4J,QAAA,CACA,KACA,UACA,UACA,OACA,MACA,CACA3C,SAAAi0C,EACAr1C,QAAA,OACAhB,SAAA,CAAA6E,EAAAlE,OAAA,EAA+BE,OAAA,SAAgB,CAC/ChL,MAAA,CAAA6gD,GACA7gD,MAAA,CAAA2gD,GACA3gD,MAAA,CAAA4gD,EACA,CACA,GcxXA1J,GAAQ38B,gBAAA,Qb5DR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CACAs2C,EAAA,CACAj5C,UAAA,wBACAuD,UAAA,EACAD,MAAAX,EAAApJ,MAAA,CACA,KACA,YACAgP,EAAAvF,QAAA,CACAL,EAAAb,SAAA,UACA,EACAu4C,EAAA,wCA8DAC,EAAA,CAEA,QAEA,OACA,OACA,QACA,OACA,OACA,KACA,QACA,SACA,UACA,QACA,QACA,YACA,aACA,KACA,MACA,QACA,QACA,OACA,OACA,UACA,WACA,SACA,eACA,sBACA,oBACA,iBACA,WAEA,UACA,aACA,YACA,SACA,OACA,OACA,UACA,iBACA,gBACA,mBACA,OACA,SACA,QACA,UACA,eACA,iBACA,eACA,QACA,kBACA,eACA,cACA,SACA,WACA,UACA,aACA,OACA,iBACA,eACA,OACA,SACA,WACA,eACA,aACA,mBACA,CACA9N,EAAA,CACA,KACA,MACA,MACA,MACA,OACA,QACA,KACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,SACA,SACA,SACA,MACA,CACA,OACA3tC,KAAA,OACA4J,QAAA,OACA3C,SAAA,CACAgJ,SAAAvG,EAAAvF,QAAA,MACAvG,KAAA+vC,EACAjhC,QA9JA,CACA,WACA,KACA,QACA,QACA,SACA,MACA,QACA,QACA,WACA,QACA,KACA,MACA,OACA,OACA,SACA,QACA,QACA,KACA,MACA,KACA,OACA,KACA,MACA,OACA,QACA,QACA,MACA,OACA,MACA,WACA,OACA,MACA,MACA,SACA,OACA,OACA,SACA,SACA,QACA,QACA,OACA,MACA,OACA,SACA,SACA,UACA,MACA,UACA,QACA,QACA,QACA,CA2GAgmC,QA1GA,CACA,OACA,QACA,OACA,OACA,KACA,MACA,CAoGAC,SAAA8I,CACA,EACA51C,QAAA,KACAhB,SAAA,CACA6E,EAAA1E,mBAAA,CACA0E,EAAA/E,OAAA,gBAAqCE,SAAA,WACrC6E,EAAAoL,OAAA,CAAApL,EAAA5D,iBAAA,EACArB,MAAA,MACAoB,QAAA,IACA,GACA,CACA1E,UAAA,SACA6P,SAAA,CACA,CAAYvM,MAAA,4BACZ,CAAYA,MAAA,iCAAmC,EAC/C,EAEA,CACAtD,UAAA,SACAsD,MAAA,yBACA,EACA,CACAtD,UAAA,SACA6P,SAAA,CACA,CAAYvM,MAAA,gBAAA+2C,CAAA,EACZ,CAAY/2C,MAAA,iBAAA+2C,CAAA,EACZ,CAAY/2C,MAAA,uBAAA+2C,CAAA,EACZ,CAAY/2C,MAAA,kDACZ+2C,CAAA,EACA,CACA92C,UAAA,CACA,EACA,CACAD,MAAA,CACA,KACA,MACAiF,EAAAtF,mBAAA,CACA,CACAjD,UAAA,CACA,YACA,kBACA,CACA,EACA,CACAA,UAAA,OACAsD,MAAA,SACApI,IAAA,MACAwI,SAAA,CACA,CACA1D,UAAA,SACAsD,MAAA,IACApI,IAAA,GACA,EACA,EAEA,CACAoI,MAAA,CACA,MACA,MACA,cACAiF,EAAAtF,mBAAA,CACA,CACAjD,UAAA,CACA,YACA,YACA,YACA,CACA,EAEA,CACAsD,MAAA,CACA,MACA,MACAiF,EAAAtF,mBAAA,CACA,MACA,KACA,CACAjD,UAAA,CACA,YACA,aACA,WACA,CACA,EACA,CACAsD,MAAA,CACA,OACA,MACAiF,EAAAtF,mBAAA,CACA,CACAjD,UAAA,CACA,YACA,eACA,CACA,EACA,CACAsD,MAAA,CACA,uCACA,MACAiF,EAAAtF,mBAAA,CACA,CACAjD,UAAA,CACA,YACA,eACA,CACA,EACA,CACAsD,MAAAiF,EAAAvF,QAAA,MACA8C,SAAA,CACAyF,QAAA,OACAimC,SAAA8I,EACA79C,KAAA+vC,CACA,CACA,EACA,CACAxsC,UAAA,cACAsD,MAAA,IACA,EACA21C,EACA,CAEA,GavOAxI,GAAQ38B,gBAAA,QZ4hBR,SAAAvL,CAAA,EACA,IAAA8qC,EAAgB7F,EAAKjlC,GAIrB4qC,EAAA,WAGAsC,EAAA,CACAz1C,UAAA,WACAsD,MAAA,kCACAC,UAAA,CACA,EAEA,OACA1E,KAAA,OACA4L,iBAAA,GACA/F,QAAA,SACAhB,SAAA,CACA6E,EAAA1E,mBAAA,CACA0E,EAAAzE,oBAAA,CAGAuvC,EAAA3H,eAAA,CACA,CACA1rC,UAAA,cACAsD,MAAA,kBACAC,UAAA,CACA,EACA,CACAvD,UAAA,iBACAsD,MAAA,oBACAC,UAAA,CACA,EACA8vC,EAAA5H,uBAAA,CACA,CACAzrC,UAAA,eACAsD,MAAA,OAAwBmqC,EAAIluC,IAAA,aAE5BgE,UAAA,CACA,EACA,CACAvD,UAAA,kBACAsD,MAAA,KAAAi3C,EAAAh7C,IAAA,SACA,EACA,CACAS,UAAA,kBACAsD,MAAA,SAAAk3C,EAAAj7C,IAAA,SACA,EACAk2C,EACA,CACAnyC,MAAA,KACApI,IAAA,KACAwI,SAAA,CAAA2vC,EAAA3H,eAAA,GAEA2H,EAAA1H,YAAA,CACA,CACA3rC,UAAA,YACAsD,MAAA,OAAwBuqC,EAAUtuC,IAAA,YAClC,EACA,CAAQ+D,MAAA,8oCACR,CACAA,MAAA,IACApI,IAAA,QACAqI,UAAA,EACAG,SAAA,CACA2vC,EAAA/H,aAAA,CACAmK,EACApC,EAAA9H,QAAA,CACA8H,EAAA3H,eAAA,CACAnjC,EAAA5D,iBAAA,CACA4D,EAAA9D,gBAAA,CACA4uC,EAAAhI,SAAA,CACAgI,EAAA7H,iBAAA,CACA,EAKA,CACAloC,MAAA,oBACAwC,SAAA,CACAgJ,SAAAqkC,EACA5nC,QAAA,kBACA,CACA,EACA,CACAjI,MAAA,IACApI,IAAA,OACA2M,YAAA,GACA/B,SAAA,CACAgJ,SAAA,UACAvD,QAtFA,kBAuFAyU,UAAqB0tB,EAAcnuC,IAAA,KACnC,EACAmE,SAAA,CACA,CACAJ,MAAA6vC,EACAnzC,UAAA,SACA,EACA,CACAsD,MAAA,eACAtD,UAAA,WACA,EACAy1C,EACAltC,EAAA5D,iBAAA,CACA4D,EAAA9D,gBAAA,CACA4uC,EAAA9H,QAAA,CACA8H,EAAA3H,eAAA,CACA,EAEA2H,EAAA7H,iBAAA,CACA,CAEA,GY7oBAiF,GAAQ38B,gBAAA,SX9DR,SAAAvL,CAAA,EACA,OACA1J,KAAA,gBACA4J,QAAA,CACA,UACA,eACA,CACA/E,SAAA,CACA,CACA1D,UAAA,cAIAsD,MAAA,qCACAgD,OAAA,CACApL,IAAA,gBACA+P,YAAA,MACA,CACA,EACA,CAEA,GW0CAwlC,GAAQ38B,gBAAA,OVlDR,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CACA83C,EAAAlyC,EAAA/E,OAAA,WAiBA+oC,EAAA,CACA,OACA,QAGA,UACA,CASAC,EAAA,CACA,SACA,SACA,OACA,UACA,OACA,YACA,OACA,OACA,MACA,WACA,UACA,QACA,MACA,UACA,WACA,QACA,QACA,WACA,UACA,OACA,MACA,WACA,OACA,YACA,UACA,UACA,YACA,CAkYAkO,EAAA,CACA,MACA,OACA,YACA,OACA,OACA,MACA,OACA,OACA,UACA,WACA,OACA,MACA,OACA,QACA,YACA,aACA,YACA,aACA,QACA,UACA,MACA,UACA,cACA,QACA,aACA,gBACA,cACA,cACA,iBACA,aACA,aACA,uBACA,aACA,MACA,aACA,OACA,UACA,KACA,MACA,QACA,QACA,MACA,MACA,MACA,YACA,QACA,SACA,eACA,kBACA,kBACA,WACA,iBACA,QACA,OACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,aACA,MACA,OACA,OACA,aACA,cACA,YACA,kBACA,MACA,MACA,OACA,YACA,kBACA,QACA,OACA,aACA,SACA,QACA,WACA,UACA,WACA,eACA,CAuBAC,EAAA,CACA,eACA,cACA,cACA,cACA,WACA,cACA,iBACA,gBACA,cACA,gBACA,gBACA,eACA,cACA,aACA,cACA,gBACA,CAIArO,EAAA,CArfA,MACA,OACA,MACA,WACA,QACA,MACA,MACA,MACA,QACA,YACA,wBACA,KACA,aACA,OACA,aACA,KACA,OACA,SACA,gBACA,MACA,QACA,cACA,kBACA,UACA,SACA,SACA,OACA,UACA,OACA,KACA,OACA,SACA,cACA,WACA,OACA,OACA,OACA,UACA,OACA,cACA,YACA,mBACA,QACA,aACA,OACA,QACA,WACA,UACA,UACA,SACA,SACA,YACA,UACA,aACA,WACA,UACA,OACA,OACA,gBACA,MACA,OACA,QACA,YACA,aACA,SACA,QACA,OACA,YACA,UACA,kBACA,eACA,kCACA,eACA,eACA,cACA,iBACA,eACA,oBACA,eACA,eACA,mCACA,eACA,SACA,QACA,OACA,MACA,aACA,MACA,UACA,WACA,UACA,UACA,SACA,SACA,aACA,QACA,WACA,gBACA,aACA,WACA,SACA,OACA,UACA,OACA,UACA,OACA,QACA,MACA,YACA,gBACA,WACA,SACA,SACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,UACA,QACA,QACA,SACA,cACA,QACA,QACA,MACA,UACA,YACA,OACA,OACA,OACA,WACA,SACA,MACA,SACA,QACA,QACA,WACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,UACA,QACA,QACA,cACA,SACA,MACA,UACA,YACA,eACA,WACA,OACA,KACA,OACA,aACA,gBACA,cACA,cACA,iBACA,aACA,aACA,uBACA,aACA,MACA,WACA,QACA,aACA,UACA,OACA,UACA,OACA,OACA,aACA,UACA,KACA,QACA,YACA,iBACA,MACA,QACA,QACA,QACA,eACA,kBACA,UACA,MACA,SACA,QACA,SACA,MACA,SACA,MACA,WACA,SACA,QACA,WACA,WACA,UACA,QACA,QACA,MACA,KACA,OACA,YACA,MACA,YACA,QACA,OACA,SACA,UACA,eACA,oBACA,KACA,SACA,MACA,OACA,KACA,MACA,OACA,OACA,KACA,QACA,MACA,QACA,OACA,WACA,UACA,YACA,YACA,UACA,MACA,UACA,eACA,kBACA,kBACA,SACA,UACA,WACA,iBACA,QACA,WACA,YACA,UACA,UACA,YACA,MACA,QACA,OACA,QACA,OACA,YACA,MACA,aACA,cACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,UACA,SACA,SACA,UACA,SACA,QACA,WACA,SACA,MACA,aACA,OACA,UACA,YACA,QACA,SACA,SACA,SACA,OACA,SACA,YACA,eACA,MACA,OACA,UACA,MACA,OACA,OACA,WACA,OACA,WACA,eACA,MACA,eACA,WACA,aACA,OACA,QACA,SACA,aACA,cACA,cACA,SACA,YACA,kBACA,WACA,MACA,YACA,SACA,cACA,cACA,QACA,cACA,MACA,OACA,OACA,OACA,YACA,gBACA,kBACA,KACA,WACA,YACA,kBACA,cACA,QACA,UACA,OACA,aACA,OACA,WACA,UACA,QACA,SACA,UACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YACA,UACA,UACA,aACA,OACA,WACA,QACA,eACA,SACA,OACA,SACA,UACA,OAzXA,MACA,MACA,YACA,OACA,QACA,QACA,OACA,OA6fA,CAAAl7B,MAAA,IACA,CAAAspC,EAAA17C,QAAA,CAAAuM,IAcAypC,EAAA,CACA1xC,MAAAX,EAAApJ,MAAA,MAAAoJ,EAAAV,MAAA,IArBAy4C,GAqBA,SACAn3C,UAAA,EACAuC,SAAA,CAAgB0rC,SAvBhBkJ,CAuBgB,CAChB,EAmBA,OACA77C,KAAA,MACA4L,iBAAA,GAEA/F,QAAA,WACAoB,SAAA,CACAgJ,SAAA,YACAvD,QACAqvC,SAxBAtqC,CAAA,EACAuqC,WAAAA,CAAA,CAAAC,KAAAA,CAAA,CACA,CAAI,EAAI,EAGR,OADAD,EAAAA,GAAA,GACAvqC,EAAAlR,GAAA,IACA,EAAAzE,KAAA,YAAAkgD,EAAA77C,QAAA,CAAAyR,GACAA,EACQsqC,EAAAtqC,GACR,GAAkBA,EAAK,IAEvBA,EAGA,EAUA67B,EAAA,CAAoCwO,KAAA,GAAAz7C,EAAArH,MAAA,KACpCu5C,QAAAhF,EACA9vC,KAAA+vC,EACAgF,SA7FA,CACA,kBACA,eACA,kCACA,eACA,eACA,iBACA,mCACA,eACA,eACA,cACA,cACA,eACA,YACA,oBACA,iBACA,EA+EA9tC,SAAA,CACA,CACAJ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AA,OACAC,IACAA,EAAA,KACAA,EAAA,MACAA,EAAA,OACA,EAIAC,EAAA,CAA8BnhD,MAAApB,EAAA,IAAAye,GAAA,MAS9B+jC,EAAA,CACAD,EATA,CACA97C,UAAA,WACArF,MAAA,OACA,EACA,CACAqF,UAAA,WACArF,MAAA,MAAiB8zC,GAAoB,IAMrC,CA2BAzC,EAAA,CAxBA,CACArxC,MAAA,sBACAqF,UAAA,UACAsG,OAAA,CAAc5C,SAAA,CACd,CACAJ,MAAA,KACApI,IAAA,KACA4K,SAAA8oC,GACAlrC,SAAA,IACA63C,EACAlH,EACArB,EACA,EAEA,CACA,EACA,CACAhzC,UAAA,UACArF,MAAApB,EAAA,IAAA0I,KAAA0sC,IACA,EACA,CACA3uC,UAAA,OACArF,MAAApB,EAAA,IAAAye,GACA,EAKA,CAGAgkC,EAAA,CACArhD,MAAAmH,EAAA,WACAyB,UAAA,EACAG,SAAA,CACA,CACA1D,UAAA,OACArF,MAAApB,EAAA,gEAAAk1C,GAAA,IACA,EACA,CACAzuC,UAAA,OACArF,MAAA+zC,GACAnrC,UAAA,CACA,EACA,CACA5I,MAAA,QACA4I,UAAA,CACA,EACA,CACA5I,MAAA,SACA4I,UAAA,CACA,EACA,CACA5I,MAAApB,EAAA,UAAAuI,EAAA4sC,KACAnrC,UAAA,CACA,EACA,EAEA04C,EAAA,CACA34C,MAAA,IACApI,IAAA,IACA4K,SAAAwmC,EACA5oC,SAAA,IACA6vC,KACA8H,KACArP,EACAsP,EACAU,EACA,EAEAA,EAAAt4C,QAAA,CAAA7H,IAAA,CAAAogD,GAUA,IAAAC,EAAA,CACA54C,MAAA,KACApI,IAAA,KACAqI,UAAA,EACAuC,SAAAwmC,EACA5oC,SAAA,CACA,OAZA,CACA/I,MAAApB,EAAAye,GAAA,QACAlS,SAAA,MACAvC,UAAA,CACA,KAUAgwC,KACA8H,KACAzO,KACA2O,EACAlH,EACArB,KACA+I,KACA/P,EACAgQ,EACA,EAGAG,EAAA,CACA74C,MAAA,IACApI,IAAA,IACAwI,SAAA,IACA6vC,EACAyI,EACA,EAoBAI,EAAA,CACA94C,MAAA,KACApI,IAAA,KACA4K,SAAAwmC,EACA5oC,SAAA,CAtBA,CACAJ,MAAArB,EACAH,EAAAvI,EAAAye,GAAA,SACAlW,EAAAvI,EAAAye,GAAA,MAAAA,GAAA,UAEA9c,IAAA,IACAqI,UAAA,EACAG,SAAA,CACA,CACA1D,UAAA,UACArF,MAAA,OACA,EACA,CACAqF,UAAA,SACArF,MAAAqd,EACA,EACA,KAQAu7B,KACA8H,KACAE,EACAlH,EACArB,KACAhH,EACAgQ,EACAE,EACA,CACAz1C,WAAA,GACA/B,QAAA,MACA,EAEA4tC,EAAA,CACA33C,MAAA,CACA,OACA,MACAsH,EAAA65C,EAAAnhD,KAAA,CAAAqd,GAAAooB,GACA,CACApgC,UAAA,CACA,YACA,kBACA,EACA0D,SAAA,CACAy4C,EACAC,EACA7D,EACA,CACA7zC,QAAA,CACA,KACA,IACA,EAgCA23C,EAAA,CACA/4C,MAAA,CACA,kBACA,MACAorC,GACA,CACA1uC,UAAA,CACA,YACA,SACA,EACA0D,SAAA,CAAAs4C,EAAA,CACAl2C,SAAA,IACAqoC,KACAD,EACA,CACAhzC,IAAA,GACA,EAGA,QAAA6U,KAAAijC,EAAAnjC,QAAA,EACA,IAAAysC,EAAAvsC,EAAArM,QAAA,CAAAwO,IAAA,CAAAtU,GAAAA,aAAAA,EAAAqb,KAAA,CAEAqjC,CAAAA,EAAAx2C,QAAA,CAAAwmC,EACA,IAAAiQ,EAAA,IACAlB,KACAzO,KACA2O,EACAlH,EACArB,KACA+I,EACA,CACAO,EAAA54C,QAAA,KACA64C,EACA,CACAj5C,MAAA,KACApI,IAAA,KACAwI,SAAA,CACA,UACA64C,EACA,EAEA,CAGA,OACA19C,KAAA,QACAiH,SAAAwmC,EACA5oC,SAAA,IACA6vC,EACAjB,EA5EA,CACA33C,MAAA,CACA,4BACA,cACA,CACAqF,UAAA,CAAiB,aACjB0D,SAAA,CACAy4C,EACAC,EACA7D,EACA,CACA7zC,QAAA,MACA,EAkEA,CACAiB,cAAA,6CACAzK,IAAA,MACA6M,WAAA,GACAjC,SAAAwmC,EACA5oC,SAAA,CACA6E,EAAAoL,OAAA,CAAApL,EAAAtD,UAAA,EACAjF,UAAA,cACAsD,MAAA,uCACA,MACA+3C,EACA,EA3EA,CACA1gD,MAAA,CACA,WACA,MACAylC,EACA,CACApgC,UAAA,CACA,YACA,SACA,CACA,EAoEAq8C,EACA,CACA12C,cAAA,SACAzK,IAAA,IACAwI,SAAA,IAAA6vC,EAAA,CACAhwC,UAAA,CACA,KACA83C,KACAzO,KACA2O,EACAlH,EACArB,KACA+I,KACA/P,EACAgQ,EACAE,EACA,CAEA,GS/wBAzL,GAAQ38B,gBAAA,cR4rBR,SAAAvL,CAAA,EACA,IAAAi0C,EAAqBC,SAjmBFl0C,CAAA,MAgXnB+H,EA/WA,IAAA3N,EAAA4F,EAAA5F,KAAA,CAQAqxC,EAAA,CAAAr5C,EAAA,CAAkCs5C,MAAAA,CAAA,CAAO,IACzC,IAAAC,EAAA,KAAAv5C,CAAA,IAAAhD,KAAA,IAEA,OAAAyE,KADAzB,EAAA6K,KAAA,CAAA+O,OAAA,CAAA2/B,EAAAD,EAEA,IAUA,wBACA,4BAwDAE,EAAA,CACArlC,SAAc+/B,GACdtjC,QAAaujC,GACbyC,QAAaxC,GACbyC,SAAcpC,GACd,oBAAyBD,EACzB,EAGAjD,EAAA,kBACAC,EAAA,OAAsBD,EAAc,GAGpCkI,EAAA,sCACAC,EAAA,CACAr0C,UAAA,SACA6P,SAAA,CAEA,CAAQvM,MAAA,QAAe8wC,EAAe,KAAKjI,EAAK,WAAWA,EAC3D,cAAqBD,EAAc,KAD6B,EAEhE,CAAQ5oC,MAAA,OAAc8wC,EAAe,QAAQjI,EAAK,cAAcA,EAAK,OAGrE,CAAQ7oC,MAAA,gCAGR,CAAQA,MAAA,4CACR,CAAQA,MAAA,gCACR,CAAQA,MAAA,gCAIR,CAAQA,MAAA,mBACR,CACAC,UAAA,CACA,EAEA0uC,EAAA,CACAjyC,UAAA,QACAsD,MAAA,SACApI,IAAA,MACA4K,SAAAquC,EACAzwC,SAAA,IAEA4wC,EAAA,CACAhxC,MAAA,QACApI,IAAA,GACAoL,OAAA,CACApL,IAAA,IACA8M,UAAA,GACAtE,SAAA,CACA6E,EAAAlF,gBAAA,CACA4uC,EACA,CACAhnC,YAAA,KACA,CACA,EACAspC,EAAA,CACAjxC,MAAA,OACApI,IAAA,GACAoL,OAAA,CACApL,IAAA,IACA8M,UAAA,GACAtE,SAAA,CACA6E,EAAAlF,gBAAA,CACA4uC,EACA,CACAhnC,YAAA,KACA,CACA,EACAupC,EAAA,CACAlxC,MAAA,OACApI,IAAA,GACAoL,OAAA,CACApL,IAAA,IACA8M,UAAA,GACAtE,SAAA,CACA6E,EAAAlF,gBAAA,CACA4uC,EACA,CACAhnC,YAAA,SACA,CACA,EACAwpC,EAAA,CACAz0C,UAAA,SACAsD,MAAA,IACApI,IAAA,IACAwI,SAAA,CACA6E,EAAAlF,gBAAA,CACA4uC,EACA,EAyCAzuC,EAAA,CACAxD,UAAA,UACA6P,SAAA,CAzCAtH,EAAA/E,OAAA,CACA,eACA,OACA,CACAD,UAAA,EACAG,SAAA,CACA,CACAJ,MAAA,iBACAC,UAAA,EACAG,SAAA,CACA,CACA1D,UAAA,SACAsD,MAAA,YACA,EACA,CACAtD,UAAA,OACAsD,MAAA,MACApI,IAAA,MACA6M,WAAA,GACApE,aAAA,GACAJ,UAAA,CACA,EACA,CACAvD,UAAA,WACAsD,MAAAoxC,GAAA,gBACAjuC,WAAA,GACAlD,UAAA,CACA,EAGA,CACAD,MAAA,cACAC,UAAA,CACA,EACA,EAEA,GAOAgF,EAAAzE,oBAAA,CACAyE,EAAA1E,mBAAA,CACA,EAEA8wC,EAAA,CACApsC,EAAA9D,gBAAA,CACA8D,EAAA5D,iBAAA,CACA2vC,EACAC,EACAC,EACAC,EAEA,CAAM95C,MAAA,SACN05C,EAIA,CACApC,EAAAvuC,QAAA,CAAAixC,EACAp7C,MAAA,EAGA+J,MAAA,KACApI,IAAA,KACA4K,SAAAquC,EACAzwC,SAAA,CACA,OACA,CAAAnK,MAAA,CAAAo7C,EACA,GACA,IAAAC,EAAA,GAAAr7C,MAAA,CAAAiK,EAAAyuC,EAAAvuC,QAAA,EACAmxC,EAAAD,EAAAr7C,MAAA,EAEA,CACA+J,MAAA,KACApI,IAAA,KACA4K,SAAAquC,EACAzwC,SAA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,SAAA,SACAvD,QA1GA,CACA,UACA,QACA,KACA,QACA,WACA,OACA,gBACA,OACA,OACA,OACA,OACA,MACA,SACA,OACA,aACA,aACA,YACA,YACA,YACA,aACA,YACA,SACA,KACA,SACA,QACA,OACA,SACA,cACA,cACA,SACA,MACA,MACA,SACA,QACA,SACA,SACA,SACA,aACA,YACA,QACA,QACA,YACA,OACA,OACA,cACA,EA8DA7H,SAAA,CA9GA6E,EAAA/E,OAAA,MAAuC,KAgHvC8nC,EApBA,CACA3wC,MAAA,CACA,mBACA,MACA,IACA,CACAqF,UAAA,CACA,YACA,YACA,CACA,EAxCA,CACAA,UAAA,WACAsD,MAAA,UACA,EAEA,CACA3I,MAAA,gBACAqF,UAAA,cACAuD,UAAA,CACA,EArBA,CACAD,MAAA,CACA,8BACA,MACA,YACA,CACAtD,UAAA,CACA,YACA,kBACA,CACA,EAyDAuI,EAAA5D,iBAAA,CArCA,CAEAhK,MAAA,0BACAqF,UAAA,MACA,EAEA,CACAA,UAAA,UAEArF,MAAA,mZACA,EAjBA,CACAqF,UAAA,SACAuD,UAAA,EAEA5I,MAAA,iNACA,EA2CA,CAEA,GM3DA81C,GAAQ38B,gBAAA,OLrER,SAAAvL,CAAA,EACA,IAAA5F,EAAA4F,EAAA5F,KAAA,CAQA46C,EAAA56C,EAAApJ,MAAA,aAA0CoJ,EAAAX,QAAA,qBAA4B,mBAEtEw7C,EAAA,CACAx9C,UAAA,SACAsD,MAAA,kCACA,EACAm6C,EAAA,CACAn6C,MAAA,KACAI,SAAA,CACA,CACA1D,UAAA,UACAsD,MAAA,sBACAoB,QAAA,IACA,EACA,EAEAg5C,EAAAn1C,EAAAoL,OAAA,CAAA8pC,EAAA,CACAn6C,MAAA,KACApI,IAAA,IACA,GACAyiD,EAAAp1C,EAAAoL,OAAA,CAAApL,EAAA9D,gBAAA,EAAsEzE,UAAA,WACtE49C,EAAAr1C,EAAAoL,OAAA,CAAApL,EAAA5D,iBAAA,EAAwE3E,UAAA,WACxE69C,EAAA,CACA9wC,eAAA,GACArI,QAAA,IACAnB,UAAA,EACAG,SAAA,CACA,CACA1D,UAAA,OACAsD,MA5BA,mBA6BAC,UAAA,CACA,EACA,CACAD,MAAA,OACAC,UAAA,EACAG,SAAA,CACA,CACA1D,UAAA,SACAyG,WAAA,GACAoJ,SAAA,CACA,CACAvM,MAAA,IACApI,IAAA,IACAwI,SAAA,CAAA85C,EAAA,EAEA,CACAl6C,MAAA,IACApI,IAAA,IACAwI,SAAA,CAAA85C,EAAA,EAEA,CAAgBl6C,MAAA,gBAChB,EAEA,EAEA,EAEA,OACAzE,KAAA,YACA4J,QAAA,CACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,QACA,MACA,MACA,CACAgC,iBAAA,GACA8C,aAAA,GACA7J,SAAA,CACA,CACA1D,UAAA,OACAsD,MAAA,UACApI,IAAA,IACAqI,UAAA,GACAG,SAAA,CACA+5C,EACAG,EACAD,EACAD,EACA,CACAp6C,MAAA,KACApI,IAAA,KACAwI,SAAA,CACA,CACA1D,UAAA,OACAsD,MAAA,UACApI,IAAA,IACAwI,SAAA,CACA+5C,EACAC,EACAE,EACAD,EACA,EAEA,EAEA,EAEAp1C,EAAA/E,OAAA,CACA,OACA,MACA,CAAUD,UAAA,KAEV,CACAD,MAAA,cACApI,IAAA,QACAqI,UAAA,EACA,EACAi6C,EAEA,CACAx9C,UAAA,OACA9E,IAAA,MACA2U,SAAA,CACA,CACAvM,MAAA,SACAC,UAAA,GACAG,SAAA,CACAk6C,EACA,EAEA,CACAt6C,MAAA,mBACA,EACA,EAGA,CACAtD,UAAA,MAMAsD,MAAA,iBACApI,IAAA,IACA4K,SAAA,CAAoBjH,KAAA,SACpB6E,SAAA,CAAAm6C,EAAA,CACAv3C,OAAA,CACApL,IAAA,YACA8M,UAAA,GACAiD,YAAA,CACA,MACA,MACA,CAEA,EACA,CACAjL,UAAA,MAEAsD,MAAA,kBACApI,IAAA,IACA4K,SAAA,CAAoBjH,KAAA,UACpB6E,SAAA,CAAAm6C,EAAA,CACAv3C,OAAA,CACApL,IAAA,aACA8M,UAAA,GACAiD,YAAA,CACA,aACA,aACA,MACA,CAEA,EAEA,CACAjL,UAAA,MACAsD,MAAA,SACA,EAEA,C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","sources":["webpack://_N_E/../../node_modules/format/format.js","webpack://_N_E/../../node_modules/inline-style-parser/index.js","webpack://_N_E/../../node_modules/highlight.js/styles/github.css","webpack://_N_E/../../node_modules/style-to-object/index.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/lib/core.js","webpack://_N_E/../../node_modules/hast-util-sanitize/lib/schema.js","webpack://_N_E/../../node_modules/micromark-util-sanitize-uri/index.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/footer.js","webpack://_N_E/../../node_modules/unist-util-position/lib/index.js","webpack://_N_E/../../node_modules/unist-util-generated/lib/index.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/node_modules/mdast-util-definitions/lib/index.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/revert.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://_N_E/../../node_modules/trim-lines/index.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/state.js","webpack://_N_E/../../node_modules/mdast-util-to-hast/lib/index.js","webpack://_N_E/../../node_modules/remark-rehype/lib/index.js","webpack://_N_E/../../node_modules/property-information/lib/util/schema.js","webpack://_N_E/../../node_modules/property-information/lib/util/merge.js","webpack://_N_E/../../node_modules/property-information/lib/normalize.js","webpack://_N_E/../../node_modules/property-information/lib/util/info.js","webpack://_N_E/../../node_modules/property-information/lib/util/types.js","webpack://_N_E/../../node_modules/property-information/lib/util/defined-info.js","webpack://_N_E/../../node_modules/property-information/lib/util/create.js","webpack://_N_E/../../node_modules/property-information/lib/xlink.js","webpack://_N_E/../../node_modules/property-information/lib/xml.js","webpack://_N_E/../../node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://_N_E/../../node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://_N_E/../../node_modules/property-information/lib/xmlns.js","webpack://_N_E/../../node_modules/property-information/lib/aria.js","webpack://_N_E/../../node_modules/property-information/lib/html.js","webpack://_N_E/../../node_modules/property-information/lib/svg.js","webpack://_N_E/../../node_modules/property-information/index.js","webpack://_N_E/../../node_modules/react-markdown/lib/rehype-filter.js","webpack://_N_E/../../node_modules/hast-util-whitespace/index.js","webpack://_N_E/../../node_modules/property-information/lib/find.js","webpack://_N_E/../../node_modules/property-information/lib/hast-to-react.js","webpack://_N_E/../../node_modules/react-markdown/node_modules/space-separated-tokens/index.js","webpack://_N_E/../../node_modules/comma-separated-tokens/index.js","webpack://_N_E/../../node_modules/style-to-object/index.mjs","webpack://_N_E/../../node_modules/react-markdown/lib/uri-transformer.js","webpack://_N_E/../../node_modules/react-markdown/lib/ast-to-react.js","webpack://_N_E/../../node_modules/react-markdown/lib/react-markdown.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/arduino.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/bash.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/c.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/cpp.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/csharp.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/css.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/diff.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/go.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/graphql.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/ini.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/java.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/javascript.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/json.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/kotlin.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/less.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/lua.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/makefile.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/markdown.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/objectivec.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/perl.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/php.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/php-template.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/plaintext.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/python.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/python-repl.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/r.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/ruby.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/rust.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/scss.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/shell.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/sql.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/swift.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/typescript.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/vbnet.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/wasm.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/xml.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/languages/yaml.js","webpack://_N_E/../../node_modules/lowlight/node_modules/highlight.js/es/core.js","webpack://_N_E/../../node_modules/fault/index.js","webpack://_N_E/../../node_modules/lowlight/lib/core.js","webpack://_N_E/../../node_modules/lowlight/lib/common.js","webpack://_N_E/../../node_modules/lowlight/index.js","webpack://_N_E/../../node_modules/hast-util-is-element/index.js","webpack://_N_E/../../node_modules/unist-util-find-after/lib/index.js","webpack://_N_E/../../node_modules/hast-util-to-text/lib/index.js","webpack://_N_E/../../node_modules/rehype-highlight/lib/index.js","webpack://_N_E/../../node_modules/hast-util-sanitize/lib/index.js","webpack://_N_E/../../node_modules/rehype-sanitize/index.js"],"sourcesContent":["//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n\n;(function() {\n\n  //// Export the API\n  var namespace;\n\n  // CommonJS / Node module\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  }\n\n  // Browsers and other environments\n  else {\n    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n    namespace = (function(){ return this || (1,eval)('this') }());\n  }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf(/* ... */) {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n      , args = [].slice.call(arguments)\n      , i = 0\n      , n = fmt.length\n      , result = ''\n      , c\n      , escaped = false\n      , arg\n      , tmp\n      , leadingZero = false\n      , precision\n      , nextArg = function() { return args[argIndex++]; }\n      , slurpNumber = function() {\n          var digits = '';\n          while (/\\d/.test(fmt[i])) {\n            digits += fmt[i++];\n            c = fmt[i];\n          }\n          return digits.length > 0 ? parseInt(digits) : null;\n        }\n      ;\n    for (; i < n; ++i) {\n      c = fmt[i];\n      if (escaped) {\n        escaped = false;\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        }\n        else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        }\n        else {\n          leadingZero = true;\n        }\n        precision = slurpNumber();\n        switch (c) {\n        case 'b': // number in binary\n          result += parseInt(nextArg(), 10).toString(2);\n          break;\n        case 'c': // character\n          arg = nextArg();\n          if (typeof arg === 'string' || arg instanceof String)\n            result += arg;\n          else\n            result += String.fromCharCode(parseInt(arg, 10));\n          break;\n        case 'd': // number in decimal\n          result += parseInt(nextArg(), 10);\n          break;\n        case 'f': // floating point number\n          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n          result += leadingZero ? tmp : tmp.replace(/^0/, '');\n          break;\n        case 'j': // JSON\n          result += JSON.stringify(nextArg());\n          break;\n        case 'o': // number in octal\n          result += '0' + parseInt(nextArg(), 10).toString(8);\n          break;\n        case 's': // string\n          result += nextArg();\n          break;\n        case 'x': // lowercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16);\n          break;\n        case 'X': // uppercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n          break;\n        default:\n          result += c;\n          break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n    return result;\n  }\n\n}());\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","// extracted by mini-css-extract-plugin","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/* eslint-disable no-multi-assign */\n\nfunction deepFreeze(obj) {\n  if (obj instanceof Map) {\n    obj.clear =\n      obj.delete =\n      obj.set =\n        function () {\n          throw new Error('map is read-only');\n        };\n  } else if (obj instanceof Set) {\n    obj.add =\n      obj.clear =\n      obj.delete =\n        function () {\n          throw new Error('set is read-only');\n        };\n  }\n\n  // Freeze self\n  Object.freeze(obj);\n\n  Object.getOwnPropertyNames(obj).forEach((name) => {\n    const prop = obj[name];\n    const type = typeof prop;\n\n    // Freeze prop if it is an object or function and also not already frozen\n    if ((type === 'object' || type === 'function') && !Object.isFrozen(prop)) {\n      deepFreeze(prop);\n    }\n  });\n\n  return obj;\n}\n\n/** @typedef {import('highlight.js').CallbackResponse} CallbackResponse */\n/** @typedef {import('highlight.js').CompiledMode} CompiledMode */\n/** @implements CallbackResponse */\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n    this.isMatchIgnored = false;\n  }\n\n  ignoreMatch() {\n    this.isMatchIgnored = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit$1(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  // rarely we can have a sublanguage where language is undefined\n  // TODO: track down why\n  return !!node.scope;\n};\n\n/**\n *\n * @param {string} name\n * @param {{prefix:string}} options\n */\nconst scopeToCSSClass = (name, { prefix }) => {\n  // sub-language\n  if (name.startsWith(\"language:\")) {\n    return name.replace(\"language:\", \"language-\");\n  }\n  // tiered scope: comment.line\n  if (name.includes(\".\")) {\n    const pieces = name.split(\".\");\n    return [\n      `${prefix}${pieces.shift()}`,\n      ...(pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`))\n    ].join(\" \");\n  }\n  // simple scope\n  return `${prefix}${name}`;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    const className = scopeToCSSClass(node.scope,\n      { prefix: this.classPrefix });\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/** @typedef {import('highlight.js').Emitter} Emitter */\n/**  */\n\n/** @returns {DataNode} */\nconst newNode = (opts = {}) => {\n  /** @type DataNode */\n  const result = { children: [] };\n  Object.assign(result, opts);\n  return result;\n};\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = newNode();\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} scope */\n  openNode(scope) {\n    /** @type Node */\n    const node = newNode({ scope });\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addText(text)\n  - __addSublanguage(emitter, subLanguageName)\n  - startScope(scope)\n  - endScope()\n  - finalize()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /** @param {string} scope */\n  startScope(scope) {\n    this.openNode(scope);\n  }\n\n  endScope() {\n    this.closeNode();\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  __addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    if (name) node.scope = `language:${name}`;\n\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    this.closeAllNodes();\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(?:', re, ')*');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/**\n * @param {RegExp | string} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// BACKREF_RE matches an open parenthesis or backreference. To avoid\n// an incorrect parse, it additionally matches the following:\n// - [...] elements, where the meaning of parentheses and escapes change\n// - other escape sequences, so we do not misparse escape sequences as\n//   interesting elements\n// - non-matching or lookahead parentheses, which do not capture. These\n//   follow the '(' with a '?'.\nconst BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n\n// **INTERNAL** Not intended for outside usage\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {{joinWith: string}} opts\n * @returns {string}\n */\nfunction _rewriteBackreferences(regexps, { joinWith }) {\n  let numCaptures = 0;\n\n  return regexps.map((regex) => {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regex);\n    let out = '';\n\n    while (re.length > 0) {\n      const match = BACKREF_RE.exec(re);\n      if (!match) {\n        out += re;\n        break;\n      }\n      out += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        out += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        out += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    return out;\n  }).map(re => `(${re})`).join(joinWith);\n}\n\n/** @typedef {import('highlight.js').Mode} Mode */\n/** @typedef {import('highlight.js').ModeCallback} ModeCallback */\n\n// Common regexps\nconst MATCH_NOTHING_RE = /\\b\\B/;\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit$1({\n    scope: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  scope: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  scope: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit$1(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  scope: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  scope: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  scope: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    scope: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  scope: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  scope: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MATCH_NOTHING_RE: MATCH_NOTHING_RE,\n  IDENT_RE: IDENT_RE,\n  UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n  NUMBER_RE: NUMBER_RE,\n  C_NUMBER_RE: C_NUMBER_RE,\n  BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n  RE_STARTERS_RE: RE_STARTERS_RE,\n  SHEBANG: SHEBANG,\n  BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n  APOS_STRING_MODE: APOS_STRING_MODE,\n  QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n  PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n  COMMENT: COMMENT,\n  C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n  C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n  HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n  NUMBER_MODE: NUMBER_MODE,\n  C_NUMBER_MODE: C_NUMBER_MODE,\n  BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n  REGEXP_MODE: REGEXP_MODE,\n  TITLE_MODE: TITLE_MODE,\n  UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n  METHOD_GUARD: METHOD_GUARD,\n  END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n/**\n@typedef {import('highlight.js').CallbackResponse} CallbackResponse\n@typedef {import('highlight.js').CompilerExt} CompilerExt\n*/\n\n// Grammar extensions / plugins\n// See: https://github.com/highlightjs/highlight.js/issues/2833\n\n// Grammar extensions allow \"syntactic sugar\" to be added to the grammar modes\n// without requiring any underlying changes to the compiler internals.\n\n// `compileMatch` being the perfect small example of now allowing a grammar\n// author to write `match` when they desire to match a single expression rather\n// than being forced to use `begin`.  The extension then just moves `match` into\n// `begin` when it runs.  Ie, no features have been added, but we've just made\n// the experience of writing (and reading grammars) a little bit nicer.\n\n// ------\n\n// TODO: We need negative look-behind support to do this properly\n/**\n * Skip a match if it has a preceding dot\n *\n * This is used for `beginKeywords` to prevent matching expressions such as\n * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n * @param {RegExpMatchArray} match\n * @param {CallbackResponse} response\n */\nfunction skipIfHasPrecedingDot(match, response) {\n  const before = match.input[match.index - 1];\n  if (before === \".\") {\n    response.ignoreMatch();\n  }\n}\n\n/**\n *\n * @type {CompilerExt}\n */\nfunction scopeClassName(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.className !== undefined) {\n    mode.scope = mode.className;\n    delete mode.className;\n  }\n}\n\n/**\n * `beginKeywords` syntactic sugar\n * @type {CompilerExt}\n */\nfunction beginKeywords(mode, parent) {\n  if (!parent) return;\n  if (!mode.beginKeywords) return;\n\n  // for languages with keywords that include non-word characters checking for\n  // a word boundary is not sufficient, so instead we check for a word boundary\n  // or whitespace - this does no harm in any case since our keyword engine\n  // doesn't allow spaces in keywords anyways and we still check for the boundary\n  // first\n  mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n  mode.__beforeBegin = skipIfHasPrecedingDot;\n  mode.keywords = mode.keywords || mode.beginKeywords;\n  delete mode.beginKeywords;\n\n  // prevents double relevance, the keywords themselves provide\n  // relevance, the mode doesn't need to double it\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 0;\n}\n\n/**\n * Allow `illegal` to contain an array of illegal values\n * @type {CompilerExt}\n */\nfunction compileIllegal(mode, _parent) {\n  if (!Array.isArray(mode.illegal)) return;\n\n  mode.illegal = either(...mode.illegal);\n}\n\n/**\n * `match` to match a single expression for readability\n * @type {CompilerExt}\n */\nfunction compileMatch(mode, _parent) {\n  if (!mode.match) return;\n  if (mode.begin || mode.end) throw new Error(\"begin & end are not supported with match\");\n\n  mode.begin = mode.match;\n  delete mode.match;\n}\n\n/**\n * provides the default 1 relevance to all modes\n * @type {CompilerExt}\n */\nfunction compileRelevance(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 1;\n}\n\n// allow beforeMatch to act as a \"qualifier\" for the match\n// the full match begin must be [beforeMatch][begin]\nconst beforeMatchExt = (mode, parent) => {\n  if (!mode.beforeMatch) return;\n  // starts conflicts with endsParent which we need to make sure the child\n  // rule is not matched multiple times\n  if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n  const originalMode = Object.assign({}, mode);\n  Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n  mode.keywords = originalMode.keywords;\n  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n  mode.starts = {\n    relevance: 0,\n    contains: [\n      Object.assign(originalMode, { endsParent: true })\n    ]\n  };\n  mode.relevance = 0;\n\n  delete originalMode.beforeMatch;\n};\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\nconst DEFAULT_KEYWORD_SCOPE = \"keyword\";\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n  /** @type {import(\"highlight.js/private\").KeywordDict} */\n  const compiledKeywords = Object.create(null);\n\n  // input can be a string of keywords, an array of keywords, or a object with\n  // named keys representing scopeName (which can then point to a string or array)\n  if (typeof rawKeywords === 'string') {\n    compileList(scopeName, rawKeywords.split(\" \"));\n  } else if (Array.isArray(rawKeywords)) {\n    compileList(scopeName, rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(scopeName) {\n      // collapse all our objects back into the parent object\n      Object.assign(\n        compiledKeywords,\n        compileKeywords(rawKeywords[scopeName], caseInsensitive, scopeName)\n      );\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} scopeName\n   * @param {Array<string>} keywordList\n   */\n  function compileList(scopeName, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.map(x => x.toLowerCase());\n    }\n    keywordList.forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [scopeName, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\n/*\n\nFor the reasoning behind this please see:\nhttps://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419\n\n*/\n\n/**\n * @type {Record<string, boolean>}\n */\nconst seenDeprecations = {};\n\n/**\n * @param {string} message\n */\nconst error = (message) => {\n  console.error(message);\n};\n\n/**\n * @param {string} message\n * @param {any} args\n */\nconst warn = (message, ...args) => {\n  console.log(`WARN: ${message}`, ...args);\n};\n\n/**\n * @param {string} version\n * @param {string} message\n */\nconst deprecated = (version, message) => {\n  if (seenDeprecations[`${version}/${message}`]) return;\n\n  console.log(`Deprecated as of ${version}. ${message}`);\n  seenDeprecations[`${version}/${message}`] = true;\n};\n\n/* eslint-disable no-throw-literal */\n\n/**\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n*/\n\nconst MultiClassError = new Error();\n\n/**\n * Renumbers labeled scope names to account for additional inner match\n * groups that otherwise would break everything.\n *\n * Lets say we 3 match scopes:\n *\n *   { 1 => ..., 2 => ..., 3 => ... }\n *\n * So what we need is a clean match like this:\n *\n *   (a)(b)(c) => [ \"a\", \"b\", \"c\" ]\n *\n * But this falls apart with inner match groups:\n *\n * (a)(((b)))(c) => [\"a\", \"b\", \"b\", \"b\", \"c\" ]\n *\n * Our scopes are now \"out of alignment\" and we're repeating `b` 3 times.\n * What needs to happen is the numbers are remapped:\n *\n *   { 1 => ..., 2 => ..., 5 => ... }\n *\n * We also need to know that the ONLY groups that should be output\n * are 1, 2, and 5.  This function handles this behavior.\n *\n * @param {CompiledMode} mode\n * @param {Array<RegExp | string>} regexes\n * @param {{key: \"beginScope\"|\"endScope\"}} opts\n */\nfunction remapScopeNames(mode, regexes, { key }) {\n  let offset = 0;\n  const scopeNames = mode[key];\n  /** @type Record<number,boolean> */\n  const emit = {};\n  /** @type Record<number,string> */\n  const positions = {};\n\n  for (let i = 1; i <= regexes.length; i++) {\n    positions[i + offset] = scopeNames[i];\n    emit[i + offset] = true;\n    offset += countMatchGroups(regexes[i - 1]);\n  }\n  // we use _emit to keep track of which match groups are \"top-level\" to avoid double\n  // output from inside match groups\n  mode[key] = positions;\n  mode[key]._emit = emit;\n  mode[key]._multi = true;\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction beginMultiClass(mode) {\n  if (!Array.isArray(mode.begin)) return;\n\n  if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n    error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n    error(\"beginScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.begin, { key: \"beginScope\" });\n  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction endMultiClass(mode) {\n  if (!Array.isArray(mode.end)) return;\n\n  if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n    error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n    error(\"endScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.end, { key: \"endScope\" });\n  mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n}\n\n/**\n * this exists only to allow `scope: {}` to be used beside `match:`\n * Otherwise `beginScope` would necessary and that would look weird\n\n  {\n    match: [ /def/, /\\w+/ ]\n    scope: { 1: \"keyword\" , 2: \"title\" }\n  }\n\n * @param {CompiledMode} mode\n */\nfunction scopeSugar(mode) {\n  if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n    mode.beginScope = mode.scope;\n    delete mode.scope;\n  }\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction MultiClass(mode) {\n  scopeSugar(mode);\n\n  if (typeof mode.beginScope === \"string\") {\n    mode.beginScope = { _wrap: mode.beginScope };\n  }\n  if (typeof mode.endScope === \"string\") {\n    mode.endScope = { _wrap: mode.endScope };\n  }\n\n  beginMultiClass(mode);\n  endMultiClass(mode);\n}\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').CompiledLanguage} CompiledLanguage\n*/\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensitivity of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm'\n      + (language.case_insensitive ? 'i' : '')\n      + (language.unicodeRegex ? 'u' : '')\n      + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: '|' }), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminatorEnd) {\n      mm.addRule(mode.terminatorEnd, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.isCompiled) return cmode;\n\n    [\n      scopeClassName,\n      // do this early so compiler extensions generally don't have to worry about\n      // the distinction between match/begin\n      compileMatch,\n      MultiClass,\n      beforeMatchExt\n    ].forEach(ext => ext(mode, parent));\n\n    language.compilerExtensions.forEach(ext => ext(mode, parent));\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    [\n      beginKeywords,\n      // do this later so compiler extensions that come earlier have access to the\n      // raw array if they wanted to perhaps manipulate it, etc.\n      compileIllegal,\n      // default to 1 relevance if not specified\n      compileRelevance\n    ].forEach(ext => ext(mode, parent));\n\n    mode.isCompiled = true;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n      // we need a copy because keywords might be compiled multiple times\n      // so we can't go deleting $pattern from the original on the first\n      // pass\n      mode.keywords = Object.assign({}, mode.keywords);\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n    keywordPattern = keywordPattern || /\\w+/;\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    cmode.keywordPatternRe = langRe(keywordPattern, true);\n\n    if (parent) {\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(cmode.begin);\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(cmode.end);\n      cmode.terminatorEnd = source(cmode.end) || '';\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  if (!language.compilerExtensions) language.compilerExtensions = [];\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit$1(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cachedVariants) {\n    mode.cachedVariants = mode.variants.map(function(variant) {\n      return inherit$1(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cachedVariants) {\n    return mode.cachedVariants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit$1(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\nvar version = \"11.8.0\";\n\nclass HTMLInjectionError extends Error {\n  constructor(reason, html) {\n    super(reason);\n    this.name = \"HTMLInjectionError\";\n    this.html = html;\n  }\n}\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').CompiledScope} CompiledScope\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSApi} HLJSApi\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').PluginEvent} PluginEvent\n@typedef {import('highlight.js').HLJSOptions} HLJSOptions\n@typedef {import('highlight.js').LanguageFn} LanguageFn\n@typedef {import('highlight.js').HighlightedHTMLElement} HighlightedHTMLElement\n@typedef {import('highlight.js').BeforeHighlightContext} BeforeHighlightContext\n@typedef {import('highlight.js/private').MatchType} MatchType\n@typedef {import('highlight.js/private').KeywordData} KeywordData\n@typedef {import('highlight.js/private').EnhancedMatch} EnhancedMatch\n@typedef {import('highlight.js/private').AnnotatedError} AnnotatedError\n@typedef {import('highlight.js').AutoHighlightResult} AutoHighlightResult\n@typedef {import('highlight.js').HighlightOptions} HighlightOptions\n@typedef {import('highlight.js').HighlightResult} HighlightResult\n*/\n\n\nconst escape = escapeHTML;\nconst inherit = inherit$1;\nconst NO_MATCH = Symbol(\"nomatch\");\nconst MAX_KEYWORD_HITS = 7;\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    ignoreUnescapedHTML: false,\n    throwUnescapedHTML: false,\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    cssSelector: 'pre code',\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * OLD API\n   * highlight(lang, code, ignoreIllegals, continuation)\n   *\n   * NEW API\n   * highlight(code, {lang, ignoreIllegals})\n   *\n   * @param {string} codeOrLanguageName - the language to use for highlighting\n   * @param {string | HighlightOptions} optionsOrCode - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n    let code = \"\";\n    let languageName = \"\";\n    if (typeof optionsOrCode === \"object\") {\n      code = codeOrLanguageName;\n      ignoreIllegals = optionsOrCode.ignoreIllegals;\n      languageName = optionsOrCode.language;\n    } else {\n      // old API\n      deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n      deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n      languageName = codeOrLanguageName;\n      code = optionsOrCode;\n    }\n\n    // https://github.com/highlightjs/highlight.js/issues/3149\n    // eslint-disable-next-line no-undefined\n    if (ignoreIllegals === undefined) { ignoreIllegals = true; }\n\n    /** @type {BeforeHighlightContext} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result\n      ? context.result\n      : _highlight(context.language, context.code, ignoreIllegals);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} codeToHighlight - the code to highlight\n   * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode?} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n    const keywordHits = Object.create(null);\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {string} matchText - the textual match\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, matchText) {\n      return mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n        const data = keywordData(top, word);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          keywordHits[word] = (keywordHits[word] || 0) + 1;\n          if (keywordHits[word] <= MAX_KEYWORD_HITS) relevance += keywordRelevance;\n          if (kind.startsWith(\"_\")) {\n            // _ implied for relevance only, do not highlight\n            // by applying a class name\n            buf += match[0];\n          } else {\n            const cssClass = language.classNameAliases[kind] || kind;\n            emitKeyword(match[0], cssClass);\n          }\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substring(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result._top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.__addSublanguage(result._emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {string} text\n     * @param {string} scope\n     */\n    function emitKeyword(keyword, scope) {\n      if (keyword === \"\") return;\n\n      emitter.startScope(scope);\n      emitter.addText(keyword);\n      emitter.endScope();\n    }\n\n    /**\n     * @param {CompiledScope} scope\n     * @param {RegExpMatchArray} match\n     */\n    function emitMultiClass(scope, match) {\n      let i = 1;\n      const max = match.length - 1;\n      while (i <= max) {\n        if (!scope._emit[i]) { i++; continue; }\n        const klass = language.classNameAliases[scope[i]] || scope[i];\n        const text = match[i];\n        if (klass) {\n          emitKeyword(text, klass);\n        } else {\n          modeBuffer = text;\n          processKeywords();\n          modeBuffer = \"\";\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @param {CompiledMode} mode - new mode to start\n     * @param {RegExpMatchArray} match\n     */\n    function startNewMode(mode, match) {\n      if (mode.scope && typeof mode.scope === \"string\") {\n        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n      }\n      if (mode.beginScope) {\n        // beginScope just wraps the begin match itself in a scope\n        if (mode.beginScope._wrap) {\n          emitKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n          modeBuffer = \"\";\n        } else if (mode.beginScope._multi) {\n          // at this point modeBuffer should just be the match\n          emitMultiClass(mode.beginScope, match);\n          modeBuffer = \"\";\n        }\n      }\n\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.isMatchIgnored) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexes to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.isMatchIgnored) return doIgnore(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode, match);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substring(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (top.endScope && top.endScope._wrap) {\n        processBuffer();\n        emitKeyword(lexeme, top.endScope._wrap);\n      } else if (top.endScope && top.endScope._multi) {\n        processBuffer();\n        emitMultiClass(top.endScope, match);\n      } else if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.scope) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        startNewMode(endMode.starts, match);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.scope) {\n          list.unshift(current.scope);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error(`0 width match regex (${languageName})`);\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  An potential end match that was\n      triggered but could not be completed.  IE, `doEndMatch` returned NO_MATCH.\n      (this could be because a callback requests the match be ignored, etc)\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      if (!language.__emitTokens) {\n        top.matcher.considerAll();\n\n        for (;;) {\n          iterations++;\n          if (resumeScanAtSamePosition) {\n            // only regexes not matched previously will now be\n            // considered for a potential match\n            resumeScanAtSamePosition = false;\n          } else {\n            top.matcher.considerAll();\n          }\n          top.matcher.lastIndex = index;\n\n          const match = top.matcher.exec(codeToHighlight);\n          // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n          if (!match) break;\n\n          const beforeMatch = codeToHighlight.substring(index, match.index);\n          const processedCount = processLexeme(beforeMatch, match);\n          index = match.index + processedCount;\n        }\n        processLexeme(codeToHighlight.substring(index));\n      } else {\n        language.__emitTokens(codeToHighlight, emitter);\n      }\n\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        language: languageName,\n        value: result,\n        relevance,\n        illegal: false,\n        _emitter: emitter,\n        _top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: true,\n          relevance: 0,\n          _illegalBy: {\n            message: err.message,\n            index,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode,\n            resultSoFar: result\n          },\n          _emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: false,\n          relevance: 0,\n          errorRaised: err,\n          _emitter: emitter,\n          _top: top\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      value: escape(code),\n      illegal: false,\n      relevance: 0,\n      _top: PLAINTEXT_LANGUAGE,\n      _emitter: new options.__emitter(options)\n    };\n    result._emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - secondBest (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.secondBest = secondBest;\n\n    return result;\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {HTMLElement} element\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function updateClassName(element, currentLang, resultLang) {\n    const language = (currentLang && aliases[currentLang]) || resultLang;\n\n    element.classList.add(\"hljs\");\n    element.classList.add(`language-${language}`);\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightElement(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightElement\",\n      { el: element, language });\n\n    // we should be all text, no child nodes (unescaped HTML) - this is possibly\n    // an HTML injection attack - it's likely too late if this is already in\n    // production (the code has likely already done its damage by the time\n    // we're seeing it)... but we yell loudly about this so that hopefully it's\n    // more likely to be caught in development before making it to production\n    if (element.children.length > 0) {\n      if (!options.ignoreUnescapedHTML) {\n        console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n        console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\");\n        console.warn(\"The element with unescaped HTML:\");\n        console.warn(element);\n      }\n      if (options.throwUnescapedHTML) {\n        const err = new HTMLInjectionError(\n          \"One of your code blocks includes unescaped HTML.\",\n          element.innerHTML\n        );\n        throw err;\n      }\n    }\n\n    node = element;\n    const text = node.textContent;\n    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n\n    element.innerHTML = result.value;\n    updateClassName(element, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relevance: result.relevance\n    };\n    if (result.secondBest) {\n      element.secondBest = {\n        language: result.secondBest.language,\n        relevance: result.secondBest.relevance\n      };\n    }\n\n    fire(\"after:highlightElement\", { el: element, result, text });\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit(options, userOptions);\n  }\n\n  // TODO: remove v12, deprecated\n  const initHighlighting = () => {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n  };\n\n  // TODO: remove v12, deprecated\n  function initHighlightingOnLoad() {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n  }\n\n  let wantsHighlight = false;\n\n  /**\n   * auto-highlights all pre>code elements on the page\n   */\n  function highlightAll() {\n    // if we are called too early in the loading process\n    if (document.readyState === \"loading\") {\n      wantsHighlight = true;\n      return;\n    }\n\n    const blocks = document.querySelectorAll(options.cssSelector);\n    blocks.forEach(highlightElement);\n  }\n\n  function boot() {\n    // if a highlight was requested before DOM was loaded, do now\n    if (wantsHighlight) highlightAll();\n  }\n\n  // make sure we are in the browser environment\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('DOMContentLoaded', boot, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error$1) {\n      error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error$1; } else { error(error$1); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * Remove a language grammar module\n   *\n   * @param {string} languageName\n   */\n  function unregisterLanguage(languageName) {\n    delete languages[languageName];\n    for (const alias of Object.keys(aliases)) {\n      if (aliases[alias] === languageName) {\n        delete aliases[alias];\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * Upgrades the old highlightBlock plugins to the new\n   * highlightElement API\n   * @param {HLJSPlugin} plugin\n   */\n  function upgradePluginAPI(plugin) {\n    // TODO: remove with v12\n    if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n      plugin[\"before:highlightElement\"] = (data) => {\n        plugin[\"before:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n    if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n      plugin[\"after:highlightElement\"] = (data) => {\n        plugin[\"after:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    upgradePluginAPI(plugin);\n    plugins.push(plugin);\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function removePlugin(plugin) {\n    const index = plugins.indexOf(plugin);\n    if (index !== -1) {\n      plugins.splice(index, 1);\n    }\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n   * DEPRECATED\n   * @param {HighlightedHTMLElement} el\n   */\n  function deprecateHighlightBlock(el) {\n    deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n    deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n\n    return highlightElement(el);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    highlightAll,\n    highlightElement,\n    // TODO: Remove with v12 API\n    highlightBlock: deprecateHighlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    unregisterLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    autoDetection,\n    inherit,\n    addPlugin,\n    removePlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  hljs.regex = {\n    concat: concat,\n    lookahead: lookahead,\n    either: either,\n    optional: optional,\n    anyNumberOfTimes: anyNumberOfTimes\n  };\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexes into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// Other names for the variable may break build script\nconst highlight = HLJS({});\n\n// returns a new instance of the highlighter to be used for extensions\n// check https://github.com/wooorm/lowlight/issues/47\nhighlight.newInstance = () => HLJS({});\n\nmodule.exports = highlight;\nhighlight.HighlightJS = highlight;\nhighlight.default = highlight;\n","/** @type {import('./index.js').Schema} */\nexport const defaultSchema = {\n  strip: ['script'],\n  clobberPrefix: 'user-content-',\n  clobber: ['name', 'id'],\n  ancestors: {\n    tbody: ['table'],\n    tfoot: ['table'],\n    thead: ['table'],\n    td: ['table'],\n    th: ['table'],\n    tr: ['table']\n  },\n  protocols: {\n    href: ['http', 'https', 'mailto', 'xmpp', 'irc', 'ircs'],\n    cite: ['http', 'https'],\n    src: ['http', 'https'],\n    longDesc: ['http', 'https']\n  },\n  tagNames: [\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'br',\n    'b',\n    'i',\n    'strong',\n    'em',\n    'a',\n    'pre',\n    'code',\n    'img',\n    'tt',\n    'div',\n    'ins',\n    'del',\n    'sup',\n    'sub',\n    'p',\n    'ol',\n    'ul',\n    'table',\n    'thead',\n    'tbody',\n    'tfoot',\n    'blockquote',\n    'dl',\n    'dt',\n    'dd',\n    'kbd',\n    'q',\n    'samp',\n    'var',\n    'hr',\n    'ruby',\n    'rt',\n    'rp',\n    'li',\n    'tr',\n    'td',\n    'th',\n    's',\n    'strike',\n    'summary',\n    'details',\n    'caption',\n    'figure',\n    'figcaption',\n    'abbr',\n    'bdo',\n    'cite',\n    'dfn',\n    'mark',\n    'small',\n    'span',\n    'time',\n    'wbr',\n    'input'\n  ],\n  attributes: {\n    a: ['href'],\n    img: ['src', 'longDesc'],\n    input: [\n      ['type', 'checkbox'],\n      ['disabled', true]\n    ],\n    li: [['className', 'task-list-item']],\n    div: ['itemScope', 'itemType'],\n    blockquote: ['cite'],\n    del: ['cite'],\n    ins: ['cite'],\n    q: ['cite'],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'ariaDescribedBy',\n      'ariaHidden',\n      'ariaLabel',\n      'ariaLabelledBy',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'cols',\n      'colSpan',\n      'color',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      'disabled',\n      'encType',\n      'htmlFor',\n      'frame',\n      'headers',\n      'height',\n      'hrefLang',\n      'hSpace',\n      'isMap',\n      'id',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rel',\n      'rev',\n      'rows',\n      'rowSpan',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'target',\n      'title',\n      'type',\n      'useMap',\n      'vAlign',\n      'value',\n      'vSpace',\n      'width',\n      'itemProp'\n    ]\n  },\n  required: {\n    input: {\n      type: 'checkbox',\n      disabled: true\n    }\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cPlusPlus(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [ '_Pragma' ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: { 'function.dispatch': 'built_in' },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\n/*\nLanguage: Arduino\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\nDescription: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.\nWebsite: https://www.arduino.cc\n*/\n\n/** @type LanguageFn */\nfunction arduino(hljs) {\n  const ARDUINO_KW = {\n    type: [\n      \"boolean\",\n      \"byte\",\n      \"word\",\n      \"String\"\n    ],\n    built_in: [\n      \"KeyboardController\",\n      \"MouseController\",\n      \"SoftwareSerial\",\n      \"EthernetServer\",\n      \"EthernetClient\",\n      \"LiquidCrystal\",\n      \"RobotControl\",\n      \"GSMVoiceCall\",\n      \"EthernetUDP\",\n      \"EsploraTFT\",\n      \"HttpClient\",\n      \"RobotMotor\",\n      \"WiFiClient\",\n      \"GSMScanner\",\n      \"FileSystem\",\n      \"Scheduler\",\n      \"GSMServer\",\n      \"YunClient\",\n      \"YunServer\",\n      \"IPAddress\",\n      \"GSMClient\",\n      \"GSMModem\",\n      \"Keyboard\",\n      \"Ethernet\",\n      \"Console\",\n      \"GSMBand\",\n      \"Esplora\",\n      \"Stepper\",\n      \"Process\",\n      \"WiFiUDP\",\n      \"GSM_SMS\",\n      \"Mailbox\",\n      \"USBHost\",\n      \"Firmata\",\n      \"PImage\",\n      \"Client\",\n      \"Server\",\n      \"GSMPIN\",\n      \"FileIO\",\n      \"Bridge\",\n      \"Serial\",\n      \"EEPROM\",\n      \"Stream\",\n      \"Mouse\",\n      \"Audio\",\n      \"Servo\",\n      \"File\",\n      \"Task\",\n      \"GPRS\",\n      \"WiFi\",\n      \"Wire\",\n      \"TFT\",\n      \"GSM\",\n      \"SPI\",\n      \"SD\"\n    ],\n    _hints: [\n      \"setup\",\n      \"loop\",\n      \"runShellCommandAsynchronously\",\n      \"analogWriteResolution\",\n      \"retrieveCallingNumber\",\n      \"printFirmwareVersion\",\n      \"analogReadResolution\",\n      \"sendDigitalPortPair\",\n      \"noListenOnLocalhost\",\n      \"readJoystickButton\",\n      \"setFirmwareVersion\",\n      \"readJoystickSwitch\",\n      \"scrollDisplayRight\",\n      \"getVoiceCallStatus\",\n      \"scrollDisplayLeft\",\n      \"writeMicroseconds\",\n      \"delayMicroseconds\",\n      \"beginTransmission\",\n      \"getSignalStrength\",\n      \"runAsynchronously\",\n      \"getAsynchronously\",\n      \"listenOnLocalhost\",\n      \"getCurrentCarrier\",\n      \"readAccelerometer\",\n      \"messageAvailable\",\n      \"sendDigitalPorts\",\n      \"lineFollowConfig\",\n      \"countryNameWrite\",\n      \"runShellCommand\",\n      \"readStringUntil\",\n      \"rewindDirectory\",\n      \"readTemperature\",\n      \"setClockDivider\",\n      \"readLightSensor\",\n      \"endTransmission\",\n      \"analogReference\",\n      \"detachInterrupt\",\n      \"countryNameRead\",\n      \"attachInterrupt\",\n      \"encryptionType\",\n      \"readBytesUntil\",\n      \"robotNameWrite\",\n      \"readMicrophone\",\n      \"robotNameRead\",\n      \"cityNameWrite\",\n      \"userNameWrite\",\n      \"readJoystickY\",\n      \"readJoystickX\",\n      \"mouseReleased\",\n      \"openNextFile\",\n      \"scanNetworks\",\n      \"noInterrupts\",\n      \"digitalWrite\",\n      \"beginSpeaker\",\n      \"mousePressed\",\n      \"isActionDone\",\n      \"mouseDragged\",\n      \"displayLogos\",\n      \"noAutoscroll\",\n      \"addParameter\",\n      \"remoteNumber\",\n      \"getModifiers\",\n      \"keyboardRead\",\n      \"userNameRead\",\n      \"waitContinue\",\n      \"processInput\",\n      \"parseCommand\",\n      \"printVersion\",\n      \"readNetworks\",\n      \"writeMessage\",\n      \"blinkVersion\",\n      \"cityNameRead\",\n      \"readMessage\",\n      \"setDataMode\",\n      \"parsePacket\",\n      \"isListening\",\n      \"setBitOrder\",\n      \"beginPacket\",\n      \"isDirectory\",\n      \"motorsWrite\",\n      \"drawCompass\",\n      \"digitalRead\",\n      \"clearScreen\",\n      \"serialEvent\",\n      \"rightToLeft\",\n      \"setTextSize\",\n      \"leftToRight\",\n      \"requestFrom\",\n      \"keyReleased\",\n      \"compassRead\",\n      \"analogWrite\",\n      \"interrupts\",\n      \"WiFiServer\",\n      \"disconnect\",\n      \"playMelody\",\n      \"parseFloat\",\n      \"autoscroll\",\n      \"getPINUsed\",\n      \"setPINUsed\",\n      \"setTimeout\",\n      \"sendAnalog\",\n      \"readSlider\",\n      \"analogRead\",\n      \"beginWrite\",\n      \"createChar\",\n      \"motorsStop\",\n      \"keyPressed\",\n      \"tempoWrite\",\n      \"readButton\",\n      \"subnetMask\",\n      \"debugPrint\",\n      \"macAddress\",\n      \"writeGreen\",\n      \"randomSeed\",\n      \"attachGPRS\",\n      \"readString\",\n      \"sendString\",\n      \"remotePort\",\n      \"releaseAll\",\n      \"mouseMoved\",\n      \"background\",\n      \"getXChange\",\n      \"getYChange\",\n      \"answerCall\",\n      \"getResult\",\n      \"voiceCall\",\n      \"endPacket\",\n      \"constrain\",\n      \"getSocket\",\n      \"writeJSON\",\n      \"getButton\",\n      \"available\",\n      \"connected\",\n      \"findUntil\",\n      \"readBytes\",\n      \"exitValue\",\n      \"readGreen\",\n      \"writeBlue\",\n      \"startLoop\",\n      \"IPAddress\",\n      \"isPressed\",\n      \"sendSysex\",\n      \"pauseMode\",\n      \"gatewayIP\",\n      \"setCursor\",\n      \"getOemKey\",\n      \"tuneWrite\",\n      \"noDisplay\",\n      \"loadImage\",\n      \"switchPIN\",\n      \"onRequest\",\n      \"onReceive\",\n      \"changePIN\",\n      \"playFile\",\n      \"noBuffer\",\n      \"parseInt\",\n      \"overflow\",\n      \"checkPIN\",\n      \"knobRead\",\n      \"beginTFT\",\n      \"bitClear\",\n      \"updateIR\",\n      \"bitWrite\",\n      \"position\",\n      \"writeRGB\",\n      \"highByte\",\n      \"writeRed\",\n      \"setSpeed\",\n      \"readBlue\",\n      \"noStroke\",\n      \"remoteIP\",\n      \"transfer\",\n      \"shutdown\",\n      \"hangCall\",\n      \"beginSMS\",\n      \"endWrite\",\n      \"attached\",\n      \"maintain\",\n      \"noCursor\",\n      \"checkReg\",\n      \"checkPUK\",\n      \"shiftOut\",\n      \"isValid\",\n      \"shiftIn\",\n      \"pulseIn\",\n      \"connect\",\n      \"println\",\n      \"localIP\",\n      \"pinMode\",\n      \"getIMEI\",\n      \"display\",\n      \"noBlink\",\n      \"process\",\n      \"getBand\",\n      \"running\",\n      \"beginSD\",\n      \"drawBMP\",\n      \"lowByte\",\n      \"setBand\",\n      \"release\",\n      \"bitRead\",\n      \"prepare\",\n      \"pointTo\",\n      \"readRed\",\n      \"setMode\",\n      \"noFill\",\n      \"remove\",\n      \"listen\",\n      \"stroke\",\n      \"detach\",\n      \"attach\",\n      \"noTone\",\n      \"exists\",\n      \"buffer\",\n      \"height\",\n      \"bitSet\",\n      \"circle\",\n      \"config\",\n      \"cursor\",\n      \"random\",\n      \"IRread\",\n      \"setDNS\",\n      \"endSMS\",\n      \"getKey\",\n      \"micros\",\n      \"millis\",\n      \"begin\",\n      \"print\",\n      \"write\",\n      \"ready\",\n      \"flush\",\n      \"width\",\n      \"isPIN\",\n      \"blink\",\n      \"clear\",\n      \"press\",\n      \"mkdir\",\n      \"rmdir\",\n      \"close\",\n      \"point\",\n      \"yield\",\n      \"image\",\n      \"BSSID\",\n      \"click\",\n      \"delay\",\n      \"read\",\n      \"text\",\n      \"move\",\n      \"peek\",\n      \"beep\",\n      \"rect\",\n      \"line\",\n      \"open\",\n      \"seek\",\n      \"fill\",\n      \"size\",\n      \"turn\",\n      \"stop\",\n      \"home\",\n      \"find\",\n      \"step\",\n      \"tone\",\n      \"sqrt\",\n      \"RSSI\",\n      \"SSID\",\n      \"end\",\n      \"bit\",\n      \"tan\",\n      \"cos\",\n      \"sin\",\n      \"pow\",\n      \"map\",\n      \"abs\",\n      \"max\",\n      \"min\",\n      \"get\",\n      \"run\",\n      \"put\"\n    ],\n    literal: [\n      \"DIGITAL_MESSAGE\",\n      \"FIRMATA_STRING\",\n      \"ANALOG_MESSAGE\",\n      \"REPORT_DIGITAL\",\n      \"REPORT_ANALOG\",\n      \"INPUT_PULLUP\",\n      \"SET_PIN_MODE\",\n      \"INTERNAL2V56\",\n      \"SYSTEM_RESET\",\n      \"LED_BUILTIN\",\n      \"INTERNAL1V1\",\n      \"SYSEX_START\",\n      \"INTERNAL\",\n      \"EXTERNAL\",\n      \"DEFAULT\",\n      \"OUTPUT\",\n      \"INPUT\",\n      \"HIGH\",\n      \"LOW\"\n    ]\n  };\n\n  const ARDUINO = cPlusPlus(hljs);\n\n  const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);\n\n  kws.type = [\n    ...kws.type,\n    ...ARDUINO_KW.type\n  ];\n  kws.literal = [\n    ...kws.literal,\n    ...ARDUINO_KW.literal\n  ];\n  kws.built_in = [\n    ...kws.built_in,\n    ...ARDUINO_KW.built_in\n  ];\n  kws._hints = ARDUINO_KW._hints;\n\n  ARDUINO.name = 'Arduino';\n  ARDUINO.aliases = [ 'ino' ];\n  ARDUINO.supersetOf = \"cpp\";\n\n  return ARDUINO;\n}\n\nexport { arduino as default };\n","/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const regex = hljs.regex;\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR, {\n    className: 'variable',\n    variants: [\n      { begin: regex.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![\\\\w\\\\d])(?![$])`) },\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/,\n    end: /\\)/,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: { contains: [\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(\\w+)/,\n        end: /(\\w+)/,\n        className: 'string'\n      })\n    ] }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$?\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      {\n        begin: /\\d+#[0-9a-f]+/,\n        className: \"number\"\n      },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [ hljs.inherit(hljs.TITLE_MODE, { begin: /\\w[\\w\\d_]*/ }) ],\n    relevance: 0\n  };\n\n  const KEYWORDS = [\n    \"if\",\n    \"then\",\n    \"else\",\n    \"elif\",\n    \"fi\",\n    \"for\",\n    \"while\",\n    \"until\",\n    \"in\",\n    \"do\",\n    \"done\",\n    \"case\",\n    \"esac\",\n    \"function\",\n    \"select\"\n  ];\n\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n\n  // to consume paths to prevent keyword matches inside them\n  const PATH_MODE = { match: /(\\/[a-z._-]+)+/ };\n\n  // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n  const SHELL_BUILT_INS = [\n    \"break\",\n    \"cd\",\n    \"continue\",\n    \"eval\",\n    \"exec\",\n    \"exit\",\n    \"export\",\n    \"getopts\",\n    \"hash\",\n    \"pwd\",\n    \"readonly\",\n    \"return\",\n    \"shift\",\n    \"test\",\n    \"times\",\n    \"trap\",\n    \"umask\",\n    \"unset\"\n  ];\n\n  const BASH_BUILT_INS = [\n    \"alias\",\n    \"bind\",\n    \"builtin\",\n    \"caller\",\n    \"command\",\n    \"declare\",\n    \"echo\",\n    \"enable\",\n    \"help\",\n    \"let\",\n    \"local\",\n    \"logout\",\n    \"mapfile\",\n    \"printf\",\n    \"read\",\n    \"readarray\",\n    \"source\",\n    \"type\",\n    \"typeset\",\n    \"ulimit\",\n    \"unalias\"\n  ];\n\n  const ZSH_BUILT_INS = [\n    \"autoload\",\n    \"bg\",\n    \"bindkey\",\n    \"bye\",\n    \"cap\",\n    \"chdir\",\n    \"clone\",\n    \"comparguments\",\n    \"compcall\",\n    \"compctl\",\n    \"compdescribe\",\n    \"compfiles\",\n    \"compgroups\",\n    \"compquote\",\n    \"comptags\",\n    \"comptry\",\n    \"compvalues\",\n    \"dirs\",\n    \"disable\",\n    \"disown\",\n    \"echotc\",\n    \"echoti\",\n    \"emulate\",\n    \"fc\",\n    \"fg\",\n    \"float\",\n    \"functions\",\n    \"getcap\",\n    \"getln\",\n    \"history\",\n    \"integer\",\n    \"jobs\",\n    \"kill\",\n    \"limit\",\n    \"log\",\n    \"noglob\",\n    \"popd\",\n    \"print\",\n    \"pushd\",\n    \"pushln\",\n    \"rehash\",\n    \"sched\",\n    \"setcap\",\n    \"setopt\",\n    \"stat\",\n    \"suspend\",\n    \"ttyctl\",\n    \"unfunction\",\n    \"unhash\",\n    \"unlimit\",\n    \"unsetopt\",\n    \"vared\",\n    \"wait\",\n    \"whence\",\n    \"where\",\n    \"which\",\n    \"zcompile\",\n    \"zformat\",\n    \"zftp\",\n    \"zle\",\n    \"zmodload\",\n    \"zparseopts\",\n    \"zprof\",\n    \"zpty\",\n    \"zregexparse\",\n    \"zsocket\",\n    \"zstyle\",\n    \"ztcp\"\n  ];\n\n  const GNU_CORE_UTILS = [\n    \"chcon\",\n    \"chgrp\",\n    \"chown\",\n    \"chmod\",\n    \"cp\",\n    \"dd\",\n    \"df\",\n    \"dir\",\n    \"dircolors\",\n    \"ln\",\n    \"ls\",\n    \"mkdir\",\n    \"mkfifo\",\n    \"mknod\",\n    \"mktemp\",\n    \"mv\",\n    \"realpath\",\n    \"rm\",\n    \"rmdir\",\n    \"shred\",\n    \"sync\",\n    \"touch\",\n    \"truncate\",\n    \"vdir\",\n    \"b2sum\",\n    \"base32\",\n    \"base64\",\n    \"cat\",\n    \"cksum\",\n    \"comm\",\n    \"csplit\",\n    \"cut\",\n    \"expand\",\n    \"fmt\",\n    \"fold\",\n    \"head\",\n    \"join\",\n    \"md5sum\",\n    \"nl\",\n    \"numfmt\",\n    \"od\",\n    \"paste\",\n    \"ptx\",\n    \"pr\",\n    \"sha1sum\",\n    \"sha224sum\",\n    \"sha256sum\",\n    \"sha384sum\",\n    \"sha512sum\",\n    \"shuf\",\n    \"sort\",\n    \"split\",\n    \"sum\",\n    \"tac\",\n    \"tail\",\n    \"tr\",\n    \"tsort\",\n    \"unexpand\",\n    \"uniq\",\n    \"wc\",\n    \"arch\",\n    \"basename\",\n    \"chroot\",\n    \"date\",\n    \"dirname\",\n    \"du\",\n    \"echo\",\n    \"env\",\n    \"expr\",\n    \"factor\",\n    // \"false\", // keyword literal already\n    \"groups\",\n    \"hostid\",\n    \"id\",\n    \"link\",\n    \"logname\",\n    \"nice\",\n    \"nohup\",\n    \"nproc\",\n    \"pathchk\",\n    \"pinky\",\n    \"printenv\",\n    \"printf\",\n    \"pwd\",\n    \"readlink\",\n    \"runcon\",\n    \"seq\",\n    \"sleep\",\n    \"stat\",\n    \"stdbuf\",\n    \"stty\",\n    \"tee\",\n    \"test\",\n    \"timeout\",\n    // \"true\", // keyword literal already\n    \"tty\",\n    \"uname\",\n    \"unlink\",\n    \"uptime\",\n    \"users\",\n    \"who\",\n    \"whoami\",\n    \"yes\"\n  ];\n\n  return {\n    name: 'Bash',\n    aliases: [ 'sh' ],\n    keywords: {\n      $pattern: /\\b[a-z][a-z0-9._-]+\\b/,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: [\n        ...SHELL_BUILT_INS,\n        ...BASH_BUILT_INS,\n        // Shell modifiers\n        \"set\",\n        \"shopt\",\n        ...ZSH_BUILT_INS,\n        ...GNU_CORE_UTILS\n      ]\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      HERE_DOC,\n      PATH_MODE,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nexport { bash as default };\n","/*\nLanguage: C\nCategory: common, system\nWebsite: https://en.wikipedia.org/wiki/C_(programming_language)\n*/\n\n/** @type LanguageFn */\nfunction c(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n\n  const TYPES = {\n    className: 'type',\n    variants: [\n      { begin: '\\\\b[a-z\\\\d_]*_t\\\\b' },\n      { match: /\\batomic_[a-z]{3,6}\\b/ }\n    ]\n\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + \"|.)\",\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  const C_KEYWORDS = [\n    \"asm\",\n    \"auto\",\n    \"break\",\n    \"case\",\n    \"continue\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"for\",\n    \"fortran\",\n    \"goto\",\n    \"if\",\n    \"inline\",\n    \"register\",\n    \"restrict\",\n    \"return\",\n    \"sizeof\",\n    \"struct\",\n    \"switch\",\n    \"typedef\",\n    \"union\",\n    \"volatile\",\n    \"while\",\n    \"_Alignas\",\n    \"_Alignof\",\n    \"_Atomic\",\n    \"_Generic\",\n    \"_Noreturn\",\n    \"_Static_assert\",\n    \"_Thread_local\",\n    // aliases\n    \"alignas\",\n    \"alignof\",\n    \"noreturn\",\n    \"static_assert\",\n    \"thread_local\",\n    // not a C keyword but is, for all intents and purposes, treated exactly like one.\n    \"_Pragma\"\n  ];\n\n  const C_TYPES = [\n    \"float\",\n    \"double\",\n    \"signed\",\n    \"unsigned\",\n    \"int\",\n    \"short\",\n    \"long\",\n    \"char\",\n    \"void\",\n    \"_Bool\",\n    \"_Complex\",\n    \"_Imaginary\",\n    \"_Decimal32\",\n    \"_Decimal64\",\n    \"_Decimal128\",\n    // modifiers\n    \"const\",\n    \"static\",\n    // aliases\n    \"complex\",\n    \"bool\",\n    \"imaginary\"\n  ];\n\n  const KEYWORDS = {\n    keyword: C_KEYWORDS,\n    type: C_TYPES,\n    literal: 'true false NULL',\n    // TODO: apply hinting work similar to what was done in cpp.js\n    built_in: 'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream '\n      + 'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set '\n      + 'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos '\n      + 'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp '\n      + 'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper '\n      + 'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow '\n      + 'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp '\n      + 'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan '\n      + 'vfprintf vprintf vsprintf endl initializer_list unique_ptr',\n  };\n\n  const EXPRESSION_CONTAINS = [\n    PREPROCESSOR,\n    TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ hljs.inherit(TITLE_MODE, { className: \"title.function\" }) ],\n        relevance: 0\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              TYPES\n            ]\n          }\n        ]\n      },\n      TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: \"C\",\n    aliases: [ 'h' ],\n    keywords: KEYWORDS,\n    // Until differentiations are added between `c` and `cpp`, `c` will\n    // not be auto-detected to avoid auto-detect conflicts between C and C++\n    disableAutodetect: true,\n    illegal: '</',\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: KEYWORDS\n        },\n        {\n          className: 'class',\n          beginKeywords: 'enum class struct union',\n          end: /[{;:<>=]/,\n          contains: [\n            { beginKeywords: \"final class struct\" },\n            hljs.TITLE_MODE\n          ]\n        }\n      ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: KEYWORDS\n    }\n  };\n}\n\nexport { c as default };\n","/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cpp(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [ '_Pragma' ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: { 'function.dispatch': 'built_in' },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\nexport { cpp as default };\n","/*\nLanguage: C#\nAuthor: Jason Diamond <jason@diamond.name>\nContributor: Nicolas LLOBERA <nllobera@gmail.com>, Pieter Vantorre <pietervantorre@gmail.com>, David Pine <david.pine@microsoft.com>\nWebsite: https://docs.microsoft.com/dotnet/csharp/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction csharp(hljs) {\n  const BUILT_IN_KEYWORDS = [\n    'bool',\n    'byte',\n    'char',\n    'decimal',\n    'delegate',\n    'double',\n    'dynamic',\n    'enum',\n    'float',\n    'int',\n    'long',\n    'nint',\n    'nuint',\n    'object',\n    'sbyte',\n    'short',\n    'string',\n    'ulong',\n    'uint',\n    'ushort'\n  ];\n  const FUNCTION_MODIFIERS = [\n    'public',\n    'private',\n    'protected',\n    'static',\n    'internal',\n    'protected',\n    'abstract',\n    'async',\n    'extern',\n    'override',\n    'unsafe',\n    'virtual',\n    'new',\n    'sealed',\n    'partial'\n  ];\n  const LITERAL_KEYWORDS = [\n    'default',\n    'false',\n    'null',\n    'true'\n  ];\n  const NORMAL_KEYWORDS = [\n    'abstract',\n    'as',\n    'base',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'const',\n    'continue',\n    'do',\n    'else',\n    'event',\n    'explicit',\n    'extern',\n    'finally',\n    'fixed',\n    'for',\n    'foreach',\n    'goto',\n    'if',\n    'implicit',\n    'in',\n    'interface',\n    'internal',\n    'is',\n    'lock',\n    'namespace',\n    'new',\n    'operator',\n    'out',\n    'override',\n    'params',\n    'private',\n    'protected',\n    'public',\n    'readonly',\n    'record',\n    'ref',\n    'return',\n    'scoped',\n    'sealed',\n    'sizeof',\n    'stackalloc',\n    'static',\n    'struct',\n    'switch',\n    'this',\n    'throw',\n    'try',\n    'typeof',\n    'unchecked',\n    'unsafe',\n    'using',\n    'virtual',\n    'void',\n    'volatile',\n    'while'\n  ];\n  const CONTEXTUAL_KEYWORDS = [\n    'add',\n    'alias',\n    'and',\n    'ascending',\n    'async',\n    'await',\n    'by',\n    'descending',\n    'equals',\n    'from',\n    'get',\n    'global',\n    'group',\n    'init',\n    'into',\n    'join',\n    'let',\n    'nameof',\n    'not',\n    'notnull',\n    'on',\n    'or',\n    'orderby',\n    'partial',\n    'remove',\n    'select',\n    'set',\n    'unmanaged',\n    'value|0',\n    'var',\n    'when',\n    'where',\n    'with',\n    'yield'\n  ];\n\n  const KEYWORDS = {\n    keyword: NORMAL_KEYWORDS.concat(CONTEXTUAL_KEYWORDS),\n    built_in: BUILT_IN_KEYWORDS,\n    literal: LITERAL_KEYWORDS\n  };\n  const TITLE_MODE = hljs.inherit(hljs.TITLE_MODE, { begin: '[a-zA-Z](\\\\.?\\\\w)*' });\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n  const VERBATIM_STRING = {\n    className: 'string',\n    begin: '@\"',\n    end: '\"',\n    contains: [ { begin: '\"\"' } ]\n  };\n  const VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, { illegal: /\\n/ });\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS\n  };\n  const SUBST_NO_LF = hljs.inherit(SUBST, { illegal: /\\n/ });\n  const INTERPOLATED_STRING = {\n    className: 'string',\n    begin: /\\$\"/,\n    end: '\"',\n    illegal: /\\n/,\n    contains: [\n      { begin: /\\{\\{/ },\n      { begin: /\\}\\}/ },\n      hljs.BACKSLASH_ESCAPE,\n      SUBST_NO_LF\n    ]\n  };\n  const INTERPOLATED_VERBATIM_STRING = {\n    className: 'string',\n    begin: /\\$@\"/,\n    end: '\"',\n    contains: [\n      { begin: /\\{\\{/ },\n      { begin: /\\}\\}/ },\n      { begin: '\"\"' },\n      SUBST\n    ]\n  };\n  const INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(INTERPOLATED_VERBATIM_STRING, {\n    illegal: /\\n/,\n    contains: [\n      { begin: /\\{\\{/ },\n      { begin: /\\}\\}/ },\n      { begin: '\"\"' },\n      SUBST_NO_LF\n    ]\n  });\n  SUBST.contains = [\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.C_BLOCK_COMMENT_MODE\n  ];\n  SUBST_NO_LF.contains = [\n    INTERPOLATED_VERBATIM_STRING_NO_LF,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING_NO_LF,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, { illegal: /\\n/ })\n  ];\n  const STRING = { variants: [\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ] };\n\n  const GENERIC_MODIFIER = {\n    begin: \"<\",\n    end: \">\",\n    contains: [\n      { beginKeywords: \"in out\" },\n      TITLE_MODE\n    ]\n  };\n  const TYPE_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '(\\\\s*,\\\\s*' + hljs.IDENT_RE + ')*>)?(\\\\[\\\\])?';\n  const AT_IDENTIFIER = {\n    // prevents expressions like `@class` from incorrect flagging\n    // `class` as a keyword\n    begin: \"@\" + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  return {\n    name: 'C#',\n    aliases: [\n      'cs',\n      'c#'\n    ],\n    keywords: KEYWORDS,\n    illegal: /::/,\n    contains: [\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'doctag',\n              variants: [\n                {\n                  begin: '///',\n                  relevance: 0\n                },\n                { begin: '<!--|-->' },\n                {\n                  begin: '</?',\n                  end: '>'\n                }\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: '#',\n        end: '$',\n        keywords: { keyword: 'if else elif endif define undef warning error line region endregion pragma checksum' }\n      },\n      STRING,\n      NUMBERS,\n      {\n        beginKeywords: 'class interface',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:,]/,\n        contains: [\n          { beginKeywords: \"where class\" },\n          TITLE_MODE,\n          GENERIC_MODIFIER,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          TITLE_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'record',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          TITLE_MODE,\n          GENERIC_MODIFIER,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // [Attributes(\"\")]\n        className: 'meta',\n        begin: '^\\\\s*\\\\[(?=[\\\\w])',\n        excludeBegin: true,\n        end: '\\\\]',\n        excludeEnd: true,\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new return throw await else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + TYPE_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*(<[^=]+>\\\\s*)?\\\\(',\n        returnBegin: true,\n        end: /\\s*[{;=]/,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          // prevents these from being highlighted `title`\n          {\n            beginKeywords: FUNCTION_MODIFIERS.join(\" \"),\n            relevance: 0\n          },\n          {\n            begin: hljs.IDENT_RE + '\\\\s*(<[^=]+>\\\\s*)?\\\\(',\n            returnBegin: true,\n            contains: [\n              hljs.TITLE_MODE,\n              GENERIC_MODIFIER\n            ],\n            relevance: 0\n          },\n          { match: /\\(\\)/ },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              STRING,\n              NUMBERS,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      AT_IDENTIFIER\n    ]\n  };\n}\n\nexport { csharp as default };\n","const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n    HEXCOLOR: {\n      scope: 'number',\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n    },\n    FUNCTION_DISPATCH: {\n      className: \"built_in\",\n      begin: /[\\w-]+(?=\\()/\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'p',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n];\n\nconst ATTRIBUTES = [\n  'align-content',\n  'align-items',\n  'align-self',\n  'all',\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-repeat',\n  'background-size',\n  'block-size',\n  'border',\n  'border-block',\n  'border-block-color',\n  'border-block-end',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-block-style',\n  'border-block-width',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline',\n  'border-inline-color',\n  'border-inline-end',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-inline-style',\n  'border-inline-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'contain',\n  'content',\n  'content-visibility',\n  'counter-increment',\n  'counter-reset',\n  'cue',\n  'cue-after',\n  'cue-before',\n  'cursor',\n  'direction',\n  'display',\n  'empty-cells',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'flow',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-size',\n  'font-size-adjust',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-variant',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'gap',\n  'glyph-orientation-vertical',\n  'grid',\n  'grid-area',\n  'grid-auto-columns',\n  'grid-auto-flow',\n  'grid-auto-rows',\n  'grid-column',\n  'grid-column-end',\n  'grid-column-start',\n  'grid-gap',\n  'grid-row',\n  'grid-row-end',\n  'grid-row-start',\n  'grid-template',\n  'grid-template-areas',\n  'grid-template-columns',\n  'grid-template-rows',\n  'hanging-punctuation',\n  'height',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'inline-size',\n  'isolation',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-break',\n  'line-height',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-block',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'marks',\n  'mask',\n  'mask-border',\n  'mask-border-mode',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-border-slice',\n  'mask-border-source',\n  'mask-border-width',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'min-block-size',\n  'min-height',\n  'min-inline-size',\n  'min-width',\n  'mix-blend-mode',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'padding',\n  'padding-block',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'pause',\n  'pause-after',\n  'pause-before',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'position',\n  'quotes',\n  'resize',\n  'rest',\n  'rest-after',\n  'rest-before',\n  'right',\n  'row-gap',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-stop',\n  'scroll-snap-type',\n  'scrollbar-color',\n  'scrollbar-gutter',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'speak',\n  'speak-as',\n  'src', // @font-face\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-all',\n  'text-align-last',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-style',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-position',\n  'top',\n  'transform',\n  'transform-box',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'vertical-align',\n  'visibility',\n  'voice-balance',\n  'voice-duration',\n  'voice-family',\n  'voice-pitch',\n  'voice-range',\n  'voice-rate',\n  'voice-stress',\n  'voice-volume',\n  'white-space',\n  'widows',\n  'width',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'writing-mode',\n  'z-index'\n  // reverse makes sure longer attributes `font-weight` are matched fully\n  // instead of getting false positives on say `font`\n].reverse();\n\n/*\nLanguage: CSS\nCategory: common, css, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  const regex = hljs.regex;\n  const modes = MODES(hljs);\n  const VENDOR_PREFIX = { begin: /-(webkit|moz|ms|o)-(?=[a-z])/ };\n  const AT_MODIFIERS = \"and or not only\";\n  const AT_PROPERTY_RE = /@-?\\w[\\w]*(-\\w+)*/; // @-webkit-keyframes\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  const STRINGS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ];\n\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=|'\\$]/,\n    keywords: { keyframePosition: \"from to\" },\n    classNameAliases: {\n      // for visual continuity with `tag {}` and because we\n      // don't have a great class for this?\n      keyframePosition: \"selector-tag\" },\n    contains: [\n      modes.BLOCK_COMMENT,\n      VENDOR_PREFIX,\n      // to recognize keyframe 40% etc which are outside the scope of our\n      // attribute value mode\n      modes.CSS_NUMBER_MODE,\n      {\n        className: 'selector-id',\n        begin: /#[A-Za-z0-9_-]+/,\n        relevance: 0\n      },\n      {\n        className: 'selector-class',\n        begin: '\\\\.' + IDENT_RE,\n        relevance: 0\n      },\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-pseudo',\n        variants: [\n          { begin: ':(' + PSEUDO_CLASSES.join('|') + ')' },\n          { begin: ':(:)?(' + PSEUDO_ELEMENTS.join('|') + ')' }\n        ]\n      },\n      // we may actually need this (12/2020)\n      // { // pseudo-selector params\n      //   begin: /\\(/,\n      //   end: /\\)/,\n      //   contains: [ hljs.CSS_NUMBER_MODE ]\n      // },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\n      },\n      // attribute values\n      {\n        begin: /:/,\n        end: /[;}{]/,\n        contains: [\n          modes.BLOCK_COMMENT,\n          modes.HEXCOLOR,\n          modes.IMPORTANT,\n          modes.CSS_NUMBER_MODE,\n          ...STRINGS,\n          // needed to highlight these as strings and to avoid issues with\n          // illegal characters that might be inside urls that would tigger the\n          // languages illegal stack\n          {\n            begin: /(url|data-uri)\\(/,\n            end: /\\)/,\n            relevance: 0, // from keywords\n            keywords: { built_in: \"url data-uri\" },\n            contains: [\n              ...STRINGS,\n              {\n                className: \"string\",\n                // any character other than `)` as in `url()` will be the start\n                // of a string, which ends with `)` (from the parent mode)\n                begin: /[^)]/,\n                endsWithParent: true,\n                excludeEnd: true\n              }\n            ]\n          },\n          modes.FUNCTION_DISPATCH\n        ]\n      },\n      {\n        begin: regex.lookahead(/@/),\n        end: '[{;]',\n        relevance: 0,\n        illegal: /:/, // break on Less variables @var: ...\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/,\n            endsWithParent: true,\n            excludeEnd: true,\n            relevance: 0,\n            keywords: {\n              $pattern: /[a-z-]+/,\n              keyword: AT_MODIFIERS,\n              attribute: MEDIA_FEATURES.join(\" \")\n            },\n            contains: [\n              {\n                begin: /[a-z-]+(?=:)/,\n                className: \"attribute\"\n              },\n              ...STRINGS,\n              modes.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag',\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b'\n      }\n    ]\n  };\n}\n\nexport { css as default };\n","/*\nLanguage: Diff\nDescription: Unified and context diff\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nWebsite: https://www.gnu.org/software/diffutils/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction diff(hljs) {\n  const regex = hljs.regex;\n  return {\n    name: 'Diff',\n    aliases: [ 'patch' ],\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        match: regex.either(\n          /^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,\n          /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,\n          /^--- +\\d+,\\d+ +----$/\n        )\n      },\n      {\n        className: 'comment',\n        variants: [\n          {\n            begin: regex.either(\n              /Index: /,\n              /^index/,\n              /={3,}/,\n              /^-{3}/,\n              /^\\*{3} /,\n              /^\\+{3}/,\n              /^diff --git/\n            ),\n            end: /$/\n          },\n          { match: /^\\*{15}$/ }\n        ]\n      },\n      {\n        className: 'addition',\n        begin: /^\\+/,\n        end: /$/\n      },\n      {\n        className: 'deletion',\n        begin: /^-/,\n        end: /$/\n      },\n      {\n        className: 'addition',\n        begin: /^!/,\n        end: /$/\n      }\n    ]\n  };\n}\n\nexport { diff as default };\n","/*\nLanguage: Go\nAuthor: Stephan Kountso aka StepLg <steplg@gmail.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>\nDescription: Google go language (golang). For info about language\nWebsite: http://golang.org/\nCategory: common, system\n*/\n\nfunction go(hljs) {\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"iota\",\n    \"nil\"\n  ];\n  const BUILT_INS = [\n    \"append\",\n    \"cap\",\n    \"close\",\n    \"complex\",\n    \"copy\",\n    \"imag\",\n    \"len\",\n    \"make\",\n    \"new\",\n    \"panic\",\n    \"print\",\n    \"println\",\n    \"real\",\n    \"recover\",\n    \"delete\"\n  ];\n  const TYPES = [\n    \"bool\",\n    \"byte\",\n    \"complex64\",\n    \"complex128\",\n    \"error\",\n    \"float32\",\n    \"float64\",\n    \"int8\",\n    \"int16\",\n    \"int32\",\n    \"int64\",\n    \"string\",\n    \"uint8\",\n    \"uint16\",\n    \"uint32\",\n    \"uint64\",\n    \"int\",\n    \"uint\",\n    \"uintptr\",\n    \"rune\"\n  ];\n  const KWS = [\n    \"break\",\n    \"case\",\n    \"chan\",\n    \"const\",\n    \"continue\",\n    \"default\",\n    \"defer\",\n    \"else\",\n    \"fallthrough\",\n    \"for\",\n    \"func\",\n    \"go\",\n    \"goto\",\n    \"if\",\n    \"import\",\n    \"interface\",\n    \"map\",\n    \"package\",\n    \"range\",\n    \"return\",\n    \"select\",\n    \"struct\",\n    \"switch\",\n    \"type\",\n    \"var\",\n  ];\n  const KEYWORDS = {\n    keyword: KWS,\n    type: TYPES,\n    literal: LITERALS,\n    built_in: BUILT_INS\n  };\n  return {\n    name: 'Go',\n    aliases: [ 'golang' ],\n    keywords: KEYWORDS,\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        variants: [\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          {\n            begin: '`',\n            end: '`'\n          }\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: hljs.C_NUMBER_RE + '[i]',\n            relevance: 1\n          },\n          hljs.C_NUMBER_MODE\n        ]\n      },\n      { begin: /:=/ // relevance booster\n      },\n      {\n        className: 'function',\n        beginKeywords: 'func',\n        end: '\\\\s*(\\\\{|$)',\n        excludeEnd: true,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            illegal: /[\"']/\n          }\n        ]\n      }\n    ]\n  };\n}\n\nexport { go as default };\n","/*\n Language: GraphQL\n Author: John Foster (GH jf990), and others\n Description: GraphQL is a query language for APIs\n Category: web, common\n*/\n\n/** @type LanguageFn */\nfunction graphql(hljs) {\n  const regex = hljs.regex;\n  const GQL_NAME = /[_A-Za-z][_0-9A-Za-z]*/;\n  return {\n    name: \"GraphQL\",\n    aliases: [ \"gql\" ],\n    case_insensitive: true,\n    disableAutodetect: false,\n    keywords: {\n      keyword: [\n        \"query\",\n        \"mutation\",\n        \"subscription\",\n        \"type\",\n        \"input\",\n        \"schema\",\n        \"directive\",\n        \"interface\",\n        \"union\",\n        \"scalar\",\n        \"fragment\",\n        \"enum\",\n        \"on\"\n      ],\n      literal: [\n        \"true\",\n        \"false\",\n        \"null\"\n      ]\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      {\n        scope: \"punctuation\",\n        match: /[.]{3}/,\n        relevance: 0\n      },\n      {\n        scope: \"punctuation\",\n        begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,\n        relevance: 0\n      },\n      {\n        scope: \"variable\",\n        begin: /\\$/,\n        end: /\\W/,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        scope: \"meta\",\n        match: /@\\w+/,\n        excludeEnd: true\n      },\n      {\n        scope: \"symbol\",\n        begin: regex.concat(GQL_NAME, regex.lookahead(/\\s*:/)),\n        relevance: 0\n      }\n    ],\n    illegal: [\n      /[;<']/,\n      /BEGIN/\n    ]\n  };\n}\n\nexport { graphql as default };\n","/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  const regex = hljs.regex;\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      { begin: /([+-]+)?[\\d]+_[\\d_]+/ },\n      { begin: hljs.NUMBER_RE }\n    ]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [\n    {\n      begin: /;/,\n      end: /$/\n    },\n    {\n      begin: /#/,\n      end: /$/\n    }\n  ];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [\n      { begin: /\\$[\\w\\d\"][\\w\\d_]*/ },\n      { begin: /\\$\\{(.*?)\\}/ }\n    ]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: \"'''\",\n        end: \"'''\",\n        relevance: 10\n      },\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"',\n        relevance: 10\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      },\n      {\n        begin: \"'\",\n        end: \"'\"\n      }\n    ]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [\n      COMMENTS,\n      LITERALS,\n      VARIABLES,\n      STRINGS,\n      NUMBERS,\n      'self'\n    ],\n    relevance: 0\n  };\n\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = regex.either(\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\n  );\n  const DOTTED_KEY = regex.concat(\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\n    regex.lookahead(/\\s*=\\s*[^#\\s]/)\n  );\n\n  return {\n    name: 'TOML, also INI',\n    aliases: [ 'toml' ],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      COMMENTS,\n      {\n        className: 'section',\n        begin: /\\[+/,\n        end: /\\]+/\n      },\n      {\n        begin: DOTTED_KEY,\n        className: 'attr',\n        starts: {\n          end: /$/,\n          contains: [\n            COMMENTS,\n            ARRAY,\n            LITERALS,\n            VARIABLES,\n            STRINGS,\n            NUMBERS\n          ]\n        }\n      }\n    ]\n  };\n}\n\nexport { ini as default };\n","// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\n/**\n * Allows recursive regex expressions to a given depth\n *\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\n * (abc(abc(abc)))\n *\n * @param {string} re\n * @param {RegExp} substitution (should be a g mode regex)\n * @param {number} depth\n * @returns {string}``\n */\nfunction recurRegex(re, substitution, depth) {\n  if (depth === -1) return \"\";\n\n  return re.replace(substitution, _ => {\n    return recurRegex(re, substitution, depth - 1);\n  });\n}\n\n/** @type LanguageFn */\nfunction java(hljs) {\n  const regex = hljs.regex;\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE\n    + recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\n  const MAIN_KEYWORDS = [\n    'synchronized',\n    'abstract',\n    'private',\n    'var',\n    'static',\n    'if',\n    'const ',\n    'for',\n    'while',\n    'strictfp',\n    'finally',\n    'protected',\n    'import',\n    'native',\n    'final',\n    'void',\n    'enum',\n    'else',\n    'break',\n    'transient',\n    'catch',\n    'instanceof',\n    'volatile',\n    'case',\n    'assert',\n    'package',\n    'default',\n    'public',\n    'try',\n    'switch',\n    'continue',\n    'throws',\n    'protected',\n    'public',\n    'private',\n    'module',\n    'requires',\n    'exports',\n    'do',\n    'sealed',\n    'yield',\n    'permits'\n  ];\n\n  const BUILT_INS = [\n    'super',\n    'this'\n  ];\n\n  const LITERALS = [\n    'false',\n    'true',\n    'null'\n  ];\n\n  const TYPES = [\n    'char',\n    'boolean',\n    'long',\n    'float',\n    'int',\n    'byte',\n    'short',\n    'double'\n  ];\n\n  const KEYWORDS = {\n    keyword: MAIN_KEYWORDS,\n    literal: LITERALS,\n    type: TYPES,\n    built_in: BUILT_INS\n  };\n\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ \"self\" ] // allow nested () inside our annotation\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    relevance: 0,\n    contains: [ hljs.C_BLOCK_COMMENT_MODE ],\n    endsParent: true\n  };\n\n  return {\n    name: 'Java',\n    aliases: [ 'jsp' ],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/,\n              relevance: 0\n            },\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      // relevance boost\n      {\n        begin: /import java\\.[a-z]+\\./,\n        keywords: \"import\",\n        relevance: 2\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        begin: /\"\"\"/,\n        end: /\"\"\"/,\n        className: \"string\",\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        match: [\n          /\\b(?:class|interface|enum|extends|implements|new)/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        // Exceptions for hyphenated keywords\n        match: /non-sealed/,\n        scope: \"keyword\"\n      },\n      {\n        begin: [\n          regex.concat(/(?!else)/, JAVA_IDENT_RE),\n          /\\s+/,\n          JAVA_IDENT_RE,\n          /\\s+/,\n          /=(?!=)/\n        ],\n        className: {\n          1: \"type\",\n          3: \"variable\",\n          5: \"operator\"\n        }\n      },\n      {\n        begin: [\n          /record/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        },\n        contains: [\n          PARAMS,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        begin: [\n          '(?:' + GENERIC_IDENT_RE + '\\\\s+)',\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s*(?=\\()/\n        ],\n        className: { 2: \"title.function\" },\n        keywords: KEYWORDS,\n        contains: [\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              ANNOTATION,\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              NUMERIC,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      NUMERIC,\n      ANNOTATION\n    ]\n  };\n}\n\nexport { java as default };\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\nconst TYPES = [\n  // Fundamental objects\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Symbol\",\n  // numbers and dates\n  \"Math\",\n  \"Date\",\n  \"Number\",\n  \"BigInt\",\n  // text\n  \"String\",\n  \"RegExp\",\n  // Indexed collections\n  \"Array\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"Int8Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  // Keyed collections\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  // Structured data\n  \"ArrayBuffer\",\n  \"SharedArrayBuffer\",\n  \"Atomics\",\n  \"DataView\",\n  \"JSON\",\n  // Control abstraction objects\n  \"Promise\",\n  \"Generator\",\n  \"GeneratorFunction\",\n  \"AsyncFunction\",\n  // Reflection\n  \"Reflect\",\n  \"Proxy\",\n  // Internationalization\n  \"Intl\",\n  // WebAssembly\n  \"WebAssembly\"\n];\n\nconst ERROR_TYPES = [\n  \"Error\",\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"sessionStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  // to avoid some special cases inside isTrulyOpeningTag\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      if (\n        // HTML should not include another raw `<` inside a tag\n        // nested type?\n        // `<Array<Array<number>>`, etc.\n        nextChar === \"<\" ||\n        // the , gives away that this is not HTML\n        // `<T, A extends keyof T, V>`\n        nextChar === \",\"\n        ) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<something>`\n      // Quite possibly a tag, lets look for a matching closing tag...\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n\n      // `<blah />` (self-closing)\n      // handled by simpleSelfClosing rule\n\n      let m;\n      const afterMatch = match.input.substring(afterMatchIndex);\n\n      // some more template typing stuff\n      //  <T = any>(key?: string) => Modify<\n      if ((m = afterMatch.match(/^\\s*=/))) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<From extends string>`\n      // technically this could be HTML, but it smells like a type\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\n        if (m.index === 0) {\n          response.ignoreMatch();\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const GRAPHQL_TEMPLATE = {\n    begin: 'gql`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'graphql'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    GRAPHQL_TEMPLATE,\n    TEMPLATE_STRING,\n    // Skip numbers when they are part of a variable name\n    { match: /\\$\\d+/ },\n    NUMBER,\n    // This is intentional:\n    // See https://github.com/highlightjs/highlight.js/issues/3288\n    // hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      // class Car extends vehicle\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          5: \"keyword\",\n          7: \"title.class.inherited\"\n        }\n      },\n      // class Car\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match:\n    regex.either(\n      // Hard coded exceptions\n      /\\bJSON/,\n      // Float32Array, OutT\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n      // CSSFactory, CSSFactoryT\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n      // FPs, FPsT\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\n      // P\n      // single letters are not highlighted\n      // BLAH\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\n    ),\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\",\n        \"import\"\n      ]),\n      IDENT_RE$1, regex.lookahead(/\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      /(async\\s*)?/, // async is optional\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: \"async\",\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'JavaScript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      GRAPHQL_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        className: 'attr',\n        begin: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\nexport { javascript as default };\n","/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  // NOTE: normally we would rely on `keywords` for this but using a mode here allows us\n  // - to use the very tight `illegal: \\S` rule later to flag any other character\n  // - as illegal indicating that despite looking like JSON we do not truly have\n  // - JSON and thus improve false-positively greatly since JSON will try and claim\n  // - all sorts of JSON looking stuff\n  const LITERALS_MODE = {\n    scope: \"literal\",\n    beginKeywords: LITERALS.join(\" \"),\n  };\n\n  return {\n    name: 'JSON',\n    keywords:{\n      literal: LITERALS,\n    },\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nexport { json as default };\n","// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\n Language: Kotlin\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n Website: https://kotlinlang.org\n Category: common\n */\n\nfunction kotlin(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline '\n      + 'crossinline dynamic final enum if else do while for when throw try catch finally '\n      + 'import package is in fun override companion reified inline lateinit init '\n      + 'interface annotation data sealed internal infix operator out by constructor super '\n      + 'tailrec where const inner suspend typealias external expect actual',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  const KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: { contains: [\n      {\n        className: 'symbol',\n        begin: /@\\w+/\n      }\n    ] }\n  };\n  const LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [ hljs.C_NUMBER_MODE ]\n  };\n  const VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"(?=[^\"])',\n        contains: [\n          VARIABLE,\n          SUBST\n        ]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'',\n        end: '\\'',\n        illegal: /\\n/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        illegal: /\\n/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VARIABLE,\n          SUBST\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, { className: 'string' }),\n          \"self\"\n        ]\n      }\n    ]\n  };\n\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n  const KOTLIN_NUMBER_MODE = NUMERIC;\n  const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\n    '/\\\\*', '\\\\*/',\n    { contains: [ hljs.C_BLOCK_COMMENT_MODE ] }\n  );\n  const KOTLIN_PAREN_TYPE = { variants: [\n    {\n      className: 'type',\n      begin: hljs.UNDERSCORE_IDENT_RE\n    },\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [] // defined later\n    }\n  ] };\n  const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\n\n  return {\n    name: 'Kotlin',\n    aliases: [\n      'kt',\n      'kts'\n    ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      KOTLIN_NESTED_COMMENT,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun',\n        end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin: true,\n            relevance: 0,\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n          },\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/,\n                end: /[=,\\/]/,\n                endsWithParent: true,\n                contains: [\n                  KOTLIN_PAREN_TYPE,\n                  hljs.C_LINE_COMMENT_MODE,\n                  KOTLIN_NESTED_COMMENT\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              KOTLIN_NESTED_COMMENT,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          KOTLIN_NESTED_COMMENT\n        ]\n      },\n      {\n        begin: [\n          /class|interface|trait/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        beginScope: {\n          3: \"title.class\"\n        },\n        keywords: 'class interface trait',\n        end: /[:\\{(]|$/,\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          { beginKeywords: 'public protected internal private constructor' },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/,\n            end: /[<\\(,){\\s]|$/,\n            excludeBegin: true,\n            returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\",\n        end: '$',\n        illegal: '\\n'\n      },\n      KOTLIN_NUMBER_MODE\n    ]\n  };\n}\n\nexport { kotlin as default };\n","const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n    HEXCOLOR: {\n      scope: 'number',\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n    },\n    FUNCTION_DISPATCH: {\n      className: \"built_in\",\n      begin: /[\\w-]+(?=\\()/\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'p',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n];\n\nconst ATTRIBUTES = [\n  'align-content',\n  'align-items',\n  'align-self',\n  'all',\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-repeat',\n  'background-size',\n  'block-size',\n  'border',\n  'border-block',\n  'border-block-color',\n  'border-block-end',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-block-style',\n  'border-block-width',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline',\n  'border-inline-color',\n  'border-inline-end',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-inline-style',\n  'border-inline-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'contain',\n  'content',\n  'content-visibility',\n  'counter-increment',\n  'counter-reset',\n  'cue',\n  'cue-after',\n  'cue-before',\n  'cursor',\n  'direction',\n  'display',\n  'empty-cells',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'flow',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-size',\n  'font-size-adjust',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-variant',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'gap',\n  'glyph-orientation-vertical',\n  'grid',\n  'grid-area',\n  'grid-auto-columns',\n  'grid-auto-flow',\n  'grid-auto-rows',\n  'grid-column',\n  'grid-column-end',\n  'grid-column-start',\n  'grid-gap',\n  'grid-row',\n  'grid-row-end',\n  'grid-row-start',\n  'grid-template',\n  'grid-template-areas',\n  'grid-template-columns',\n  'grid-template-rows',\n  'hanging-punctuation',\n  'height',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'inline-size',\n  'isolation',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-break',\n  'line-height',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-block',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'marks',\n  'mask',\n  'mask-border',\n  'mask-border-mode',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-border-slice',\n  'mask-border-source',\n  'mask-border-width',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'min-block-size',\n  'min-height',\n  'min-inline-size',\n  'min-width',\n  'mix-blend-mode',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'padding',\n  'padding-block',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'pause',\n  'pause-after',\n  'pause-before',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'position',\n  'quotes',\n  'resize',\n  'rest',\n  'rest-after',\n  'rest-before',\n  'right',\n  'row-gap',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-stop',\n  'scroll-snap-type',\n  'scrollbar-color',\n  'scrollbar-gutter',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'speak',\n  'speak-as',\n  'src', // @font-face\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-all',\n  'text-align-last',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-style',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-position',\n  'top',\n  'transform',\n  'transform-box',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'vertical-align',\n  'visibility',\n  'voice-balance',\n  'voice-duration',\n  'voice-family',\n  'voice-pitch',\n  'voice-range',\n  'voice-rate',\n  'voice-stress',\n  'voice-volume',\n  'white-space',\n  'widows',\n  'width',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'writing-mode',\n  'z-index'\n  // reverse makes sure longer attributes `font-weight` are matched fully\n  // instead of getting false positives on say `font`\n].reverse();\n\n// some grammars use them all as a single group\nconst PSEUDO_SELECTORS = PSEUDO_CLASSES.concat(PSEUDO_ELEMENTS);\n\n/*\nLanguage: Less\nDescription: It's CSS, with just a little more.\nAuthor:   Max Mikhailov <seven.phases.max@gmail.com>\nWebsite: http://lesscss.org\nCategory: common, css, web\n*/\n\n/** @type LanguageFn */\nfunction less(hljs) {\n  const modes = MODES(hljs);\n  const PSEUDO_SELECTORS$1 = PSEUDO_SELECTORS;\n\n  const AT_MODIFIERS = \"and or not only\";\n  const IDENT_RE = '[\\\\w-]+'; // yes, Less identifiers may begin with a digit\n  const INTERP_IDENT_RE = '(' + IDENT_RE + '|@\\\\{' + IDENT_RE + '\\\\})';\n\n  /* Generic Modes */\n\n  const RULES = []; const VALUE_MODES = []; // forward def. for recursive modes\n\n  const STRING_MODE = function(c) {\n    return {\n    // Less strings are not multiline (also include '~' for more consistent coloring of \"escaped\" strings)\n      className: 'string',\n      begin: '~?' + c + '.*?' + c\n    };\n  };\n\n  const IDENT_MODE = function(name, begin, relevance) {\n    return {\n      className: name,\n      begin: begin,\n      relevance: relevance\n    };\n  };\n\n  const AT_KEYWORDS = {\n    $pattern: /[a-z-]+/,\n    keyword: AT_MODIFIERS,\n    attribute: MEDIA_FEATURES.join(\" \")\n  };\n\n  const PARENS_MODE = {\n    // used only to properly balance nested parens inside mixin call, def. arg list\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: VALUE_MODES,\n    keywords: AT_KEYWORDS,\n    relevance: 0\n  };\n\n  // generic Less highlighter (used almost everywhere except selectors):\n  VALUE_MODES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING_MODE(\"'\"),\n    STRING_MODE('\"'),\n    modes.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(\n    {\n      begin: '(url|data-uri)\\\\(',\n      starts: {\n        className: 'string',\n        end: '[\\\\)\\\\n]',\n        excludeEnd: true\n      }\n    },\n    modes.HEXCOLOR,\n    PARENS_MODE,\n    IDENT_MODE('variable', '@@?' + IDENT_RE, 10),\n    IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'),\n    IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string\n    { // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):\n      className: 'attribute',\n      begin: IDENT_RE + '\\\\s*:',\n      end: ':',\n      returnBegin: true,\n      excludeEnd: true\n    },\n    modes.IMPORTANT,\n    { beginKeywords: 'and not' },\n    modes.FUNCTION_DISPATCH\n  );\n\n  const VALUE_WITH_RULESETS = VALUE_MODES.concat({\n    begin: /\\{/,\n    end: /\\}/,\n    contains: RULES\n  });\n\n  const MIXIN_GUARD_MODE = {\n    beginKeywords: 'when',\n    endsWithParent: true,\n    contains: [ { beginKeywords: 'and not' } ].concat(VALUE_MODES) // using this form to override VALUE’s 'function' match\n  };\n\n  /* Rule-Level Modes */\n\n  const RULE_MODE = {\n    begin: INTERP_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    end: /[;}]/,\n    relevance: 0,\n    contains: [\n      { begin: /-(webkit|moz|ms|o)-/ },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b',\n        end: /(?=:)/,\n        starts: {\n          endsWithParent: true,\n          illegal: '[<=$]',\n          relevance: 0,\n          contains: VALUE_MODES\n        }\n      }\n    ]\n  };\n\n  const AT_RULE_MODE = {\n    className: 'keyword',\n    begin: '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b',\n    starts: {\n      end: '[;{}]',\n      keywords: AT_KEYWORDS,\n      returnEnd: true,\n      contains: VALUE_MODES,\n      relevance: 0\n    }\n  };\n\n  // variable definitions and calls\n  const VAR_RULE_MODE = {\n    className: 'variable',\n    variants: [\n      // using more strict pattern for higher relevance to increase chances of Less detection.\n      // this is *the only* Less specific statement used in most of the sources, so...\n      // (we’ll still often loose to the css-parser unless there's '//' comment,\n      // simply because 1 variable just can't beat 99 properties :)\n      {\n        begin: '@' + IDENT_RE + '\\\\s*:',\n        relevance: 15\n      },\n      { begin: '@' + IDENT_RE }\n    ],\n    starts: {\n      end: '[;}]',\n      returnEnd: true,\n      contains: VALUE_WITH_RULESETS\n    }\n  };\n\n  const SELECTOR_MODE = {\n    // first parse unambiguous selectors (i.e. those not starting with tag)\n    // then fall into the scary lookahead-discriminator variant.\n    // this mode also handles mixin definitions and calls\n    variants: [\n      {\n        begin: '[\\\\.#:&\\\\[>]',\n        end: '[;{}]' // mixin calls end with ';'\n      },\n      {\n        begin: INTERP_IDENT_RE,\n        end: /\\{/\n      }\n    ],\n    returnBegin: true,\n    returnEnd: true,\n    illegal: '[<=\\'$\"]',\n    relevance: 0,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      MIXIN_GUARD_MODE,\n      IDENT_MODE('keyword', 'all\\\\b'),\n      IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'), // otherwise it’s identified as tag\n      \n      {\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\n        className: 'selector-tag'\n      },\n      modes.CSS_NUMBER_MODE,\n      IDENT_MODE('selector-tag', INTERP_IDENT_RE, 0),\n      IDENT_MODE('selector-id', '#' + INTERP_IDENT_RE),\n      IDENT_MODE('selector-class', '\\\\.' + INTERP_IDENT_RE, 0),\n      IDENT_MODE('selector-tag', '&', 0),\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-pseudo',\n        begin: ':(' + PSEUDO_CLASSES.join('|') + ')'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(:)?(' + PSEUDO_ELEMENTS.join('|') + ')'\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        relevance: 0,\n        contains: VALUE_WITH_RULESETS\n      }, // argument list of parametric mixins\n      { begin: '!important' }, // eat !important after mixin call or it will be colored as tag\n      modes.FUNCTION_DISPATCH\n    ]\n  };\n\n  const PSEUDO_SELECTOR_MODE = {\n    begin: IDENT_RE + ':(:)?' + `(${PSEUDO_SELECTORS$1.join('|')})`,\n    returnBegin: true,\n    contains: [ SELECTOR_MODE ]\n  };\n\n  RULES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    AT_RULE_MODE,\n    VAR_RULE_MODE,\n    PSEUDO_SELECTOR_MODE,\n    RULE_MODE,\n    SELECTOR_MODE,\n    MIXIN_GUARD_MODE,\n    modes.FUNCTION_DISPATCH\n  );\n\n  return {\n    name: 'Less',\n    case_insensitive: true,\n    illegal: '[=>\\'/<($\"]',\n    contains: RULES\n  };\n}\n\nexport { less as default };\n","/*\nLanguage: Lua\nDescription: Lua is a powerful, efficient, lightweight, embeddable scripting language.\nAuthor: Andrew Fedorov <dmmdrs@mail.ru>\nCategory: common, scripting\nWebsite: https://www.lua.org\n*/\n\nfunction lua(hljs) {\n  const OPENING_LONG_BRACKET = '\\\\[=*\\\\[';\n  const CLOSING_LONG_BRACKET = '\\\\]=*\\\\]';\n  const LONG_BRACKETS = {\n    begin: OPENING_LONG_BRACKET,\n    end: CLOSING_LONG_BRACKET,\n    contains: [ 'self' ]\n  };\n  const COMMENTS = [\n    hljs.COMMENT('--(?!' + OPENING_LONG_BRACKET + ')', '$'),\n    hljs.COMMENT(\n      '--' + OPENING_LONG_BRACKET,\n      CLOSING_LONG_BRACKET,\n      {\n        contains: [ LONG_BRACKETS ],\n        relevance: 10\n      }\n    )\n  ];\n  return {\n    name: 'Lua',\n    keywords: {\n      $pattern: hljs.UNDERSCORE_IDENT_RE,\n      literal: \"true false nil\",\n      keyword: \"and break do else elseif end for goto if in local not or repeat return then until while\",\n      built_in:\n        // Metatags and globals:\n        '_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len '\n        + '__gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert '\n        // Standard methods and properties:\n        + 'collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring '\n        + 'module next pairs pcall print rawequal rawget rawset require select setfenv '\n        + 'setmetatable tonumber tostring type unpack xpcall arg self '\n        // Library methods and properties (one line per library):\n        + 'coroutine resume yield status wrap create running debug getupvalue '\n        + 'debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv '\n        + 'io lines write close flush open output type read stderr stdin input stdout popen tmpfile '\n        + 'math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan '\n        + 'os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall '\n        + 'string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower '\n        + 'table setn insert getn foreachi maxn foreach concat sort remove'\n    },\n    contains: COMMENTS.concat([\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: '\\\\)',\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, { begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*' }),\n          {\n            className: 'params',\n            begin: '\\\\(',\n            endsWithParent: true,\n            contains: COMMENTS\n          }\n        ].concat(COMMENTS)\n      },\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: OPENING_LONG_BRACKET,\n        end: CLOSING_LONG_BRACKET,\n        contains: [ LONG_BRACKETS ],\n        relevance: 5\n      }\n    ])\n  };\n}\n\nexport { lua as default };\n","/*\nLanguage: Makefile\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nContributors: Joël Porquet <joel@porquet.org>\nWebsite: https://www.gnu.org/software/make/manual/html_node/Introduction.html\nCategory: common\n*/\n\nfunction makefile(hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  const VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      { begin: /\\$[@%<?\\^\\+\\*]/ }\n    ]\n  };\n  /* Quoted string with variables inside */\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VARIABLE\n    ]\n  };\n  /* Function: $(func arg,...) */\n  const FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/,\n    end: /\\)/,\n    keywords: { built_in:\n        'subst patsubst strip findstring filter filter-out sort '\n        + 'word wordlist firstword lastword dir notdir suffix basename '\n        + 'addsuffix addprefix join wildcard realpath abspath error warning '\n        + 'shell origin flavor foreach if or and call eval file value' },\n    contains: [ VARIABLE ]\n  };\n  /* Variable assignment */\n  const ASSIGNMENT = { begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*(?=[:+?]?=)' };\n  /* Meta targets (.PHONY) */\n  const META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/,\n    end: /$/,\n    keywords: {\n      $pattern: /[\\.\\w]+/,\n      keyword: '.PHONY'\n    }\n  };\n  /* Targets */\n  const TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/,\n    end: /$/,\n    contains: [ VARIABLE ]\n  };\n  return {\n    name: 'Makefile',\n    aliases: [\n      'mk',\n      'mak',\n      'make',\n    ],\n    keywords: {\n      $pattern: /[\\w-]+/,\n      keyword: 'define endef undefine ifdef ifndef ifeq ifneq else endif '\n      + 'include -include sinclude override export unexport private vpath'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      VARIABLE,\n      QUOTE_STRING,\n      FUNC,\n      ASSIGNMENT,\n      META,\n      TARGET\n    ]\n  };\n}\n\nexport { makefile as default };\n","/*\nLanguage: Markdown\nRequires: xml.js\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\nWebsite: https://daringfireball.net/projects/markdown/\nCategory: common, markup\n*/\n\nfunction markdown(hljs) {\n  const regex = hljs.regex;\n  const INLINE_HTML = {\n    begin: /<\\/?[A-Za-z_]/,\n    end: '>',\n    subLanguage: 'xml',\n    relevance: 0\n  };\n  const HORIZONTAL_RULE = {\n    begin: '^[-\\\\*]{3,}',\n    end: '$'\n  };\n  const CODE = {\n    className: 'code',\n    variants: [\n      // TODO: fix to allow these to work with sublanguage also\n      { begin: '(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*' },\n      { begin: '(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*' },\n      // needed to allow markdown as a sublanguage to work\n      {\n        begin: '```',\n        end: '```+[ ]*$'\n      },\n      {\n        begin: '~~~',\n        end: '~~~+[ ]*$'\n      },\n      { begin: '`.+?`' },\n      {\n        begin: '(?=^( {4}|\\\\t))',\n        // use contains to gobble up multiple lines to allow the block to be whatever size\n        // but only have a single open/close tag vs one per line\n        contains: [\n          {\n            begin: '^( {4}|\\\\t)',\n            end: '(\\\\n)$'\n          }\n        ],\n        relevance: 0\n      }\n    ]\n  };\n  const LIST = {\n    className: 'bullet',\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\n    end: '\\\\s+',\n    excludeEnd: true\n  };\n  const LINK_REFERENCE = {\n    begin: /^\\[[^\\n]+\\]:/,\n    returnBegin: true,\n    contains: [\n      {\n        className: 'symbol',\n        begin: /\\[/,\n        end: /\\]/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'link',\n        begin: /:\\s*/,\n        end: /$/,\n        excludeBegin: true\n      }\n    ]\n  };\n  const URL_SCHEME = /[A-Za-z][A-Za-z0-9+.-]*/;\n  const LINK = {\n    variants: [\n      // too much like nested array access in so many languages\n      // to have any real relevance\n      {\n        begin: /\\[.+?\\]\\[.*?\\]/,\n        relevance: 0\n      },\n      // popular internet URLs\n      {\n        begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\n        relevance: 2\n      },\n      {\n        begin: regex.concat(/\\[.+?\\]\\(/, URL_SCHEME, /:\\/\\/.*?\\)/),\n        relevance: 2\n      },\n      // relative urls\n      {\n        begin: /\\[.+?\\]\\([./?&#].*?\\)/,\n        relevance: 1\n      },\n      // whatever else, lower relevance (might not be a link at all)\n      {\n        begin: /\\[.*?\\]\\(.*?\\)/,\n        relevance: 0\n      }\n    ],\n    returnBegin: true,\n    contains: [\n      {\n        // empty strings for alt or link text\n        match: /\\[(?=\\])/ },\n      {\n        className: 'string',\n        relevance: 0,\n        begin: '\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        returnEnd: true\n      },\n      {\n        className: 'link',\n        relevance: 0,\n        begin: '\\\\]\\\\(',\n        end: '\\\\)',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'symbol',\n        relevance: 0,\n        begin: '\\\\]\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n  const BOLD = {\n    className: 'strong',\n    contains: [], // defined later\n    variants: [\n      {\n        begin: /_{2}(?!\\s)/,\n        end: /_{2}/\n      },\n      {\n        begin: /\\*{2}(?!\\s)/,\n        end: /\\*{2}/\n      }\n    ]\n  };\n  const ITALIC = {\n    className: 'emphasis',\n    contains: [], // defined later\n    variants: [\n      {\n        begin: /\\*(?![*\\s])/,\n        end: /\\*/\n      },\n      {\n        begin: /_(?![_\\s])/,\n        end: /_/,\n        relevance: 0\n      }\n    ]\n  };\n\n  // 3 level deep nesting is not allowed because it would create confusion\n  // in cases like `***testing***` because where we don't know if the last\n  // `***` is starting a new bold/italic or finishing the last one\n  const BOLD_WITHOUT_ITALIC = hljs.inherit(BOLD, { contains: [] });\n  const ITALIC_WITHOUT_BOLD = hljs.inherit(ITALIC, { contains: [] });\n  BOLD.contains.push(ITALIC_WITHOUT_BOLD);\n  ITALIC.contains.push(BOLD_WITHOUT_ITALIC);\n\n  let CONTAINABLE = [\n    INLINE_HTML,\n    LINK\n  ];\n\n  [\n    BOLD,\n    ITALIC,\n    BOLD_WITHOUT_ITALIC,\n    ITALIC_WITHOUT_BOLD\n  ].forEach(m => {\n    m.contains = m.contains.concat(CONTAINABLE);\n  });\n\n  CONTAINABLE = CONTAINABLE.concat(BOLD, ITALIC);\n\n  const HEADER = {\n    className: 'section',\n    variants: [\n      {\n        begin: '^#{1,6}',\n        end: '$',\n        contains: CONTAINABLE\n      },\n      {\n        begin: '(?=^.+?\\\\n[=-]{2,}$)',\n        contains: [\n          { begin: '^[=-]*$' },\n          {\n            begin: '^',\n            end: \"\\\\n\",\n            contains: CONTAINABLE\n          }\n        ]\n      }\n    ]\n  };\n\n  const BLOCKQUOTE = {\n    className: 'quote',\n    begin: '^>\\\\s+',\n    contains: CONTAINABLE,\n    end: '$'\n  };\n\n  return {\n    name: 'Markdown',\n    aliases: [\n      'md',\n      'mkdown',\n      'mkd'\n    ],\n    contains: [\n      HEADER,\n      INLINE_HTML,\n      LIST,\n      BOLD,\n      ITALIC,\n      BLOCKQUOTE,\n      CODE,\n      HORIZONTAL_RULE,\n      LINK,\n      LINK_REFERENCE\n    ]\n  };\n}\n\nexport { markdown as default };\n","/*\nLanguage: Objective-C\nAuthor: Valerii Hiora <valerii.hiora@gmail.com>\nContributors: Angel G. Olloqui <angelgarcia.mail@gmail.com>, Matt Diephouse <matt@diephouse.com>, Andrew Farmer <ahfarmer@gmail.com>, Minh Nguyễn <mxn@1ec5.org>\nWebsite: https://developer.apple.com/documentation/objectivec\nCategory: common\n*/\n\nfunction objectivec(hljs) {\n  const API_CLASS = {\n    className: 'built_in',\n    begin: '\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+'\n  };\n  const IDENTIFIER_RE = /[a-zA-Z@][a-zA-Z0-9_]*/;\n  const TYPES = [\n    \"int\",\n    \"float\",\n    \"char\",\n    \"unsigned\",\n    \"signed\",\n    \"short\",\n    \"long\",\n    \"double\",\n    \"wchar_t\",\n    \"unichar\",\n    \"void\",\n    \"bool\",\n    \"BOOL\",\n    \"id|0\",\n    \"_Bool\"\n  ];\n  const KWS = [\n    \"while\",\n    \"export\",\n    \"sizeof\",\n    \"typedef\",\n    \"const\",\n    \"struct\",\n    \"for\",\n    \"union\",\n    \"volatile\",\n    \"static\",\n    \"mutable\",\n    \"if\",\n    \"do\",\n    \"return\",\n    \"goto\",\n    \"enum\",\n    \"else\",\n    \"break\",\n    \"extern\",\n    \"asm\",\n    \"case\",\n    \"default\",\n    \"register\",\n    \"explicit\",\n    \"typename\",\n    \"switch\",\n    \"continue\",\n    \"inline\",\n    \"readonly\",\n    \"assign\",\n    \"readwrite\",\n    \"self\",\n    \"@synchronized\",\n    \"id\",\n    \"typeof\",\n    \"nonatomic\",\n    \"IBOutlet\",\n    \"IBAction\",\n    \"strong\",\n    \"weak\",\n    \"copy\",\n    \"in\",\n    \"out\",\n    \"inout\",\n    \"bycopy\",\n    \"byref\",\n    \"oneway\",\n    \"__strong\",\n    \"__weak\",\n    \"__block\",\n    \"__autoreleasing\",\n    \"@private\",\n    \"@protected\",\n    \"@public\",\n    \"@try\",\n    \"@property\",\n    \"@end\",\n    \"@throw\",\n    \"@catch\",\n    \"@finally\",\n    \"@autoreleasepool\",\n    \"@synthesize\",\n    \"@dynamic\",\n    \"@selector\",\n    \"@optional\",\n    \"@required\",\n    \"@encode\",\n    \"@package\",\n    \"@import\",\n    \"@defs\",\n    \"@compatibility_alias\",\n    \"__bridge\",\n    \"__bridge_transfer\",\n    \"__bridge_retained\",\n    \"__bridge_retain\",\n    \"__covariant\",\n    \"__contravariant\",\n    \"__kindof\",\n    \"_Nonnull\",\n    \"_Nullable\",\n    \"_Null_unspecified\",\n    \"__FUNCTION__\",\n    \"__PRETTY_FUNCTION__\",\n    \"__attribute__\",\n    \"getter\",\n    \"setter\",\n    \"retain\",\n    \"unsafe_unretained\",\n    \"nonnull\",\n    \"nullable\",\n    \"null_unspecified\",\n    \"null_resettable\",\n    \"class\",\n    \"instancetype\",\n    \"NS_DESIGNATED_INITIALIZER\",\n    \"NS_UNAVAILABLE\",\n    \"NS_REQUIRES_SUPER\",\n    \"NS_RETURNS_INNER_POINTER\",\n    \"NS_INLINE\",\n    \"NS_AVAILABLE\",\n    \"NS_DEPRECATED\",\n    \"NS_ENUM\",\n    \"NS_OPTIONS\",\n    \"NS_SWIFT_UNAVAILABLE\",\n    \"NS_ASSUME_NONNULL_BEGIN\",\n    \"NS_ASSUME_NONNULL_END\",\n    \"NS_REFINED_FOR_SWIFT\",\n    \"NS_SWIFT_NAME\",\n    \"NS_SWIFT_NOTHROW\",\n    \"NS_DURING\",\n    \"NS_HANDLER\",\n    \"NS_ENDHANDLER\",\n    \"NS_VALUERETURN\",\n    \"NS_VOIDRETURN\"\n  ];\n  const LITERALS = [\n    \"false\",\n    \"true\",\n    \"FALSE\",\n    \"TRUE\",\n    \"nil\",\n    \"YES\",\n    \"NO\",\n    \"NULL\"\n  ];\n  const BUILT_INS = [\n    \"dispatch_once_t\",\n    \"dispatch_queue_t\",\n    \"dispatch_sync\",\n    \"dispatch_async\",\n    \"dispatch_once\"\n  ];\n  const KEYWORDS = {\n    \"variable.language\": [\n      \"this\",\n      \"super\"\n    ],\n    $pattern: IDENTIFIER_RE,\n    keyword: KWS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    type: TYPES\n  };\n  const CLASS_KEYWORDS = {\n    $pattern: IDENTIFIER_RE,\n    keyword: [\n      \"@interface\",\n      \"@class\",\n      \"@protocol\",\n      \"@implementation\"\n    ]\n  };\n  return {\n    name: 'Objective-C',\n    aliases: [\n      'mm',\n      'objc',\n      'obj-c',\n      'obj-c++',\n      'objective-c++'\n    ],\n    keywords: KEYWORDS,\n    illegal: '</',\n    contains: [\n      API_CLASS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: '@\"',\n            end: '\"',\n            illegal: '\\\\n',\n            contains: [ hljs.BACKSLASH_ESCAPE ]\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /#\\s*[a-z]+\\b/,\n        end: /$/,\n        keywords: { keyword:\n            'if else elif endif define undef warning error line '\n            + 'pragma ifdef ifndef include' },\n        contains: [\n          {\n            begin: /\\\\\\n/,\n            relevance: 0\n          },\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' }),\n          {\n            className: 'string',\n            begin: /<.*?>/,\n            end: /$/,\n            illegal: '\\\\n'\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        className: 'class',\n        begin: '(' + CLASS_KEYWORDS.keyword.join('|') + ')\\\\b',\n        end: /(\\{|$)/,\n        excludeEnd: true,\n        keywords: CLASS_KEYWORDS,\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n      },\n      {\n        begin: '\\\\.' + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nexport { objectivec as default };\n","/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = [\n    'abs',\n    'accept',\n    'alarm',\n    'and',\n    'atan2',\n    'bind',\n    'binmode',\n    'bless',\n    'break',\n    'caller',\n    'chdir',\n    'chmod',\n    'chomp',\n    'chop',\n    'chown',\n    'chr',\n    'chroot',\n    'close',\n    'closedir',\n    'connect',\n    'continue',\n    'cos',\n    'crypt',\n    'dbmclose',\n    'dbmopen',\n    'defined',\n    'delete',\n    'die',\n    'do',\n    'dump',\n    'each',\n    'else',\n    'elsif',\n    'endgrent',\n    'endhostent',\n    'endnetent',\n    'endprotoent',\n    'endpwent',\n    'endservent',\n    'eof',\n    'eval',\n    'exec',\n    'exists',\n    'exit',\n    'exp',\n    'fcntl',\n    'fileno',\n    'flock',\n    'for',\n    'foreach',\n    'fork',\n    'format',\n    'formline',\n    'getc',\n    'getgrent',\n    'getgrgid',\n    'getgrnam',\n    'gethostbyaddr',\n    'gethostbyname',\n    'gethostent',\n    'getlogin',\n    'getnetbyaddr',\n    'getnetbyname',\n    'getnetent',\n    'getpeername',\n    'getpgrp',\n    'getpriority',\n    'getprotobyname',\n    'getprotobynumber',\n    'getprotoent',\n    'getpwent',\n    'getpwnam',\n    'getpwuid',\n    'getservbyname',\n    'getservbyport',\n    'getservent',\n    'getsockname',\n    'getsockopt',\n    'given',\n    'glob',\n    'gmtime',\n    'goto',\n    'grep',\n    'gt',\n    'hex',\n    'if',\n    'index',\n    'int',\n    'ioctl',\n    'join',\n    'keys',\n    'kill',\n    'last',\n    'lc',\n    'lcfirst',\n    'length',\n    'link',\n    'listen',\n    'local',\n    'localtime',\n    'log',\n    'lstat',\n    'lt',\n    'ma',\n    'map',\n    'mkdir',\n    'msgctl',\n    'msgget',\n    'msgrcv',\n    'msgsnd',\n    'my',\n    'ne',\n    'next',\n    'no',\n    'not',\n    'oct',\n    'open',\n    'opendir',\n    'or',\n    'ord',\n    'our',\n    'pack',\n    'package',\n    'pipe',\n    'pop',\n    'pos',\n    'print',\n    'printf',\n    'prototype',\n    'push',\n    'q|0',\n    'qq',\n    'quotemeta',\n    'qw',\n    'qx',\n    'rand',\n    'read',\n    'readdir',\n    'readline',\n    'readlink',\n    'readpipe',\n    'recv',\n    'redo',\n    'ref',\n    'rename',\n    'require',\n    'reset',\n    'return',\n    'reverse',\n    'rewinddir',\n    'rindex',\n    'rmdir',\n    'say',\n    'scalar',\n    'seek',\n    'seekdir',\n    'select',\n    'semctl',\n    'semget',\n    'semop',\n    'send',\n    'setgrent',\n    'sethostent',\n    'setnetent',\n    'setpgrp',\n    'setpriority',\n    'setprotoent',\n    'setpwent',\n    'setservent',\n    'setsockopt',\n    'shift',\n    'shmctl',\n    'shmget',\n    'shmread',\n    'shmwrite',\n    'shutdown',\n    'sin',\n    'sleep',\n    'socket',\n    'socketpair',\n    'sort',\n    'splice',\n    'split',\n    'sprintf',\n    'sqrt',\n    'srand',\n    'stat',\n    'state',\n    'study',\n    'sub',\n    'substr',\n    'symlink',\n    'syscall',\n    'sysopen',\n    'sysread',\n    'sysseek',\n    'system',\n    'syswrite',\n    'tell',\n    'telldir',\n    'tie',\n    'tied',\n    'time',\n    'times',\n    'tr',\n    'truncate',\n    'uc',\n    'ucfirst',\n    'umask',\n    'undef',\n    'unless',\n    'unlink',\n    'unpack',\n    'unshift',\n    'untie',\n    'until',\n    'use',\n    'utime',\n    'values',\n    'vec',\n    'wait',\n    'waitpid',\n    'wantarray',\n    'warn',\n    'when',\n    'while',\n    'write',\n    'x|0',\n    'xor',\n    'y|0'\n  ];\n\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: KEYWORDS.join(\" \")\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const VAR = { variants: [\n    { begin: /\\$\\d/ },\n    { begin: regex.concat(\n      /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n      // negative look-ahead tries to avoid matching patterns that are not\n      // Perl at all like $ident$, @ident@, etc.\n      `(?![A-Za-z])(?![@$%])`\n    ) },\n    {\n      begin: /[$%@][^\\s\\w{]/,\n      relevance: 0\n    }\n  ] };\n  const STRING_CONTAINS = [\n    hljs.BACKSLASH_ESCAPE,\n    SUBST,\n    VAR\n  ];\n  const REGEX_DELIMS = [\n    /!/,\n    /\\//,\n    /\\|/,\n    /\\?/,\n    /'/,\n    /\"/, // valid but infrequent and weird\n    /#/ // valid but infrequent and weird\n  ];\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\n    const middle = (close === '\\\\1')\n      ? close\n      : regex.concat(close, open);\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      middle,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_RE = (prefix, open, close) => {\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  const PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      /^=\\w/,\n      /=cut/,\n      { endsWithParent: true }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(',\n          end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[',\n          end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{',\n          end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|',\n          end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*<',\n          end: '>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q',\n          end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'',\n          end: '\\'',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: '\"',\n          end: '\"'\n        },\n        {\n          begin: '`',\n          end: '`',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\\{\\w+\\}/,\n          relevance: 0\n        },\n        {\n          begin: '-?\\\\w+\\\\s*=>',\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          variants: [\n            // allow matching common delimiters\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", regex.either(...REGEX_DELIMS, { capture: true })) },\n            // and then paired delmis\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\n          ],\n          relevance: 2\n        },\n        {\n          className: 'regexp',\n          variants: [\n            {\n              // could be a comment in many languages so do not count\n              // as relevant\n              begin: /(m|qr)\\/\\//,\n              relevance: 0\n            },\n            // prefix is optional with /regex/\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//) },\n            // allow matching common delimiters\n            { begin: PAIRED_RE(\"m|qr\", regex.either(...REGEX_DELIMS, { capture: true }), /\\1/) },\n            // allow common paired delmins\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/) },\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/) },\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/) }\n          ]\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub',\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE ]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n          begin: \"^@@.*\",\n          end: \"$\",\n          className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Perl',\n    aliases: [\n      'pl',\n      'pm'\n    ],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nexport { perl as default };\n","/*\nLanguage: PHP\nAuthor: Victor Karamzin <Victor.Karamzin@enterra-inc.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://www.php.net\nCategory: common\n*/\n\n/**\n * @param {HLJSApi} hljs\n * @returns {LanguageDetail}\n * */\nfunction php(hljs) {\n  const regex = hljs.regex;\n  // negative look-ahead tries to avoid matching patterns that are not\n  // Perl at all like $ident$, @ident@, etc.\n  const NOT_PERL_ETC = /(?![A-Za-z0-9])(?![$])/;\n  const IDENT_RE = regex.concat(\n    /[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/,\n    NOT_PERL_ETC);\n  // Will not detect camelCase classes\n  const PASCAL_CASE_CLASS_NAME_RE = regex.concat(\n    /(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/,\n    NOT_PERL_ETC);\n  const VARIABLE = {\n    scope: 'variable',\n    match: '\\\\$+' + IDENT_RE,\n  };\n  const PREPROCESSOR = {\n    scope: 'meta',\n    variants: [\n      { begin: /<\\?php/, relevance: 10 }, // boost for obvious PHP\n      { begin: /<\\?=/ },\n      // less relevant per PSR-1 which says not to use short-tags\n      { begin: /<\\?/, relevance: 0.1 },\n      { begin: /\\?>/ } // end php tag\n    ]\n  };\n  const SUBST = {\n    scope: 'subst',\n    variants: [\n      { begin: /\\$\\w+/ },\n      {\n        begin: /\\{\\$/,\n        end: /\\}/\n      }\n    ]\n  };\n  const SINGLE_QUOTED = hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null, });\n  const DOUBLE_QUOTED = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\n  });\n\n  const HEREDOC = {\n    begin: /<<<[ \\t]*(?:(\\w+)|\"(\\w+)\")\\n/,\n    end: /[ \\t]*(\\w+)\\b/,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\n    'on:begin': (m, resp) => { resp.data._beginMatch = m[1] || m[2]; },\n    'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); },\n  };\n\n  const NOWDOC = hljs.END_SAME_AS_BEGIN({\n    begin: /<<<[ \\t]*'(\\w+)'\\n/,\n    end: /[ \\t]*(\\w+)\\b/,\n  });\n  // list of valid whitespaces because non-breaking space might be part of a IDENT_RE\n  const WHITESPACE = '[ \\t\\n]';\n  const STRING = {\n    scope: 'string',\n    variants: [\n      DOUBLE_QUOTED,\n      SINGLE_QUOTED,\n      HEREDOC,\n      NOWDOC\n    ]\n  };\n  const NUMBER = {\n    scope: 'number',\n    variants: [\n      { begin: `\\\\b0[bB][01]+(?:_[01]+)*\\\\b` }, // Binary w/ underscore support\n      { begin: `\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b` }, // Octals w/ underscore support\n      { begin: `\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b` }, // Hex w/ underscore support\n      // Decimals w/ underscore support, with optional fragments and scientific exponent (e) suffix.\n      { begin: `(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?` }\n    ],\n    relevance: 0\n  };\n  const LITERALS = [\n    \"false\",\n    \"null\",\n    \"true\"\n  ];\n  const KWS = [\n    // Magic constants:\n    // <https://www.php.net/manual/en/language.constants.predefined.php>\n    \"__CLASS__\",\n    \"__DIR__\",\n    \"__FILE__\",\n    \"__FUNCTION__\",\n    \"__COMPILER_HALT_OFFSET__\",\n    \"__LINE__\",\n    \"__METHOD__\",\n    \"__NAMESPACE__\",\n    \"__TRAIT__\",\n    // Function that look like language construct or language construct that look like function:\n    // List of keywords that may not require parenthesis\n    \"die\",\n    \"echo\",\n    \"exit\",\n    \"include\",\n    \"include_once\",\n    \"print\",\n    \"require\",\n    \"require_once\",\n    // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table\n    // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +\n    // Other keywords:\n    // <https://www.php.net/manual/en/reserved.php>\n    // <https://www.php.net/manual/en/language.types.type-juggling.php>\n    \"array\",\n    \"abstract\",\n    \"and\",\n    \"as\",\n    \"binary\",\n    \"bool\",\n    \"boolean\",\n    \"break\",\n    \"callable\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"clone\",\n    \"const\",\n    \"continue\",\n    \"declare\",\n    \"default\",\n    \"do\",\n    \"double\",\n    \"else\",\n    \"elseif\",\n    \"empty\",\n    \"enddeclare\",\n    \"endfor\",\n    \"endforeach\",\n    \"endif\",\n    \"endswitch\",\n    \"endwhile\",\n    \"enum\",\n    \"eval\",\n    \"extends\",\n    \"final\",\n    \"finally\",\n    \"float\",\n    \"for\",\n    \"foreach\",\n    \"from\",\n    \"global\",\n    \"goto\",\n    \"if\",\n    \"implements\",\n    \"instanceof\",\n    \"insteadof\",\n    \"int\",\n    \"integer\",\n    \"interface\",\n    \"isset\",\n    \"iterable\",\n    \"list\",\n    \"match|0\",\n    \"mixed\",\n    \"new\",\n    \"never\",\n    \"object\",\n    \"or\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"readonly\",\n    \"real\",\n    \"return\",\n    \"string\",\n    \"switch\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"unset\",\n    \"use\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"xor\",\n    \"yield\"\n  ];\n\n  const BUILT_INS = [\n    // Standard PHP library:\n    // <https://www.php.net/manual/en/book.spl.php>\n    \"Error|0\",\n    \"AppendIterator\",\n    \"ArgumentCountError\",\n    \"ArithmeticError\",\n    \"ArrayIterator\",\n    \"ArrayObject\",\n    \"AssertionError\",\n    \"BadFunctionCallException\",\n    \"BadMethodCallException\",\n    \"CachingIterator\",\n    \"CallbackFilterIterator\",\n    \"CompileError\",\n    \"Countable\",\n    \"DirectoryIterator\",\n    \"DivisionByZeroError\",\n    \"DomainException\",\n    \"EmptyIterator\",\n    \"ErrorException\",\n    \"Exception\",\n    \"FilesystemIterator\",\n    \"FilterIterator\",\n    \"GlobIterator\",\n    \"InfiniteIterator\",\n    \"InvalidArgumentException\",\n    \"IteratorIterator\",\n    \"LengthException\",\n    \"LimitIterator\",\n    \"LogicException\",\n    \"MultipleIterator\",\n    \"NoRewindIterator\",\n    \"OutOfBoundsException\",\n    \"OutOfRangeException\",\n    \"OuterIterator\",\n    \"OverflowException\",\n    \"ParentIterator\",\n    \"ParseError\",\n    \"RangeException\",\n    \"RecursiveArrayIterator\",\n    \"RecursiveCachingIterator\",\n    \"RecursiveCallbackFilterIterator\",\n    \"RecursiveDirectoryIterator\",\n    \"RecursiveFilterIterator\",\n    \"RecursiveIterator\",\n    \"RecursiveIteratorIterator\",\n    \"RecursiveRegexIterator\",\n    \"RecursiveTreeIterator\",\n    \"RegexIterator\",\n    \"RuntimeException\",\n    \"SeekableIterator\",\n    \"SplDoublyLinkedList\",\n    \"SplFileInfo\",\n    \"SplFileObject\",\n    \"SplFixedArray\",\n    \"SplHeap\",\n    \"SplMaxHeap\",\n    \"SplMinHeap\",\n    \"SplObjectStorage\",\n    \"SplObserver\",\n    \"SplPriorityQueue\",\n    \"SplQueue\",\n    \"SplStack\",\n    \"SplSubject\",\n    \"SplTempFileObject\",\n    \"TypeError\",\n    \"UnderflowException\",\n    \"UnexpectedValueException\",\n    \"UnhandledMatchError\",\n    // Reserved interfaces:\n    // <https://www.php.net/manual/en/reserved.interfaces.php>\n    \"ArrayAccess\",\n    \"BackedEnum\",\n    \"Closure\",\n    \"Fiber\",\n    \"Generator\",\n    \"Iterator\",\n    \"IteratorAggregate\",\n    \"Serializable\",\n    \"Stringable\",\n    \"Throwable\",\n    \"Traversable\",\n    \"UnitEnum\",\n    \"WeakReference\",\n    \"WeakMap\",\n    // Reserved classes:\n    // <https://www.php.net/manual/en/reserved.classes.php>\n    \"Directory\",\n    \"__PHP_Incomplete_Class\",\n    \"parent\",\n    \"php_user_filter\",\n    \"self\",\n    \"static\",\n    \"stdClass\"\n  ];\n\n  /** Dual-case keywords\n   *\n   * [\"then\",\"FILE\"] =>\n   *     [\"then\", \"THEN\", \"FILE\", \"file\"]\n   *\n   * @param {string[]} items */\n  const dualCase = (items) => {\n    /** @type string[] */\n    const result = [];\n    items.forEach(item => {\n      result.push(item);\n      if (item.toLowerCase() === item) {\n        result.push(item.toUpperCase());\n      } else {\n        result.push(item.toLowerCase());\n      }\n    });\n    return result;\n  };\n\n  const KEYWORDS = {\n    keyword: KWS,\n    literal: dualCase(LITERALS),\n    built_in: BUILT_INS,\n  };\n\n  /**\n   * @param {string[]} items */\n  const normalizeKeywords = (items) => {\n    return items.map(item => {\n      return item.replace(/\\|\\d+$/, \"\");\n    });\n  };\n\n  const CONSTRUCTOR_CALL = { variants: [\n    {\n      match: [\n        /new/,\n        regex.concat(WHITESPACE, \"+\"),\n        // to prevent built ins from being confused as the class constructor call\n        regex.concat(\"(?!\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\n        PASCAL_CASE_CLASS_NAME_RE,\n      ],\n      scope: {\n        1: \"keyword\",\n        4: \"title.class\",\n      },\n    }\n  ] };\n\n  const CONSTANT_REFERENCE = regex.concat(IDENT_RE, \"\\\\b(?!\\\\()\");\n\n  const LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON = { variants: [\n    {\n      match: [\n        regex.concat(\n          /::/,\n          regex.lookahead(/(?!class\\b)/)\n        ),\n        CONSTANT_REFERENCE,\n      ],\n      scope: { 2: \"variable.constant\", },\n    },\n    {\n      match: [\n        /::/,\n        /class/,\n      ],\n      scope: { 2: \"variable.language\", },\n    },\n    {\n      match: [\n        PASCAL_CASE_CLASS_NAME_RE,\n        regex.concat(\n          /::/,\n          regex.lookahead(/(?!class\\b)/)\n        ),\n        CONSTANT_REFERENCE,\n      ],\n      scope: {\n        1: \"title.class\",\n        3: \"variable.constant\",\n      },\n    },\n    {\n      match: [\n        PASCAL_CASE_CLASS_NAME_RE,\n        regex.concat(\n          \"::\",\n          regex.lookahead(/(?!class\\b)/)\n        ),\n      ],\n      scope: { 1: \"title.class\", },\n    },\n    {\n      match: [\n        PASCAL_CASE_CLASS_NAME_RE,\n        /::/,\n        /class/,\n      ],\n      scope: {\n        1: \"title.class\",\n        3: \"variable.language\",\n      },\n    }\n  ] };\n\n  const NAMED_ARGUMENT = {\n    scope: 'attr',\n    match: regex.concat(IDENT_RE, regex.lookahead(':'), regex.lookahead(/(?!::)/)),\n  };\n  const PARAMS_MODE = {\n    relevance: 0,\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [\n      NAMED_ARGUMENT,\n      VARIABLE,\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n      hljs.C_BLOCK_COMMENT_MODE,\n      STRING,\n      NUMBER,\n      CONSTRUCTOR_CALL,\n    ],\n  };\n  const FUNCTION_INVOKE = {\n    relevance: 0,\n    match: [\n      /\\b/,\n      // to prevent keywords from being confused as the function title\n      regex.concat(\"(?!fn\\\\b|function\\\\b|\", normalizeKeywords(KWS).join(\"\\\\b|\"), \"|\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\n      IDENT_RE,\n      regex.concat(WHITESPACE, \"*\"),\n      regex.lookahead(/(?=\\()/)\n    ],\n    scope: { 3: \"title.function.invoke\", },\n    contains: [ PARAMS_MODE ]\n  };\n  PARAMS_MODE.contains.push(FUNCTION_INVOKE);\n\n  const ATTRIBUTE_CONTAINS = [\n    NAMED_ARGUMENT,\n    LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING,\n    NUMBER,\n    CONSTRUCTOR_CALL,\n  ];\n\n  const ATTRIBUTES = {\n    begin: regex.concat(/#\\[\\s*/, PASCAL_CASE_CLASS_NAME_RE),\n    beginScope: \"meta\",\n    end: /]/,\n    endScope: \"meta\",\n    keywords: {\n      literal: LITERALS,\n      keyword: [\n        'new',\n        'array',\n      ]\n    },\n    contains: [\n      {\n        begin: /\\[/,\n        end: /]/,\n        keywords: {\n          literal: LITERALS,\n          keyword: [\n            'new',\n            'array',\n          ]\n        },\n        contains: [\n          'self',\n          ...ATTRIBUTE_CONTAINS,\n        ]\n      },\n      ...ATTRIBUTE_CONTAINS,\n      {\n        scope: 'meta',\n        match: PASCAL_CASE_CLASS_NAME_RE\n      }\n    ]\n  };\n\n  return {\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [\n      ATTRIBUTES,\n      hljs.HASH_COMMENT_MODE,\n      hljs.COMMENT('//', '$'),\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        { contains: [\n          {\n            scope: 'doctag',\n            match: '@[A-Za-z]+'\n          }\n        ] }\n      ),\n      {\n        match: /__halt_compiler\\(\\);/,\n        keywords: '__halt_compiler',\n        starts: {\n          scope: \"comment\",\n          end: hljs.MATCH_NOTHING_RE,\n          contains: [\n            {\n              match: /\\?>/,\n              scope: \"meta\",\n              endsParent: true\n            }\n          ]\n        }\n      },\n      PREPROCESSOR,\n      {\n        scope: 'variable.language',\n        match: /\\$this\\b/\n      },\n      VARIABLE,\n      FUNCTION_INVOKE,\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n      {\n        match: [\n          /const/,\n          /\\s/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"variable.constant\",\n        },\n      },\n      CONSTRUCTOR_CALL,\n      {\n        scope: 'function',\n        relevance: 0,\n        beginKeywords: 'fn function',\n        end: /[;{]/,\n        excludeEnd: true,\n        illegal: '[$%\\\\[]',\n        contains: [\n          { beginKeywords: 'use', },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            begin: '=>', // No markup, just a relevance booster\n            endsParent: true\n          },\n          {\n            scope: 'params',\n            begin: '\\\\(',\n            end: '\\\\)',\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: [\n              'self',\n              VARIABLE,\n              LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          },\n        ]\n      },\n      {\n        scope: 'class',\n        variants: [\n          {\n            beginKeywords: \"enum\",\n            illegal: /[($\"]/\n          },\n          {\n            beginKeywords: \"class interface trait\",\n            illegal: /[:($\"]/\n          }\n        ],\n        relevance: 0,\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          { beginKeywords: 'extends implements' },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      // both use and namespace still use \"old style\" rules (vs multi-match)\n      // because the namespace name can include `\\` and we still want each\n      // element to be treated as its own *individual* title\n      {\n        beginKeywords: 'namespace',\n        relevance: 0,\n        end: ';',\n        illegal: /[.']/,\n        contains: [ hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { scope: \"title.class\" }) ]\n      },\n      {\n        beginKeywords: 'use',\n        relevance: 0,\n        end: ';',\n        contains: [\n          // TODO: title.function vs title.class\n          {\n            match: /\\b(as|const|function)\\b/,\n            scope: \"keyword\"\n          },\n          // TODO: could be title.class or title.function\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      STRING,\n      NUMBER,\n    ]\n  };\n}\n\nexport { php as default };\n","/*\nLanguage: PHP Template\nRequires: xml.js, php.js\nAuthor: Josh Goebel <hello@joshgoebel.com>\nWebsite: https://www.php.net\nCategory: common\n*/\n\nfunction phpTemplate(hljs) {\n  return {\n    name: \"PHP template\",\n    subLanguage: 'xml',\n    contains: [\n      {\n        begin: /<\\?(php|=)?/,\n        end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {\n            begin: '/\\\\*',\n            end: '\\\\*/',\n            skip: true\n          },\n          {\n            begin: 'b\"',\n            end: '\"',\n            skip: true\n          },\n          {\n            begin: 'b\\'',\n            end: '\\'',\n            skip: true\n          },\n          hljs.inherit(hljs.APOS_STRING_MODE, {\n            illegal: null,\n            className: null,\n            contains: null,\n            skip: true\n          }),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {\n            illegal: null,\n            className: null,\n            contains: null,\n            skip: true\n          })\n        ]\n      }\n    ]\n  };\n}\n\nexport { phpTemplate as default };\n","/*\nLanguage: Plain text\nAuthor: Egor Rogov (e.rogov@postgrespro.ru)\nDescription: Plain text without any highlighting.\nCategory: common\n*/\n\nfunction plaintext(hljs) {\n  return {\n    name: 'Plain text',\n    aliases: [\n      'text',\n      'txt'\n    ],\n    disableAutodetect: true\n  };\n}\n\nexport { plaintext as default };\n","/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'case',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'match',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield'\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip'\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True'\n  ];\n\n  // https://docs.python.org/3/library/typing.html\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\n  // contexts, leaving these remaining only for relevance hinting?\n  const TYPES = [\n    \"Any\",\n    \"Callable\",\n    \"Coroutine\",\n    \"Dict\",\n    \"List\",\n    \"Literal\",\n    \"Generic\",\n    \"Optional\",\n    \"Sequence\",\n    \"Set\",\n    \"Tuple\",\n    \"Type\",\n    \"Union\"\n  ];\n\n  const KEYWORDS = {\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n    keyword: RESERVED_WORDS,\n    built_in: BUILT_INS,\n    literal: LITERALS,\n    type: TYPES\n  };\n\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([uU]|[rR])'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n        end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n        end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n        end: /'/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  // Whitespace after a number (or any lexical token) is needed only if its absence\n  // would change the tokenization\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\n  // We deviate slightly, requiring a word boundary or a keyword\n  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\n  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      {\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n      },\n      {\n        begin: `(${pointfloat})[jJ]?`\n      },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n      },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n      }\n    ]\n  };\n  const COMMENT_TYPE = {\n    className: \"comment\",\n    begin: regex.lookahead(/# type:/),\n    end: /$/,\n    keywords: KEYWORDS,\n    contains: [\n      { // prevent keywords from coloring `type`\n        begin: /# type:/\n      },\n      // comment within a datatype comment includes no keywords\n      {\n        begin: /#/,\n        end: /\\b\\B/,\n        endsWithParent: true\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params in functions without params\n      {\n        className: \"\",\n        begin: /\\(\\s*\\)/,\n        skip: true\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          PROMPT,\n          NUMBER,\n          STRING,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n  SUBST.contains = [\n    STRING,\n    NUMBER,\n    PROMPT\n  ];\n\n  return {\n    name: 'Python',\n    aliases: [\n      'py',\n      'gyp',\n      'ipython'\n    ],\n    unicodeRegex: true,\n    keywords: KEYWORDS,\n    illegal: /(<\\/|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      {\n        // very common convention\n        begin: /\\bself\\b/\n      },\n      {\n        // eat \"if\" prior to string so that it won't accidentally be\n        // labeled as an f-string\n        beginKeywords: \"if\",\n        relevance: 0\n      },\n      STRING,\n      COMMENT_TYPE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        match: [\n          /\\bdef/, /\\s+/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.function\"\n        },\n        contains: [ PARAMS ]\n      },\n      {\n        variants: [\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE, /\\s*/,\n              /\\(\\s*/, IDENT_RE,/\\s*\\)/\n            ],\n          },\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE\n            ],\n          }\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          6: \"title.class.inherited\",\n        }\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/,\n        end: /(?=#)|$/,\n        contains: [\n          NUMBER,\n          PARAMS,\n          STRING\n        ]\n      }\n    ]\n  };\n}\n\nexport { python as default };\n","/*\nLanguage: Python REPL\nRequires: python.js\nAuthor: Josh Goebel <hello@joshgoebel.com>\nCategory: common\n*/\n\nfunction pythonRepl(hljs) {\n  return {\n    aliases: [ 'pycon' ],\n    contains: [\n      {\n        className: 'meta.prompt',\n        starts: {\n          // a space separates the REPL prefix from the actual code\n          // this is purely for cleaner HTML output\n          end: / |$/,\n          starts: {\n            end: '$',\n            subLanguage: 'python'\n          }\n        },\n        variants: [\n          { begin: /^>>>(?=[ ]|$)/ },\n          { begin: /^\\.\\.\\.(?=[ ]|$)/ }\n        ]\n      }\n    ]\n  };\n}\n\nexport { pythonRepl as default };\n","/*\nLanguage: R\nDescription: R is a free software environment for statistical computing and graphics.\nAuthor: Joe Cheng <joe@rstudio.org>\nContributors: Konrad Rudolph <konrad.rudolph@gmail.com>\nWebsite: https://www.r-project.org\nCategory: common,scientific\n*/\n\n/** @type LanguageFn */\nfunction r(hljs) {\n  const regex = hljs.regex;\n  // Identifiers in R cannot start with `_`, but they can start with `.` if it\n  // is not immediately followed by a digit.\n  // R also supports quoted identifiers, which are near-arbitrary sequences\n  // delimited by backticks (`…`), which may contain escape sequences. These are\n  // handled in a separate mode. See `test/markup/r/names.txt` for examples.\n  // FIXME: Support Unicode identifiers.\n  const IDENT_RE = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/;\n  const NUMBER_TYPES_RE = regex.either(\n    // Special case: only hexadecimal binary powers can contain fractions\n    /0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,\n    // Hexadecimal numbers without fraction and optional binary power\n    /0[xX][0-9a-fA-F]+(?:[pP][+-]?\\d+)?[Li]?/,\n    // Decimal numbers\n    /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?[Li]?/\n  );\n  const OPERATORS_RE = /[=!<>:]=|\\|\\||&&|:::?|<-|<<-|->>|->|\\|>|[-+*\\/?!$&|:<=>@^~]|\\*\\*/;\n  const PUNCTUATION_RE = regex.either(\n    /[()]/,\n    /[{}]/,\n    /\\[\\[/,\n    /[[\\]]/,\n    /\\\\/,\n    /,/\n  );\n\n  return {\n    name: 'R',\n\n    keywords: {\n      $pattern: IDENT_RE,\n      keyword:\n        'function if in break next repeat else for while',\n      literal:\n        'NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 '\n        + 'NA_character_|10 NA_complex_|10',\n      built_in:\n        // Builtin constants\n        'LETTERS letters month.abb month.name pi T F '\n        // Primitive functions\n        // These are all the functions in `base` that are implemented as a\n        // `.Primitive`, minus those functions that are also keywords.\n        + 'abs acos acosh all any anyNA Arg as.call as.character '\n        + 'as.complex as.double as.environment as.integer as.logical '\n        + 'as.null.default as.numeric as.raw asin asinh atan atanh attr '\n        + 'attributes baseenv browser c call ceiling class Conj cos cosh '\n        + 'cospi cummax cummin cumprod cumsum digamma dim dimnames '\n        + 'emptyenv exp expression floor forceAndCall gamma gc.time '\n        + 'globalenv Im interactive invisible is.array is.atomic is.call '\n        + 'is.character is.complex is.double is.environment is.expression '\n        + 'is.finite is.function is.infinite is.integer is.language '\n        + 'is.list is.logical is.matrix is.na is.name is.nan is.null '\n        + 'is.numeric is.object is.pairlist is.raw is.recursive is.single '\n        + 'is.symbol lazyLoadDBfetch length lgamma list log max min '\n        + 'missing Mod names nargs nzchar oldClass on.exit pos.to.env '\n        + 'proc.time prod quote range Re rep retracemem return round '\n        + 'seq_along seq_len seq.int sign signif sin sinh sinpi sqrt '\n        + 'standardGeneric substitute sum switch tan tanh tanpi tracemem '\n        + 'trigamma trunc unclass untracemem UseMethod xtfrm',\n    },\n\n    contains: [\n      // Roxygen comments\n      hljs.COMMENT(\n        /#'/,\n        /$/,\n        { contains: [\n          {\n            // Handle `@examples` separately to cause all subsequent code\n            // until the next `@`-tag on its own line to be kept as-is,\n            // preventing highlighting. This code is example R code, so nested\n            // doctags shouldn’t be treated as such. See\n            // `test/markup/r/roxygen.txt` for an example.\n            scope: 'doctag',\n            match: /@examples/,\n            starts: {\n              end: regex.lookahead(regex.either(\n                // end if another doc comment\n                /\\n^#'\\s*(?=@[a-zA-Z]+)/,\n                // or a line with no comment\n                /\\n^(?!#')/\n              )),\n              endsParent: true\n            }\n          },\n          {\n            // Handle `@param` to highlight the parameter name following\n            // after.\n            scope: 'doctag',\n            begin: '@param',\n            end: /$/,\n            contains: [\n              {\n                scope: 'variable',\n                variants: [\n                  { match: IDENT_RE },\n                  { match: /`(?:\\\\.|[^`\\\\])+`/ }\n                ],\n                endsParent: true\n              }\n            ]\n          },\n          {\n            scope: 'doctag',\n            match: /@[a-zA-Z]+/\n          },\n          {\n            scope: 'keyword',\n            match: /\\\\[a-zA-Z]+/\n          }\n        ] }\n      ),\n\n      hljs.HASH_COMMENT_MODE,\n\n      {\n        scope: 'string',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        variants: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]\"(-*)\\(/,\n            end: /\\)(-*)\"/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]\"(-*)\\{/,\n            end: /\\}(-*)\"/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]\"(-*)\\[/,\n            end: /\\](-*)\"/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]'(-*)\\(/,\n            end: /\\)(-*)'/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]'(-*)\\{/,\n            end: /\\}(-*)'/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]'(-*)\\[/,\n            end: /\\](-*)'/\n          }),\n          {\n            begin: '\"',\n            end: '\"',\n            relevance: 0\n          },\n          {\n            begin: \"'\",\n            end: \"'\",\n            relevance: 0\n          }\n        ],\n      },\n\n      // Matching numbers immediately following punctuation and operators is\n      // tricky since we need to look at the character ahead of a number to\n      // ensure the number is not part of an identifier, and we cannot use\n      // negative look-behind assertions. So instead we explicitly handle all\n      // possible combinations of (operator|punctuation), number.\n      // TODO: replace with negative look-behind when available\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/ },\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/ },\n      // { begin: /(?<![a-zA-Z0-9._])(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/ }\n      {\n        relevance: 0,\n        variants: [\n          {\n            scope: {\n              1: 'operator',\n              2: 'number'\n            },\n            match: [\n              OPERATORS_RE,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: {\n              1: 'operator',\n              2: 'number'\n            },\n            match: [\n              /%[^%]*%/,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: {\n              1: 'punctuation',\n              2: 'number'\n            },\n            match: [\n              PUNCTUATION_RE,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: { 2: 'number' },\n            match: [\n              /[^a-zA-Z0-9._]|^/, // not part of an identifier, or start of document\n              NUMBER_TYPES_RE\n            ]\n          }\n        ]\n      },\n\n      // Operators/punctuation when they're not directly followed by numbers\n      {\n        // Relevance boost for the most common assignment form.\n        scope: { 3: 'operator' },\n        match: [\n          IDENT_RE,\n          /\\s+/,\n          /<-/,\n          /\\s+/\n        ]\n      },\n\n      {\n        scope: 'operator',\n        relevance: 0,\n        variants: [\n          { match: OPERATORS_RE },\n          { match: /%[^%]*%/ }\n        ]\n      },\n\n      {\n        scope: 'punctuation',\n        relevance: 0,\n        match: PUNCTUATION_RE\n      },\n\n      {\n        // Escaped identifier\n        begin: '`',\n        end: '`',\n        contains: [ { begin: /\\\\./ } ]\n      }\n    ]\n  };\n}\n\nexport { r as default };\n","/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  const regex = hljs.regex;\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  // TODO: move concepts like CAMEL_CASE into `modes.js`\n  const CLASS_NAME_RE = regex.either(\n    /\\b([A-Z]+[a-z0-9]+)+/,\n    // ends in caps\n    /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/,\n  )\n  ;\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/);\n  // very popular ruby built-ins that one might even assume\n  // are actual keywords (despite that not being the case)\n  const PSEUDO_KWS = [\n    \"include\",\n    \"extend\",\n    \"prepend\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"raise\",\n    \"throw\"\n  ];\n  const RUBY_KEYWORDS = {\n    \"variable.constant\": [\n      \"__FILE__\",\n      \"__LINE__\",\n      \"__ENCODING__\"\n    ],\n    \"variable.language\": [\n      \"self\",\n      \"super\",\n    ],\n    keyword: [\n      \"alias\",\n      \"and\",\n      \"begin\",\n      \"BEGIN\",\n      \"break\",\n      \"case\",\n      \"class\",\n      \"defined\",\n      \"do\",\n      \"else\",\n      \"elsif\",\n      \"end\",\n      \"END\",\n      \"ensure\",\n      \"for\",\n      \"if\",\n      \"in\",\n      \"module\",\n      \"next\",\n      \"not\",\n      \"or\",\n      \"redo\",\n      \"require\",\n      \"rescue\",\n      \"retry\",\n      \"return\",\n      \"then\",\n      \"undef\",\n      \"unless\",\n      \"until\",\n      \"when\",\n      \"while\",\n      \"yield\",\n      ...PSEUDO_KWS\n    ],\n    built_in: [\n      \"proc\",\n      \"lambda\",\n      \"attr_accessor\",\n      \"attr_reader\",\n      \"attr_writer\",\n      \"define_method\",\n      \"private_constant\",\n      \"module_function\"\n    ],\n    literal: [\n      \"true\",\n      \"false\",\n      \"nil\"\n    ]\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      { contains: [ YARDOCTAG ] }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [ YARDOCTAG ],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)\n  ];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: /%[qQwWx]?\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /%[qQwWx]?\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /%[qQwWx]?\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /%[qQwWx]?</,\n        end: />/\n      },\n      {\n        begin: /%[qQwWx]?\\//,\n        end: /\\//\n      },\n      {\n        begin: /%[qQwWx]?%/,\n        end: /%/\n      },\n      {\n        begin: /%[qQwWx]?-/,\n        end: /-/\n      },\n      {\n        begin: /%[qQwWx]?\\|/,\n        end: /\\|/\n      },\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n      // where ? is the last character of a preceding identifier, as in: `func?4`\n      { begin: /\\B\\?(\\\\\\d{1,3})/ },\n      { begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/ },\n      { begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/ },\n      { begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\?\\S/ },\n      // heredocs\n      {\n        // this guard makes sure that we have an entire heredoc and not a false\n        // positive (auto-detect, etc.)\n        begin: regex.concat(\n          /<<[-~]?'?/,\n          regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)\n        ),\n        contains: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/,\n            end: /(\\w+)/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ]\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" }\n    ]\n  };\n\n  const PARAMS = {\n    variants: [\n      {\n        match: /\\(\\)/,\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /(?=\\))/,\n        excludeBegin: true,\n        endsParent: true,\n        keywords: RUBY_KEYWORDS,\n      }\n    ]\n  };\n\n  const INCLUDE_EXTEND = {\n    match: [\n      /(include|extend)\\s+/,\n      CLASS_NAME_WITH_NAMESPACE_RE\n    ],\n    scope: {\n      2: \"title.class\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const CLASS_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /class\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE,\n          /\\s+<\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      },\n      {\n        match: [\n          /\\b(class|module)\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  const METHOD_DEFINITION = {\n    match: [\n      /def/, /\\s+/,\n      RUBY_METHOD_RE\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  const OBJECT_CREATION = {\n    relevance: 0,\n    match: [\n      CLASS_NAME_WITH_NAMESPACE_RE,\n      /\\.new[. (]/\n    ],\n    scope: {\n      1: \"title.class\"\n    }\n  };\n\n  // CamelCase\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: CLASS_NAME_RE,\n    scope: \"title.class\"\n  };\n\n  const RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    CLASS_DEFINITION,\n    INCLUDE_EXTEND,\n    OBJECT_CREATION,\n    UPPER_CASE_CONSTANT,\n    CLASS_REFERENCE,\n    METHOD_DEFINITION,\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::' },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [\n        STRING,\n        { begin: RUBY_METHOD_RE }\n      ],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attempts to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|/,\n      end: /\\|/,\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          illegal: /\\n/,\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: /%r\\{/,\n              end: /\\}[a-z]*/\n            },\n            {\n              begin: '%r\\\\(',\n              end: '\\\\)[a-z]*'\n            },\n            {\n              begin: '%r!',\n              end: '![a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  const SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  const IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta.prompt',\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n      starts: {\n        end: '$',\n        keywords: RUBY_KEYWORDS,\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: [\n      'rb',\n      'gemspec',\n      'podspec',\n      'thor',\n      'irb'\n    ],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [ hljs.SHEBANG({ binary: \"ruby\" }) ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nexport { ruby as default };\n","/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\nfunction rust(hljs) {\n  const regex = hljs.regex;\n  const FUNCTION_INVOKE = {\n    className: \"title.function.invoke\",\n    relevance: 0,\n    begin: regex.concat(\n      /\\b/,\n      /(?!let\\b)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/\\s*\\(/))\n  };\n  const NUMBER_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS = [\n    \"abstract\",\n    \"as\",\n    \"async\",\n    \"await\",\n    \"become\",\n    \"box\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"crate\",\n    \"do\",\n    \"dyn\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"final\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"impl\",\n    \"in\",\n    \"let\",\n    \"loop\",\n    \"macro\",\n    \"match\",\n    \"mod\",\n    \"move\",\n    \"mut\",\n    \"override\",\n    \"priv\",\n    \"pub\",\n    \"ref\",\n    \"return\",\n    \"self\",\n    \"Self\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"trait\",\n    \"true\",\n    \"try\",\n    \"type\",\n    \"typeof\",\n    \"unsafe\",\n    \"unsized\",\n    \"use\",\n    \"virtual\",\n    \"where\",\n    \"while\",\n    \"yield\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"Some\",\n    \"None\",\n    \"Ok\",\n    \"Err\"\n  ];\n  const BUILTINS = [\n    // functions\n    'drop ',\n    // traits\n    \"Copy\",\n    \"Send\",\n    \"Sized\",\n    \"Sync\",\n    \"Drop\",\n    \"Fn\",\n    \"FnMut\",\n    \"FnOnce\",\n    \"ToOwned\",\n    \"Clone\",\n    \"Debug\",\n    \"PartialEq\",\n    \"PartialOrd\",\n    \"Eq\",\n    \"Ord\",\n    \"AsRef\",\n    \"AsMut\",\n    \"Into\",\n    \"From\",\n    \"Default\",\n    \"Iterator\",\n    \"Extend\",\n    \"IntoIterator\",\n    \"DoubleEndedIterator\",\n    \"ExactSizeIterator\",\n    \"SliceConcatExt\",\n    \"ToString\",\n    // macros\n    \"assert!\",\n    \"assert_eq!\",\n    \"bitflags!\",\n    \"bytes!\",\n    \"cfg!\",\n    \"col!\",\n    \"concat!\",\n    \"concat_idents!\",\n    \"debug_assert!\",\n    \"debug_assert_eq!\",\n    \"env!\",\n    \"panic!\",\n    \"file!\",\n    \"format!\",\n    \"format_args!\",\n    \"include_bytes!\",\n    \"include_str!\",\n    \"line!\",\n    \"local_data_key!\",\n    \"module_path!\",\n    \"option_env!\",\n    \"print!\",\n    \"println!\",\n    \"select!\",\n    \"stringify!\",\n    \"try!\",\n    \"unimplemented!\",\n    \"unreachable!\",\n    \"vec!\",\n    \"write!\",\n    \"writeln!\",\n    \"macro_rules!\",\n    \"assert_ne!\",\n    \"debug_assert_ne!\"\n  ];\n  const TYPES = [\n    \"i8\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"i128\",\n    \"isize\",\n    \"u8\",\n    \"u16\",\n    \"u32\",\n    \"u64\",\n    \"u128\",\n    \"usize\",\n    \"f32\",\n    \"f64\",\n    \"str\",\n    \"char\",\n    \"bool\",\n    \"Box\",\n    \"Option\",\n    \"Result\",\n    \"String\",\n    \"Vec\"\n  ];\n  return {\n    name: 'Rust',\n    aliases: [ 'rs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      type: TYPES,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', { contains: [ 'self' ] }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: /b?\"/,\n        illegal: null\n      }),\n      {\n        className: 'string',\n        variants: [\n          { begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\n          { begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n      },\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b0b([01_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0o([0-7_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)'\n                   + NUMBER_SUFFIX }\n        ],\n        relevance: 0\n      },\n      {\n        begin: [\n          /fn/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.function\"\n        }\n      },\n      {\n        className: 'meta',\n        begin: '#!?\\\\[',\n        end: '\\\\]',\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        begin: [\n          /let/,\n          /\\s+/,\n          /(?:mut\\s+)?/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"keyword\",\n          4: \"variable\"\n        }\n      },\n      // must come before impl/for rule later\n      {\n        begin: [\n          /for/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s+/,\n          /in/\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"variable\",\n          5: \"keyword\"\n        }\n      },\n      {\n        begin: [\n          /type/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: [\n          /(?:trait|enum|struct|union|impl|for)/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {\n          keyword: \"Self\",\n          built_in: BUILTINS,\n          type: TYPES\n        }\n      },\n      {\n        className: \"punctuation\",\n        begin: '->'\n      },\n      FUNCTION_INVOKE\n    ]\n  };\n}\n\nexport { rust as default };\n","const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n    HEXCOLOR: {\n      scope: 'number',\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n    },\n    FUNCTION_DISPATCH: {\n      className: \"built_in\",\n      begin: /[\\w-]+(?=\\()/\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'p',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n];\n\nconst ATTRIBUTES = [\n  'align-content',\n  'align-items',\n  'align-self',\n  'all',\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-repeat',\n  'background-size',\n  'block-size',\n  'border',\n  'border-block',\n  'border-block-color',\n  'border-block-end',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-block-style',\n  'border-block-width',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline',\n  'border-inline-color',\n  'border-inline-end',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-inline-style',\n  'border-inline-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'contain',\n  'content',\n  'content-visibility',\n  'counter-increment',\n  'counter-reset',\n  'cue',\n  'cue-after',\n  'cue-before',\n  'cursor',\n  'direction',\n  'display',\n  'empty-cells',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'flow',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-size',\n  'font-size-adjust',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-variant',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'gap',\n  'glyph-orientation-vertical',\n  'grid',\n  'grid-area',\n  'grid-auto-columns',\n  'grid-auto-flow',\n  'grid-auto-rows',\n  'grid-column',\n  'grid-column-end',\n  'grid-column-start',\n  'grid-gap',\n  'grid-row',\n  'grid-row-end',\n  'grid-row-start',\n  'grid-template',\n  'grid-template-areas',\n  'grid-template-columns',\n  'grid-template-rows',\n  'hanging-punctuation',\n  'height',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'inline-size',\n  'isolation',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-break',\n  'line-height',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-block',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'marks',\n  'mask',\n  'mask-border',\n  'mask-border-mode',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-border-slice',\n  'mask-border-source',\n  'mask-border-width',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'min-block-size',\n  'min-height',\n  'min-inline-size',\n  'min-width',\n  'mix-blend-mode',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'padding',\n  'padding-block',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'pause',\n  'pause-after',\n  'pause-before',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'position',\n  'quotes',\n  'resize',\n  'rest',\n  'rest-after',\n  'rest-before',\n  'right',\n  'row-gap',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-stop',\n  'scroll-snap-type',\n  'scrollbar-color',\n  'scrollbar-gutter',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'speak',\n  'speak-as',\n  'src', // @font-face\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-all',\n  'text-align-last',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-style',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-position',\n  'top',\n  'transform',\n  'transform-box',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'vertical-align',\n  'visibility',\n  'voice-balance',\n  'voice-duration',\n  'voice-family',\n  'voice-pitch',\n  'voice-range',\n  'voice-rate',\n  'voice-stress',\n  'voice-volume',\n  'white-space',\n  'widows',\n  'width',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'writing-mode',\n  'z-index'\n  // reverse makes sure longer attributes `font-weight` are matched fully\n  // instead of getting false positives on say `font`\n].reverse();\n\n/*\nLanguage: SCSS\nDescription: Scss is an extension of the syntax of CSS.\nAuthor: Kurt Emch <kurt@kurtemch.com>\nWebsite: https://sass-lang.com\nCategory: common, css, web\n*/\n\n/** @type LanguageFn */\nfunction scss(hljs) {\n  const modes = MODES(hljs);\n  const PSEUDO_ELEMENTS$1 = PSEUDO_ELEMENTS;\n  const PSEUDO_CLASSES$1 = PSEUDO_CLASSES;\n\n  const AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  const AT_MODIFIERS = \"and or not only\";\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  const VARIABLE = {\n    className: 'variable',\n    begin: '(\\\\$' + IDENT_RE + ')\\\\b',\n    relevance: 0\n  };\n\n  return {\n    name: 'SCSS',\n    case_insensitive: true,\n    illegal: '[=/|\\']',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      // to recognize keyframe 40% etc which are outside the scope of our\n      // attribute value mode\n      modes.CSS_NUMBER_MODE,\n      {\n        className: 'selector-id',\n        begin: '#[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      {\n        className: 'selector-class',\n        begin: '\\\\.[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-tag',\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\n        // was there, before, but why?\n        relevance: 0\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(' + PSEUDO_CLASSES$1.join('|') + ')'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(:)?(' + PSEUDO_ELEMENTS$1.join('|') + ')'\n      },\n      VARIABLE,\n      { // pseudo-selector params\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ modes.CSS_NUMBER_MODE ]\n      },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\n      },\n      { begin: '\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b' },\n      {\n        begin: /:/,\n        end: /[;}{]/,\n        relevance: 0,\n        contains: [\n          modes.BLOCK_COMMENT,\n          VARIABLE,\n          modes.HEXCOLOR,\n          modes.CSS_NUMBER_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          modes.IMPORTANT,\n          modes.FUNCTION_DISPATCH\n        ]\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        keywords: {\n          $pattern: AT_IDENTIFIER,\n          keyword: '@page @font-face'\n        }\n      },\n      {\n        begin: '@',\n        end: '[{;]',\n        returnBegin: true,\n        keywords: {\n          $pattern: /[a-z-]+/,\n          keyword: AT_MODIFIERS,\n          attribute: MEDIA_FEATURES.join(\" \")\n        },\n        contains: [\n          {\n            begin: AT_IDENTIFIER,\n            className: \"keyword\"\n          },\n          {\n            begin: /[a-z-]+(?=:)/,\n            className: \"attribute\"\n          },\n          VARIABLE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          modes.HEXCOLOR,\n          modes.CSS_NUMBER_MODE\n        ]\n      },\n      modes.FUNCTION_DISPATCH\n    ]\n  };\n}\n\nexport { scss as default };\n","/*\nLanguage: Shell Session\nRequires: bash.js\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\nCategory: common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction shell(hljs) {\n  return {\n    name: 'Shell Session',\n    aliases: [\n      'console',\n      'shellsession'\n    ],\n    contains: [\n      {\n        className: 'meta.prompt',\n        // We cannot add \\s (spaces) in the regular expression otherwise it will be too broad and produce unexpected result.\n        // For instance, in the following example, it would match \"echo /path/to/home >\" as a prompt:\n        // echo /path/to/home > t.exe\n        begin: /^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#][ ]?/,\n        starts: {\n          end: /[^\\\\](?=\\s*$)/,\n          subLanguage: 'bash'\n        }\n      }\n    ]\n  };\n}\n\nexport { shell as default };\n","/*\n Language: SQL\n Website: https://en.wikipedia.org/wiki/SQL\n Category: common, database\n */\n\n/*\n\nGoals:\n\nSQL is intended to highlight basic/common SQL keywords and expressions\n\n- If pretty much every single SQL server includes supports, then it's a canidate.\n- It is NOT intended to include tons of vendor specific keywords (Oracle, MySQL,\n  PostgreSQL) although the list of data types is purposely a bit more expansive.\n- For more specific SQL grammars please see:\n  - PostgreSQL and PL/pgSQL - core\n  - T-SQL - https://github.com/highlightjs/highlightjs-tsql\n  - sql_more (core)\n\n */\n\nfunction sql(hljs) {\n  const regex = hljs.regex;\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /'/,\n        end: /'/,\n        contains: [ { begin: /''/ } ]\n      }\n    ]\n  };\n  const QUOTED_IDENTIFIER = {\n    begin: /\"/,\n    end: /\"/,\n    contains: [ { begin: /\"\"/ } ]\n  };\n\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n    // \"null\",\n    \"unknown\"\n  ];\n\n  const MULTI_WORD_TYPES = [\n    \"double precision\",\n    \"large object\",\n    \"with timezone\",\n    \"without timezone\"\n  ];\n\n  const TYPES = [\n    'bigint',\n    'binary',\n    'blob',\n    'boolean',\n    'char',\n    'character',\n    'clob',\n    'date',\n    'dec',\n    'decfloat',\n    'decimal',\n    'float',\n    'int',\n    'integer',\n    'interval',\n    'nchar',\n    'nclob',\n    'national',\n    'numeric',\n    'real',\n    'row',\n    'smallint',\n    'time',\n    'timestamp',\n    'varchar',\n    'varying', // modifier (character varying)\n    'varbinary'\n  ];\n\n  const NON_RESERVED_WORDS = [\n    \"add\",\n    \"asc\",\n    \"collation\",\n    \"desc\",\n    \"final\",\n    \"first\",\n    \"last\",\n    \"view\"\n  ];\n\n  // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\n  const RESERVED_WORDS = [\n    \"abs\",\n    \"acos\",\n    \"all\",\n    \"allocate\",\n    \"alter\",\n    \"and\",\n    \"any\",\n    \"are\",\n    \"array\",\n    \"array_agg\",\n    \"array_max_cardinality\",\n    \"as\",\n    \"asensitive\",\n    \"asin\",\n    \"asymmetric\",\n    \"at\",\n    \"atan\",\n    \"atomic\",\n    \"authorization\",\n    \"avg\",\n    \"begin\",\n    \"begin_frame\",\n    \"begin_partition\",\n    \"between\",\n    \"bigint\",\n    \"binary\",\n    \"blob\",\n    \"boolean\",\n    \"both\",\n    \"by\",\n    \"call\",\n    \"called\",\n    \"cardinality\",\n    \"cascaded\",\n    \"case\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"char\",\n    \"char_length\",\n    \"character\",\n    \"character_length\",\n    \"check\",\n    \"classifier\",\n    \"clob\",\n    \"close\",\n    \"coalesce\",\n    \"collate\",\n    \"collect\",\n    \"column\",\n    \"commit\",\n    \"condition\",\n    \"connect\",\n    \"constraint\",\n    \"contains\",\n    \"convert\",\n    \"copy\",\n    \"corr\",\n    \"corresponding\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"create\",\n    \"cross\",\n    \"cube\",\n    \"cume_dist\",\n    \"current\",\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_row\",\n    \"current_schema\",\n    \"current_time\",\n    \"current_timestamp\",\n    \"current_path\",\n    \"current_role\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"cursor\",\n    \"cycle\",\n    \"date\",\n    \"day\",\n    \"deallocate\",\n    \"dec\",\n    \"decimal\",\n    \"decfloat\",\n    \"declare\",\n    \"default\",\n    \"define\",\n    \"delete\",\n    \"dense_rank\",\n    \"deref\",\n    \"describe\",\n    \"deterministic\",\n    \"disconnect\",\n    \"distinct\",\n    \"double\",\n    \"drop\",\n    \"dynamic\",\n    \"each\",\n    \"element\",\n    \"else\",\n    \"empty\",\n    \"end\",\n    \"end_frame\",\n    \"end_partition\",\n    \"end-exec\",\n    \"equals\",\n    \"escape\",\n    \"every\",\n    \"except\",\n    \"exec\",\n    \"execute\",\n    \"exists\",\n    \"exp\",\n    \"external\",\n    \"extract\",\n    \"false\",\n    \"fetch\",\n    \"filter\",\n    \"first_value\",\n    \"float\",\n    \"floor\",\n    \"for\",\n    \"foreign\",\n    \"frame_row\",\n    \"free\",\n    \"from\",\n    \"full\",\n    \"function\",\n    \"fusion\",\n    \"get\",\n    \"global\",\n    \"grant\",\n    \"group\",\n    \"grouping\",\n    \"groups\",\n    \"having\",\n    \"hold\",\n    \"hour\",\n    \"identity\",\n    \"in\",\n    \"indicator\",\n    \"initial\",\n    \"inner\",\n    \"inout\",\n    \"insensitive\",\n    \"insert\",\n    \"int\",\n    \"integer\",\n    \"intersect\",\n    \"intersection\",\n    \"interval\",\n    \"into\",\n    \"is\",\n    \"join\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"language\",\n    \"large\",\n    \"last_value\",\n    \"lateral\",\n    \"lead\",\n    \"leading\",\n    \"left\",\n    \"like\",\n    \"like_regex\",\n    \"listagg\",\n    \"ln\",\n    \"local\",\n    \"localtime\",\n    \"localtimestamp\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"match\",\n    \"match_number\",\n    \"match_recognize\",\n    \"matches\",\n    \"max\",\n    \"member\",\n    \"merge\",\n    \"method\",\n    \"min\",\n    \"minute\",\n    \"mod\",\n    \"modifies\",\n    \"module\",\n    \"month\",\n    \"multiset\",\n    \"national\",\n    \"natural\",\n    \"nchar\",\n    \"nclob\",\n    \"new\",\n    \"no\",\n    \"none\",\n    \"normalize\",\n    \"not\",\n    \"nth_value\",\n    \"ntile\",\n    \"null\",\n    \"nullif\",\n    \"numeric\",\n    \"octet_length\",\n    \"occurrences_regex\",\n    \"of\",\n    \"offset\",\n    \"old\",\n    \"omit\",\n    \"on\",\n    \"one\",\n    \"only\",\n    \"open\",\n    \"or\",\n    \"order\",\n    \"out\",\n    \"outer\",\n    \"over\",\n    \"overlaps\",\n    \"overlay\",\n    \"parameter\",\n    \"partition\",\n    \"pattern\",\n    \"per\",\n    \"percent\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"period\",\n    \"portion\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"precedes\",\n    \"precision\",\n    \"prepare\",\n    \"primary\",\n    \"procedure\",\n    \"ptf\",\n    \"range\",\n    \"rank\",\n    \"reads\",\n    \"real\",\n    \"recursive\",\n    \"ref\",\n    \"references\",\n    \"referencing\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"release\",\n    \"result\",\n    \"return\",\n    \"returns\",\n    \"revoke\",\n    \"right\",\n    \"rollback\",\n    \"rollup\",\n    \"row\",\n    \"row_number\",\n    \"rows\",\n    \"running\",\n    \"savepoint\",\n    \"scope\",\n    \"scroll\",\n    \"search\",\n    \"second\",\n    \"seek\",\n    \"select\",\n    \"sensitive\",\n    \"session_user\",\n    \"set\",\n    \"show\",\n    \"similar\",\n    \"sin\",\n    \"sinh\",\n    \"skip\",\n    \"smallint\",\n    \"some\",\n    \"specific\",\n    \"specifictype\",\n    \"sql\",\n    \"sqlexception\",\n    \"sqlstate\",\n    \"sqlwarning\",\n    \"sqrt\",\n    \"start\",\n    \"static\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"submultiset\",\n    \"subset\",\n    \"substring\",\n    \"substring_regex\",\n    \"succeeds\",\n    \"sum\",\n    \"symmetric\",\n    \"system\",\n    \"system_time\",\n    \"system_user\",\n    \"table\",\n    \"tablesample\",\n    \"tan\",\n    \"tanh\",\n    \"then\",\n    \"time\",\n    \"timestamp\",\n    \"timezone_hour\",\n    \"timezone_minute\",\n    \"to\",\n    \"trailing\",\n    \"translate\",\n    \"translate_regex\",\n    \"translation\",\n    \"treat\",\n    \"trigger\",\n    \"trim\",\n    \"trim_array\",\n    \"true\",\n    \"truncate\",\n    \"uescape\",\n    \"union\",\n    \"unique\",\n    \"unknown\",\n    \"unnest\",\n    \"update\",\n    \"upper\",\n    \"user\",\n    \"using\",\n    \"value\",\n    \"values\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"varbinary\",\n    \"varchar\",\n    \"varying\",\n    \"versioning\",\n    \"when\",\n    \"whenever\",\n    \"where\",\n    \"width_bucket\",\n    \"window\",\n    \"with\",\n    \"within\",\n    \"without\",\n    \"year\",\n  ];\n\n  // these are reserved words we have identified to be functions\n  // and should only be highlighted in a dispatch-like context\n  // ie, array_agg(...), etc.\n  const RESERVED_FUNCTIONS = [\n    \"abs\",\n    \"acos\",\n    \"array_agg\",\n    \"asin\",\n    \"atan\",\n    \"avg\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"coalesce\",\n    \"corr\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"cume_dist\",\n    \"dense_rank\",\n    \"deref\",\n    \"element\",\n    \"exp\",\n    \"extract\",\n    \"first_value\",\n    \"floor\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"last_value\",\n    \"lead\",\n    \"listagg\",\n    \"ln\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"max\",\n    \"min\",\n    \"mod\",\n    \"nth_value\",\n    \"ntile\",\n    \"nullif\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"rank\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"row_number\",\n    \"sin\",\n    \"sinh\",\n    \"sqrt\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"substring\",\n    \"substring_regex\",\n    \"sum\",\n    \"tan\",\n    \"tanh\",\n    \"translate\",\n    \"translate_regex\",\n    \"treat\",\n    \"trim\",\n    \"trim_array\",\n    \"unnest\",\n    \"upper\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"width_bucket\",\n  ];\n\n  // these functions can\n  const POSSIBLE_WITHOUT_PARENS = [\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_schema\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"session_user\",\n    \"system_time\",\n    \"system_user\",\n    \"current_time\",\n    \"localtime\",\n    \"current_timestamp\",\n    \"localtimestamp\"\n  ];\n\n  // those exist to boost relevance making these very\n  // \"SQL like\" keyword combos worth +1 extra relevance\n  const COMBOS = [\n    \"create table\",\n    \"insert into\",\n    \"primary key\",\n    \"foreign key\",\n    \"not null\",\n    \"alter table\",\n    \"add constraint\",\n    \"grouping sets\",\n    \"on overflow\",\n    \"character set\",\n    \"respect nulls\",\n    \"ignore nulls\",\n    \"nulls first\",\n    \"nulls last\",\n    \"depth first\",\n    \"breadth first\"\n  ];\n\n  const FUNCTIONS = RESERVED_FUNCTIONS;\n\n  const KEYWORDS = [\n    ...RESERVED_WORDS,\n    ...NON_RESERVED_WORDS\n  ].filter((keyword) => {\n    return !RESERVED_FUNCTIONS.includes(keyword);\n  });\n\n  const VARIABLE = {\n    className: \"variable\",\n    begin: /@[a-z0-9][a-z0-9_]*/,\n  };\n\n  const OPERATOR = {\n    className: \"operator\",\n    begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n    relevance: 0,\n  };\n\n  const FUNCTION_CALL = {\n    begin: regex.concat(/\\b/, regex.either(...FUNCTIONS), /\\s*\\(/),\n    relevance: 0,\n    keywords: { built_in: FUNCTIONS }\n  };\n\n  // keywords with less than 3 letters are reduced in relevancy\n  function reduceRelevancy(list, {\n    exceptions, when\n  } = {}) {\n    const qualifyFn = when;\n    exceptions = exceptions || [];\n    return list.map((item) => {\n      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\n        return item;\n      } else if (qualifyFn(item)) {\n        return `${item}|0`;\n      } else {\n        return item;\n      }\n    });\n  }\n\n  return {\n    name: 'SQL',\n    case_insensitive: true,\n    // does not include {} or HTML tags `</`\n    illegal: /[{}]|<\\//,\n    keywords: {\n      $pattern: /\\b[\\w\\.]+/,\n      keyword:\n        reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),\n      literal: LITERALS,\n      type: TYPES,\n      built_in: POSSIBLE_WITHOUT_PARENS\n    },\n    contains: [\n      {\n        begin: regex.either(...COMBOS),\n        relevance: 0,\n        keywords: {\n          $pattern: /[\\w\\.]+/,\n          keyword: KEYWORDS.concat(COMBOS),\n          literal: LITERALS,\n          type: TYPES\n        },\n      },\n      {\n        className: \"type\",\n        begin: regex.either(...MULTI_WORD_TYPES)\n      },\n      FUNCTION_CALL,\n      VARIABLE,\n      STRING,\n      QUOTED_IDENTIFIER,\n      hljs.C_NUMBER_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE,\n      OPERATOR\n    ]\n  };\n}\n\nexport { sql as default };\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\nconst keywordWrapper = keyword => concat(\n  /\\b/,\n  keyword,\n  /\\w$/.test(keyword) ? /\\b/ : /\\B/\n);\n\n// Keywords that require a leading dot.\nconst dotKeywords = [\n  'Protocol', // contextual\n  'Type' // contextual\n].map(keywordWrapper);\n\n// Keywords that may have a leading dot.\nconst optionalDotKeywords = [\n  'init',\n  'self'\n].map(keywordWrapper);\n\n// should register as keyword, not type\nconst keywordTypes = [\n  'Any',\n  'Self'\n];\n\n// Regular keywords and literals.\nconst keywords = [\n  // strings below will be fed into the regular `keywords` engine while regex\n  // will result in additional modes being created to scan for those keywords to\n  // avoid conflicts with other rules\n  'actor',\n  'any', // contextual\n  'associatedtype',\n  'async',\n  'await',\n  /as\\?/, // operator\n  /as!/, // operator\n  'as', // operator\n  'break',\n  'case',\n  'catch',\n  'class',\n  'continue',\n  'convenience', // contextual\n  'default',\n  'defer',\n  'deinit',\n  'didSet', // contextual\n  'distributed',\n  'do',\n  'dynamic', // contextual\n  'else',\n  'enum',\n  'extension',\n  'fallthrough',\n  /fileprivate\\(set\\)/,\n  'fileprivate',\n  'final', // contextual\n  'for',\n  'func',\n  'get', // contextual\n  'guard',\n  'if',\n  'import',\n  'indirect', // contextual\n  'infix', // contextual\n  /init\\?/,\n  /init!/,\n  'inout',\n  /internal\\(set\\)/,\n  'internal',\n  'in',\n  'is', // operator\n  'isolated', // contextual\n  'nonisolated', // contextual\n  'lazy', // contextual\n  'let',\n  'mutating', // contextual\n  'nonmutating', // contextual\n  /open\\(set\\)/, // contextual\n  'open', // contextual\n  'operator',\n  'optional', // contextual\n  'override', // contextual\n  'postfix', // contextual\n  'precedencegroup',\n  'prefix', // contextual\n  /private\\(set\\)/,\n  'private',\n  'protocol',\n  /public\\(set\\)/,\n  'public',\n  'repeat',\n  'required', // contextual\n  'rethrows',\n  'return',\n  'set', // contextual\n  'some', // contextual\n  'static',\n  'struct',\n  'subscript',\n  'super',\n  'switch',\n  'throws',\n  'throw',\n  /try\\?/, // operator\n  /try!/, // operator\n  'try', // operator\n  'typealias',\n  /unowned\\(safe\\)/, // contextual\n  /unowned\\(unsafe\\)/, // contextual\n  'unowned', // contextual\n  'var',\n  'weak', // contextual\n  'where',\n  'while',\n  'willSet' // contextual\n];\n\n// NOTE: Contextual keywords are reserved only in specific contexts.\n// Ideally, these should be matched using modes to avoid false positives.\n\n// Literals.\nconst literals = [\n  'false',\n  'nil',\n  'true'\n];\n\n// Keywords used in precedence groups.\nconst precedencegroupKeywords = [\n  'assignment',\n  'associativity',\n  'higherThan',\n  'left',\n  'lowerThan',\n  'none',\n  'right'\n];\n\n// Keywords that start with a number sign (#).\n// #(un)available is handled separately.\nconst numberSignKeywords = [\n  '#colorLiteral',\n  '#column',\n  '#dsohandle',\n  '#else',\n  '#elseif',\n  '#endif',\n  '#error',\n  '#file',\n  '#fileID',\n  '#fileLiteral',\n  '#filePath',\n  '#function',\n  '#if',\n  '#imageLiteral',\n  '#keyPath',\n  '#line',\n  '#selector',\n  '#sourceLocation',\n  '#warn_unqualified_access',\n  '#warning'\n];\n\n// Global functions in the Standard Library.\nconst builtIns = [\n  'abs',\n  'all',\n  'any',\n  'assert',\n  'assertionFailure',\n  'debugPrint',\n  'dump',\n  'fatalError',\n  'getVaList',\n  'isKnownUniquelyReferenced',\n  'max',\n  'min',\n  'numericCast',\n  'pointwiseMax',\n  'pointwiseMin',\n  'precondition',\n  'preconditionFailure',\n  'print',\n  'readLine',\n  'repeatElement',\n  'sequence',\n  'stride',\n  'swap',\n  'swift_unboxFromSwiftValueWithType',\n  'transcode',\n  'type',\n  'unsafeBitCast',\n  'unsafeDowncast',\n  'withExtendedLifetime',\n  'withUnsafeMutablePointer',\n  'withUnsafePointer',\n  'withVaList',\n  'withoutActuallyEscaping',\n  'zip'\n];\n\n// Valid first characters for operators.\nconst operatorHead = either(\n  /[/=\\-+!*%<>&|^~?]/,\n  /[\\u00A1-\\u00A7]/,\n  /[\\u00A9\\u00AB]/,\n  /[\\u00AC\\u00AE]/,\n  /[\\u00B0\\u00B1]/,\n  /[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/,\n  /[\\u2016-\\u2017]/,\n  /[\\u2020-\\u2027]/,\n  /[\\u2030-\\u203E]/,\n  /[\\u2041-\\u2053]/,\n  /[\\u2055-\\u205E]/,\n  /[\\u2190-\\u23FF]/,\n  /[\\u2500-\\u2775]/,\n  /[\\u2794-\\u2BFF]/,\n  /[\\u2E00-\\u2E7F]/,\n  /[\\u3001-\\u3003]/,\n  /[\\u3008-\\u3020]/,\n  /[\\u3030]/\n);\n\n// Valid characters for operators.\nconst operatorCharacter = either(\n  operatorHead,\n  /[\\u0300-\\u036F]/,\n  /[\\u1DC0-\\u1DFF]/,\n  /[\\u20D0-\\u20FF]/,\n  /[\\uFE00-\\uFE0F]/,\n  /[\\uFE20-\\uFE2F]/\n  // TODO: The following characters are also allowed, but the regex isn't supported yet.\n  // /[\\u{E0100}-\\u{E01EF}]/u\n);\n\n// Valid operator.\nconst operator = concat(operatorHead, operatorCharacter, '*');\n\n// Valid first characters for identifiers.\nconst identifierHead = either(\n  /[a-zA-Z_]/,\n  /[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/,\n  /[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/,\n  /[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/,\n  /[\\u1E00-\\u1FFF]/,\n  /[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/,\n  /[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/,\n  /[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/,\n  /[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/,\n  /[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/,\n  /[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/ // Should be /[\\uFE47-\\uFFFD]/, but we have to exclude FEFF.\n  // The following characters are also allowed, but the regexes aren't supported yet.\n  // /[\\u{10000}-\\u{1FFFD}\\u{20000-\\u{2FFFD}\\u{30000}-\\u{3FFFD}\\u{40000}-\\u{4FFFD}]/u,\n  // /[\\u{50000}-\\u{5FFFD}\\u{60000-\\u{6FFFD}\\u{70000}-\\u{7FFFD}\\u{80000}-\\u{8FFFD}]/u,\n  // /[\\u{90000}-\\u{9FFFD}\\u{A0000-\\u{AFFFD}\\u{B0000}-\\u{BFFFD}\\u{C0000}-\\u{CFFFD}]/u,\n  // /[\\u{D0000}-\\u{DFFFD}\\u{E0000-\\u{EFFFD}]/u\n);\n\n// Valid characters for identifiers.\nconst identifierCharacter = either(\n  identifierHead,\n  /\\d/,\n  /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/\n);\n\n// Valid identifier.\nconst identifier = concat(identifierHead, identifierCharacter, '*');\n\n// Valid type identifier.\nconst typeIdentifier = concat(/[A-Z]/, identifierCharacter, '*');\n\n// Built-in attributes, which are highlighted as keywords.\n// @available is handled separately.\nconst keywordAttributes = [\n  'autoclosure',\n  concat(/convention\\(/, either('swift', 'block', 'c'), /\\)/),\n  'discardableResult',\n  'dynamicCallable',\n  'dynamicMemberLookup',\n  'escaping',\n  'frozen',\n  'GKInspectable',\n  'IBAction',\n  'IBDesignable',\n  'IBInspectable',\n  'IBOutlet',\n  'IBSegueAction',\n  'inlinable',\n  'main',\n  'nonobjc',\n  'NSApplicationMain',\n  'NSCopying',\n  'NSManaged',\n  concat(/objc\\(/, identifier, /\\)/),\n  'objc',\n  'objcMembers',\n  'propertyWrapper',\n  'requires_stored_property_inits',\n  'resultBuilder',\n  'testable',\n  'UIApplicationMain',\n  'unknown',\n  'usableFromInline'\n];\n\n// Contextual keywords used in @available and #(un)available.\nconst availabilityKeywords = [\n  'iOS',\n  'iOSApplicationExtension',\n  'macOS',\n  'macOSApplicationExtension',\n  'macCatalyst',\n  'macCatalystApplicationExtension',\n  'watchOS',\n  'watchOSApplicationExtension',\n  'tvOS',\n  'tvOSApplicationExtension',\n  'swift'\n];\n\n/*\nLanguage: Swift\nDescription: Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.\nAuthor: Steven Van Impe <steven.vanimpe@icloud.com>\nContributors: Chris Eidhof <chris@eidhof.nl>, Nate Cook <natecook@gmail.com>, Alexander Lichter <manniL@gmx.net>, Richard Gibson <gibson042@github>\nWebsite: https://swift.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\nfunction swift(hljs) {\n  const WHITESPACE = {\n    match: /\\s+/,\n    relevance: 0\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID411\n  const BLOCK_COMMENT = hljs.COMMENT(\n    '/\\\\*',\n    '\\\\*/',\n    { contains: [ 'self' ] }\n  );\n  const COMMENTS = [\n    hljs.C_LINE_COMMENT_MODE,\n    BLOCK_COMMENT\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID413\n  // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html\n  const DOT_KEYWORD = {\n    match: [\n      /\\./,\n      either(...dotKeywords, ...optionalDotKeywords)\n    ],\n    className: { 2: \"keyword\" }\n  };\n  const KEYWORD_GUARD = {\n    // Consume .keyword to prevent highlighting properties and methods as keywords.\n    match: concat(/\\./, either(...keywords)),\n    relevance: 0\n  };\n  const PLAIN_KEYWORDS = keywords\n    .filter(kw => typeof kw === 'string')\n    .concat([ \"_|0\" ]); // seems common, so 0 relevance\n  const REGEX_KEYWORDS = keywords\n    .filter(kw => typeof kw !== 'string') // find regex\n    .concat(keywordTypes)\n    .map(keywordWrapper);\n  const KEYWORD = { variants: [\n    {\n      className: 'keyword',\n      match: either(...REGEX_KEYWORDS, ...optionalDotKeywords)\n    }\n  ] };\n  // find all the regular keywords\n  const KEYWORDS = {\n    $pattern: either(\n      /\\b\\w+/, // regular keywords\n      /#\\w+/ // number keywords\n    ),\n    keyword: PLAIN_KEYWORDS\n      .concat(numberSignKeywords),\n    literal: literals\n  };\n  const KEYWORD_MODES = [\n    DOT_KEYWORD,\n    KEYWORD_GUARD,\n    KEYWORD\n  ];\n\n  // https://github.com/apple/swift/tree/main/stdlib/public/core\n  const BUILT_IN_GUARD = {\n    // Consume .built_in to prevent highlighting properties and methods.\n    match: concat(/\\./, either(...builtIns)),\n    relevance: 0\n  };\n  const BUILT_IN = {\n    className: 'built_in',\n    match: concat(/\\b/, either(...builtIns), /(?=\\()/)\n  };\n  const BUILT_INS = [\n    BUILT_IN_GUARD,\n    BUILT_IN\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID418\n  const OPERATOR_GUARD = {\n    // Prevent -> from being highlighting as an operator.\n    match: /->/,\n    relevance: 0\n  };\n  const OPERATOR = {\n    className: 'operator',\n    relevance: 0,\n    variants: [\n      { match: operator },\n      {\n        // dot-operator: only operators that start with a dot are allowed to use dots as\n        // characters (..., ...<, .*, etc). So there rule here is: a dot followed by one or more\n        // characters that may also include dots.\n        match: `\\\\.(\\\\.|${operatorCharacter})+` }\n    ]\n  };\n  const OPERATORS = [\n    OPERATOR_GUARD,\n    OPERATOR\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_numeric-literal\n  // TODO: Update for leading `-` after lookbehind is supported everywhere\n  const decimalDigits = '([0-9]_*)+';\n  const hexDigits = '([0-9a-fA-F]_*)+';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal floating-point-literal (subsumes decimal-literal)\n      { match: `\\\\b(${decimalDigits})(\\\\.(${decimalDigits}))?` + `([eE][+-]?(${decimalDigits}))?\\\\b` },\n      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\n      { match: `\\\\b0x(${hexDigits})(\\\\.(${hexDigits}))?` + `([pP][+-]?(${decimalDigits}))?\\\\b` },\n      // octal-literal\n      { match: /\\b0o([0-7]_*)+\\b/ },\n      // binary-literal\n      { match: /\\b0b([01]_*)+\\b/ }\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_string-literal\n  const ESCAPED_CHARACTER = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    variants: [\n      { match: concat(/\\\\/, rawDelimiter, /[0\\\\tnr\"']/) },\n      { match: concat(/\\\\/, rawDelimiter, /u\\{[0-9a-fA-F]{1,8}\\}/) }\n    ]\n  });\n  const ESCAPED_NEWLINE = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    match: concat(/\\\\/, rawDelimiter, /[\\t ]*(?:[\\r\\n]|\\r\\n)/)\n  });\n  const INTERPOLATION = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    label: \"interpol\",\n    begin: concat(/\\\\/, rawDelimiter, /\\(/),\n    end: /\\)/\n  });\n  const MULTILINE_STRING = (rawDelimiter = \"\") => ({\n    begin: concat(rawDelimiter, /\"\"\"/),\n    end: concat(/\"\"\"/, rawDelimiter),\n    contains: [\n      ESCAPED_CHARACTER(rawDelimiter),\n      ESCAPED_NEWLINE(rawDelimiter),\n      INTERPOLATION(rawDelimiter)\n    ]\n  });\n  const SINGLE_LINE_STRING = (rawDelimiter = \"\") => ({\n    begin: concat(rawDelimiter, /\"/),\n    end: concat(/\"/, rawDelimiter),\n    contains: [\n      ESCAPED_CHARACTER(rawDelimiter),\n      INTERPOLATION(rawDelimiter)\n    ]\n  });\n  const STRING = {\n    className: 'string',\n    variants: [\n      MULTILINE_STRING(),\n      MULTILINE_STRING(\"#\"),\n      MULTILINE_STRING(\"##\"),\n      MULTILINE_STRING(\"###\"),\n      SINGLE_LINE_STRING(),\n      SINGLE_LINE_STRING(\"#\"),\n      SINGLE_LINE_STRING(\"##\"),\n      SINGLE_LINE_STRING(\"###\")\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID412\n  const QUOTED_IDENTIFIER = { match: concat(/`/, identifier, /`/) };\n  const IMPLICIT_PARAMETER = {\n    className: 'variable',\n    match: /\\$\\d+/\n  };\n  const PROPERTY_WRAPPER_PROJECTION = {\n    className: 'variable',\n    match: `\\\\$${identifierCharacter}+`\n  };\n  const IDENTIFIERS = [\n    QUOTED_IDENTIFIER,\n    IMPLICIT_PARAMETER,\n    PROPERTY_WRAPPER_PROJECTION\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Attributes.html\n  const AVAILABLE_ATTRIBUTE = {\n    match: /(@|#(un)?)available/,\n    className: \"keyword\",\n    starts: { contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: availabilityKeywords,\n        contains: [\n          ...OPERATORS,\n          NUMBER,\n          STRING\n        ]\n      }\n    ] }\n  };\n  const KEYWORD_ATTRIBUTE = {\n    className: 'keyword',\n    match: concat(/@/, either(...keywordAttributes))\n  };\n  const USER_DEFINED_ATTRIBUTE = {\n    className: 'meta',\n    match: concat(/@/, identifier)\n  };\n  const ATTRIBUTES = [\n    AVAILABLE_ATTRIBUTE,\n    KEYWORD_ATTRIBUTE,\n    USER_DEFINED_ATTRIBUTE\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Types.html\n  const TYPE = {\n    match: lookahead(/\\b[A-Z]/),\n    relevance: 0,\n    contains: [\n      { // Common Apple frameworks, for relevance boost\n        className: 'type',\n        match: concat(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, identifierCharacter, '+')\n      },\n      { // Type identifier\n        className: 'type',\n        match: typeIdentifier,\n        relevance: 0\n      },\n      { // Optional type\n        match: /[?!]+/,\n        relevance: 0\n      },\n      { // Variadic parameter\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      { // Protocol composition\n        match: concat(/\\s+&\\s+/, lookahead(typeIdentifier)),\n        relevance: 0\n      }\n    ]\n  };\n  const GENERIC_ARGUMENTS = {\n    begin: /</,\n    end: />/,\n    keywords: KEYWORDS,\n    contains: [\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...ATTRIBUTES,\n      OPERATOR_GUARD,\n      TYPE\n    ]\n  };\n  TYPE.contains.push(GENERIC_ARGUMENTS);\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID552\n  // Prevents element names from being highlighted as keywords.\n  const TUPLE_ELEMENT_NAME = {\n    match: concat(identifier, /\\s*:/),\n    keywords: \"_|0\",\n    relevance: 0\n  };\n  // Matches tuples as well as the parameter list of a function type.\n  const TUPLE = {\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0,\n    keywords: KEYWORDS,\n    contains: [\n      'self',\n      TUPLE_ELEMENT_NAME,\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS,\n      ...ATTRIBUTES,\n      TYPE\n    ]\n  };\n\n  const GENERIC_PARAMETERS = {\n    begin: /</,\n    end: />/,\n    contains: [\n      ...COMMENTS,\n      TYPE\n    ]\n  };\n  const FUNCTION_PARAMETER_NAME = {\n    begin: either(\n      lookahead(concat(identifier, /\\s*:/)),\n      lookahead(concat(identifier, /\\s+/, identifier, /\\s*:/))\n    ),\n    end: /:/,\n    relevance: 0,\n    contains: [\n      {\n        className: 'keyword',\n        match: /\\b_\\b/\n      },\n      {\n        className: 'params',\n        match: identifier\n      }\n    ]\n  };\n  const FUNCTION_PARAMETERS = {\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [\n      FUNCTION_PARAMETER_NAME,\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...ATTRIBUTES,\n      TYPE,\n      TUPLE\n    ],\n    endsParent: true,\n    illegal: /[\"']/\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID362\n  const FUNCTION = {\n    match: [\n      /func/,\n      /\\s+/,\n      either(QUOTED_IDENTIFIER.match, identifier, operator)\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      GENERIC_PARAMETERS,\n      FUNCTION_PARAMETERS,\n      WHITESPACE\n    ],\n    illegal: [\n      /\\[/,\n      /%/\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID375\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID379\n  const INIT_SUBSCRIPT = {\n    match: [\n      /\\b(?:subscript|init[?!]?)/,\n      /\\s*(?=[<(])/,\n    ],\n    className: { 1: \"keyword\" },\n    contains: [\n      GENERIC_PARAMETERS,\n      FUNCTION_PARAMETERS,\n      WHITESPACE\n    ],\n    illegal: /\\[|%/\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID380\n  const OPERATOR_DECLARATION = {\n    match: [\n      /operator/,\n      /\\s+/,\n      operator\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title\"\n    }\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID550\n  const PRECEDENCEGROUP = {\n    begin: [\n      /precedencegroup/,\n      /\\s+/,\n      typeIdentifier\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title\"\n    },\n    contains: [ TYPE ],\n    keywords: [\n      ...precedencegroupKeywords,\n      ...literals\n    ],\n    end: /}/\n  };\n\n  // Add supported submodes to string interpolation.\n  for (const variant of STRING.variants) {\n    const interpolation = variant.contains.find(mode => mode.label === \"interpol\");\n    // TODO: Interpolation can contain any expression, so there's room for improvement here.\n    interpolation.keywords = KEYWORDS;\n    const submodes = [\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS\n    ];\n    interpolation.contains = [\n      ...submodes,\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          'self',\n          ...submodes\n        ]\n      }\n    ];\n  }\n\n  return {\n    name: 'Swift',\n    keywords: KEYWORDS,\n    contains: [\n      ...COMMENTS,\n      FUNCTION,\n      INIT_SUBSCRIPT,\n      {\n        beginKeywords: 'struct protocol class extension enum actor',\n        end: '\\\\{',\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            className: \"title.class\",\n            begin: /[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/\n          }),\n          ...KEYWORD_MODES\n        ]\n      },\n      OPERATOR_DECLARATION,\n      PRECEDENCEGROUP,\n      {\n        beginKeywords: 'import',\n        end: /$/,\n        contains: [ ...COMMENTS ],\n        relevance: 0\n      },\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS,\n      ...ATTRIBUTES,\n      TYPE,\n      TUPLE\n    ]\n  };\n}\n\nexport { swift as default };\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\nconst TYPES = [\n  // Fundamental objects\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Symbol\",\n  // numbers and dates\n  \"Math\",\n  \"Date\",\n  \"Number\",\n  \"BigInt\",\n  // text\n  \"String\",\n  \"RegExp\",\n  // Indexed collections\n  \"Array\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"Int8Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  // Keyed collections\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  // Structured data\n  \"ArrayBuffer\",\n  \"SharedArrayBuffer\",\n  \"Atomics\",\n  \"DataView\",\n  \"JSON\",\n  // Control abstraction objects\n  \"Promise\",\n  \"Generator\",\n  \"GeneratorFunction\",\n  \"AsyncFunction\",\n  // Reflection\n  \"Reflect\",\n  \"Proxy\",\n  // Internationalization\n  \"Intl\",\n  // WebAssembly\n  \"WebAssembly\"\n];\n\nconst ERROR_TYPES = [\n  \"Error\",\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"sessionStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  // to avoid some special cases inside isTrulyOpeningTag\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      if (\n        // HTML should not include another raw `<` inside a tag\n        // nested type?\n        // `<Array<Array<number>>`, etc.\n        nextChar === \"<\" ||\n        // the , gives away that this is not HTML\n        // `<T, A extends keyof T, V>`\n        nextChar === \",\"\n        ) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<something>`\n      // Quite possibly a tag, lets look for a matching closing tag...\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n\n      // `<blah />` (self-closing)\n      // handled by simpleSelfClosing rule\n\n      let m;\n      const afterMatch = match.input.substring(afterMatchIndex);\n\n      // some more template typing stuff\n      //  <T = any>(key?: string) => Modify<\n      if ((m = afterMatch.match(/^\\s*=/))) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<From extends string>`\n      // technically this could be HTML, but it smells like a type\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\n        if (m.index === 0) {\n          response.ignoreMatch();\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const GRAPHQL_TEMPLATE = {\n    begin: 'gql`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'graphql'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    GRAPHQL_TEMPLATE,\n    TEMPLATE_STRING,\n    // Skip numbers when they are part of a variable name\n    { match: /\\$\\d+/ },\n    NUMBER,\n    // This is intentional:\n    // See https://github.com/highlightjs/highlight.js/issues/3288\n    // hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      // class Car extends vehicle\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          5: \"keyword\",\n          7: \"title.class.inherited\"\n        }\n      },\n      // class Car\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match:\n    regex.either(\n      // Hard coded exceptions\n      /\\bJSON/,\n      // Float32Array, OutT\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n      // CSSFactory, CSSFactoryT\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n      // FPs, FPsT\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\n      // P\n      // single letters are not highlighted\n      // BLAH\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\n    ),\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\",\n        \"import\"\n      ]),\n      IDENT_RE$1, regex.lookahead(/\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      /(async\\s*)?/, // async is optional\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: \"async\",\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'JavaScript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      GRAPHQL_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        className: 'attr',\n        begin: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\n/*\nLanguage: TypeScript\nAuthor: Panu Horsmalahti <panu.horsmalahti@iki.fi>\nContributors: Ike Ku <dempfi@yahoo.com>\nDescription: TypeScript is a strict superset of JavaScript\nWebsite: https://www.typescriptlang.org\nCategory: common, scripting\n*/\n\n/** @type LanguageFn */\nfunction typescript(hljs) {\n  const tsLanguage = javascript(hljs);\n\n  const IDENT_RE$1 = IDENT_RE;\n  const TYPES = [\n    \"any\",\n    \"void\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    \"never\",\n    \"symbol\",\n    \"bigint\",\n    \"unknown\"\n  ];\n  const NAMESPACE = {\n    beginKeywords: 'namespace',\n    end: /\\{/,\n    excludeEnd: true,\n    contains: [ tsLanguage.exports.CLASS_REFERENCE ]\n  };\n  const INTERFACE = {\n    beginKeywords: 'interface',\n    end: /\\{/,\n    excludeEnd: true,\n    keywords: {\n      keyword: 'interface extends',\n      built_in: TYPES\n    },\n    contains: [ tsLanguage.exports.CLASS_REFERENCE ]\n  };\n  const USE_STRICT = {\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use strict['\"]/\n  };\n  const TS_SPECIFIC_KEYWORDS = [\n    \"type\",\n    \"namespace\",\n    \"interface\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"implements\",\n    \"declare\",\n    \"abstract\",\n    \"readonly\",\n    \"enum\",\n    \"override\"\n  ];\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),\n    literal: LITERALS,\n    built_in: BUILT_INS.concat(TYPES),\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n  const DECORATOR = {\n    className: 'meta',\n    begin: '@' + IDENT_RE$1,\n  };\n\n  const swapMode = (mode, label, replacement) => {\n    const indx = mode.contains.findIndex(m => m.label === label);\n    if (indx === -1) { throw new Error(\"can not find mode to replace\"); }\n\n    mode.contains.splice(indx, 1, replacement);\n  };\n\n\n  // this should update anywhere keywords is used since\n  // it will be the same actual JS object\n  Object.assign(tsLanguage.keywords, KEYWORDS$1);\n\n  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\n  tsLanguage.contains = tsLanguage.contains.concat([\n    DECORATOR,\n    NAMESPACE,\n    INTERFACE,\n  ]);\n\n  // TS gets a simpler shebang rule than JS\n  swapMode(tsLanguage, \"shebang\", hljs.SHEBANG());\n  // JS use strict rule purposely excludes `asm` which makes no sense\n  swapMode(tsLanguage, \"use_strict\", USE_STRICT);\n\n  const functionDeclaration = tsLanguage.contains.find(m => m.label === \"func.def\");\n  functionDeclaration.relevance = 0; // () => {} is more typical in TypeScript\n\n  Object.assign(tsLanguage, {\n    name: 'TypeScript',\n    aliases: [\n      'ts',\n      'tsx',\n      'mts',\n      'cts'\n    ]\n  });\n\n  return tsLanguage;\n}\n\nexport { typescript as default };\n","/*\nLanguage: Visual Basic .NET\nDescription: Visual Basic .NET (VB.NET) is a multi-paradigm, object-oriented programming language, implemented on the .NET Framework.\nAuthors: Poren Chiang <ren.chiang@gmail.com>, Jan Pilzer\nWebsite: https://docs.microsoft.com/dotnet/visual-basic/getting-started\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction vbnet(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Character Literal\n   * Either a single character (\"a\"C) or an escaped double quote (\"\"\"\"C).\n   */\n  const CHARACTER = {\n    className: 'string',\n    begin: /\"(\"\"|[^/n])\"C\\b/\n  };\n\n  const STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    illegal: /\\n/,\n    contains: [\n      {\n        // double quote escape\n        begin: /\"\"/ }\n    ]\n  };\n\n  /** Date Literals consist of a date, a time, or both separated by whitespace, surrounded by # */\n  const MM_DD_YYYY = /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/;\n  const YYYY_MM_DD = /\\d{4}-\\d{1,2}-\\d{1,2}/;\n  const TIME_12H = /(\\d|1[012])(:\\d+){0,2} *(AM|PM)/;\n  const TIME_24H = /\\d{1,2}(:\\d{1,2}){1,2}/;\n  const DATE = {\n    className: 'literal',\n    variants: [\n      {\n        // #YYYY-MM-DD# (ISO-Date) or #M/D/YYYY# (US-Date)\n        begin: regex.concat(/# */, regex.either(YYYY_MM_DD, MM_DD_YYYY), / *#/) },\n      {\n        // #H:mm[:ss]# (24h Time)\n        begin: regex.concat(/# */, TIME_24H, / *#/) },\n      {\n        // #h[:mm[:ss]] A# (12h Time)\n        begin: regex.concat(/# */, TIME_12H, / *#/) },\n      {\n        // date plus time\n        begin: regex.concat(\n          /# */,\n          regex.either(YYYY_MM_DD, MM_DD_YYYY),\n          / +/,\n          regex.either(TIME_12H, TIME_24H),\n          / *#/\n        ) }\n    ]\n  };\n\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        // Float\n        begin: /\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/ },\n      {\n        // Integer (base 10)\n        begin: /\\b\\d[\\d_]*((U?[SIL])|[%&])?/ },\n      {\n        // Integer (base 16)\n        begin: /&H[\\dA-F_]+((U?[SIL])|[%&])?/ },\n      {\n        // Integer (base 8)\n        begin: /&O[0-7_]+((U?[SIL])|[%&])?/ },\n      {\n        // Integer (base 2)\n        begin: /&B[01_]+((U?[SIL])|[%&])?/ }\n    ]\n  };\n\n  const LABEL = {\n    className: 'label',\n    begin: /^\\w+:/\n  };\n\n  const DOC_COMMENT = hljs.COMMENT(/'''/, /$/, { contains: [\n    {\n      className: 'doctag',\n      begin: /<\\/?/,\n      end: />/\n    }\n  ] });\n\n  const COMMENT = hljs.COMMENT(null, /$/, { variants: [\n    { begin: /'/ },\n    {\n      // TODO: Use multi-class for leading spaces\n      begin: /([\\t ]|^)REM(?=\\s)/ }\n  ] });\n\n  const DIRECTIVES = {\n    className: 'meta',\n    // TODO: Use multi-class for indentation once available\n    begin: /[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'const disable else elseif enable end externalsource if region then' },\n    contains: [ COMMENT ]\n  };\n\n  return {\n    name: 'Visual Basic .NET',\n    aliases: [ 'vb' ],\n    case_insensitive: true,\n    classNameAliases: { label: 'symbol' },\n    keywords: {\n      keyword:\n        'addhandler alias aggregate ansi as async assembly auto binary by byref byval ' /* a-b */\n        + 'call case catch class compare const continue custom declare default delegate dim distinct do ' /* c-d */\n        + 'each equals else elseif end enum erase error event exit explicit finally for friend from function ' /* e-f */\n        + 'get global goto group handles if implements imports in inherits interface into iterator ' /* g-i */\n        + 'join key let lib loop me mid module mustinherit mustoverride mybase myclass ' /* j-m */\n        + 'namespace narrowing new next notinheritable notoverridable ' /* n */\n        + 'of off on operator option optional order overloads overridable overrides ' /* o */\n        + 'paramarray partial preserve private property protected public ' /* p */\n        + 'raiseevent readonly redim removehandler resume return ' /* r */\n        + 'select set shadows shared skip static step stop structure strict sub synclock ' /* s */\n        + 'take text then throw to try unicode until using when where while widening with withevents writeonly yield' /* t-y */,\n      built_in:\n        // Operators https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators\n        'addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor '\n        // Type Conversion Functions https://docs.microsoft.com/dotnet/visual-basic/language-reference/functions/type-conversion-functions\n        + 'cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort',\n      type:\n        // Data types https://docs.microsoft.com/dotnet/visual-basic/language-reference/data-types\n        'boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort',\n      literal: 'true false nothing'\n    },\n    illegal:\n      '//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ ' /* reserved deprecated keywords */,\n    contains: [\n      CHARACTER,\n      STRING,\n      DATE,\n      NUMBER,\n      LABEL,\n      DOC_COMMENT,\n      COMMENT,\n      DIRECTIVES\n    ]\n  };\n}\n\nexport { vbnet as default };\n","/*\nLanguage: WebAssembly\nWebsite: https://webassembly.org\nDescription:  Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.\nCategory: web, common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction wasm(hljs) {\n  hljs.regex;\n  const BLOCK_COMMENT = hljs.COMMENT(/\\(;/, /;\\)/);\n  BLOCK_COMMENT.contains.push(\"self\");\n  const LINE_COMMENT = hljs.COMMENT(/;;/, /$/);\n\n  const KWS = [\n    \"anyfunc\",\n    \"block\",\n    \"br\",\n    \"br_if\",\n    \"br_table\",\n    \"call\",\n    \"call_indirect\",\n    \"data\",\n    \"drop\",\n    \"elem\",\n    \"else\",\n    \"end\",\n    \"export\",\n    \"func\",\n    \"global.get\",\n    \"global.set\",\n    \"local.get\",\n    \"local.set\",\n    \"local.tee\",\n    \"get_global\",\n    \"get_local\",\n    \"global\",\n    \"if\",\n    \"import\",\n    \"local\",\n    \"loop\",\n    \"memory\",\n    \"memory.grow\",\n    \"memory.size\",\n    \"module\",\n    \"mut\",\n    \"nop\",\n    \"offset\",\n    \"param\",\n    \"result\",\n    \"return\",\n    \"select\",\n    \"set_global\",\n    \"set_local\",\n    \"start\",\n    \"table\",\n    \"tee_local\",\n    \"then\",\n    \"type\",\n    \"unreachable\"\n  ];\n\n  const FUNCTION_REFERENCE = {\n    begin: [\n      /(?:func|call|call_indirect)/,\n      /\\s+/,\n      /\\$[^\\s)]+/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    }\n  };\n\n  const ARGUMENT = {\n    className: \"variable\",\n    begin: /\\$[\\w_]+/\n  };\n\n  const PARENS = {\n    match: /(\\((?!;)|\\))+/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n\n  const NUMBER = {\n    className: \"number\",\n    relevance: 0,\n    // borrowed from Prism, TODO: split out into variants\n    match: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\n  };\n\n  const TYPE = {\n    // look-ahead prevents us from gobbling up opcodes\n    match: /(i32|i64|f32|f64)(?!\\.)/,\n    className: \"type\"\n  };\n\n  const MATH_OPERATIONS = {\n    className: \"keyword\",\n    // borrowed from Prism, TODO: split out into variants\n    match: /\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\n  };\n\n  const OFFSET_ALIGN = {\n    match: [\n      /(?:offset|align)/,\n      /\\s*/,\n      /=/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"operator\"\n    }\n  };\n\n  return {\n    name: 'WebAssembly',\n    keywords: {\n      $pattern: /[\\w.]+/,\n      keyword: KWS\n    },\n    contains: [\n      LINE_COMMENT,\n      BLOCK_COMMENT,\n      OFFSET_ALIGN,\n      ARGUMENT,\n      PARENS,\n      FUNCTION_REFERENCE,\n      hljs.QUOTE_STRING_MODE,\n      TYPE,\n      MATH_OPERATIONS,\n      NUMBER\n    ]\n  };\n}\n\nexport { wasm as default };\n","/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  const regex = hljs.regex;\n  // XML names can have the following additional letters: https://www.w3.org/TR/xml/#NT-NameChar\n  // OTHER_NAME_CHARS = /[:\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]/;\n  // Element names start with NAME_START_CHAR followed by optional other Unicode letters, ASCII digits, hyphens, underscores, and periods\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);;\n  // const XML_IDENT_RE = /[A-Z_a-z:\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]+/;\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);\n  // however, to cater for performance and more Unicode support rely simply on the Unicode letter class\n  const TAG_NAME_RE = regex.concat(/[\\p{L}_]/u, regex.optional(/[\\p{L}0-9_.-]*:/u), /[\\p{L}0-9_.-]*/u);\n  const XML_IDENT_RE = /[\\p{L}0-9._:-]+/u;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: 'string' });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              { begin: /[^\\s\"'=<>`]+/ }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    unicodeRegex: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        { relevance: 10 }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      // xml processing instructions\n      {\n        className: 'meta',\n        end: /\\?>/,\n        variants: [\n          {\n            begin: /<\\?xml/,\n            relevance: 10,\n            contains: [\n              QUOTE_META_STRING_MODE\n            ]\n          },\n          {\n            begin: /<\\?[a-z][a-z0-9]+/,\n          }\n        ]\n\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending bracket.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'style' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'script' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /</,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            regex.either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /<\\//,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nexport { xml as default };\n","/*\nLanguage: YAML\nDescription: Yet Another Markdown Language\nAuthor: Stefan Wienert <stwienert@gmail.com>\nContributors: Carl Baxter <carl@cbax.tech>\nRequires: ruby.js\nWebsite: https://yaml.org\nCategory: common, config\n*/\nfunction yaml(hljs) {\n  const LITERALS = 'true false yes no null';\n\n  // YAML spec allows non-reserved URI characters in tags.\n  const URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\n\n  // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n  const KEY = {\n    className: 'attr',\n    variants: [\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\n      { // double quoted keys\n        begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' },\n      { // single quoted keys\n        begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' }\n    ]\n  };\n\n  const TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { // jinja templates Ansible\n        begin: /\\{\\{/,\n        end: /\\}\\}/\n      },\n      { // Ruby i18n\n        begin: /%\\{/,\n        end: /\\}/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      { begin: /\\S+/ }\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  // Strings inside of value containers (objects) can't contain braces,\n  // brackets, or commas\n  const CONTAINER_STRING = hljs.inherit(STRING, { variants: [\n    {\n      begin: /'/,\n      end: /'/\n    },\n    {\n      begin: /\"/,\n      end: /\"/\n    },\n    { begin: /[^\\s,{}[\\]]+/ }\n  ] });\n\n  const DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n  const TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n  const FRACTION_RE = '(\\\\.[0-9]*)?';\n  const ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n  const TIMESTAMP = {\n    className: 'number',\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n  };\n\n  const VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    keywords: LITERALS,\n    relevance: 0\n  };\n  const OBJECT = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  const ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n\n  const MODES = [\n    KEY,\n    {\n      className: 'meta',\n      begin: '^---\\\\s*$',\n      relevance: 10\n    },\n    { // multi line string\n      // Blocks start with a | or > followed by a newline\n      //\n      // Indentation of subsequent lines must be the same to\n      // be considered part of the block\n      className: 'string',\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\n    },\n    { // Ruby/Rails erb\n      begin: '<%[%=-]?',\n      end: '[%-]?%>',\n      subLanguage: 'ruby',\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0\n    },\n    { // named tags\n      className: 'type',\n      begin: '!\\\\w+!' + URI_CHARACTERS\n    },\n    // https://yaml.org/spec/1.2/spec.html#id2784064\n    { // verbatim tags\n      className: 'type',\n      begin: '!<' + URI_CHARACTERS + \">\"\n    },\n    { // primary tags\n      className: 'type',\n      begin: '!' + URI_CHARACTERS\n    },\n    { // secondary tags\n      className: 'type',\n      begin: '!!' + URI_CHARACTERS\n    },\n    { // fragment id &ref\n      className: 'meta',\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // fragment reference *ref\n      className: 'meta',\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // array listing\n      className: 'bullet',\n      // TODO: remove |$ hack when we have proper look-ahead support\n      begin: '-(?=[ ]|$)',\n      relevance: 0\n    },\n    hljs.HASH_COMMENT_MODE,\n    {\n      beginKeywords: LITERALS,\n      keywords: { literal: LITERALS }\n    },\n    TIMESTAMP,\n    // numbers are any valid C-style number that\n    // sit isolated from other words\n    {\n      className: 'number',\n      begin: hljs.C_NUMBER_RE + '\\\\b',\n      relevance: 0\n    },\n    OBJECT,\n    ARRAY,\n    STRING\n  ];\n\n  const VALUE_MODES = [ ...MODES ];\n  VALUE_MODES.pop();\n  VALUE_MODES.push(CONTAINER_STRING);\n  VALUE_CONTAINER.contains = VALUE_MODES;\n\n  return {\n    name: 'YAML',\n    case_insensitive: true,\n    aliases: [ 'yml' ],\n    contains: MODES\n  };\n}\n\nexport { yaml as default };\n","// https://nodejs.org/api/packages.html#packages_writing_dual_packages_while_avoiding_or_minimizing_hazards\nimport HighlightJS from '../lib/core.js';\nexport { HighlightJS };\nexport default HighlightJS;\n","// @ts-expect-error\nimport formatter from 'format'\n\nexport const fault = Object.assign(create(Error), {\n  eval: create(EvalError),\n  range: create(RangeError),\n  reference: create(ReferenceError),\n  syntax: create(SyntaxError),\n  type: create(TypeError),\n  uri: create(URIError)\n})\n\n/**\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\n *\n * @template {Error} Fault\n * @template {new (reason: string) => Fault} Class\n * @param {Class} Constructor\n */\nexport function create(Constructor) {\n  /** @type {string} */\n  // @ts-expect-error\n  FormattedError.displayName = Constructor.displayName || Constructor.name\n\n  return FormattedError\n\n  /**\n   * Create an error with a printf-like formatted message.\n   *\n   * @param {string|null} [format]\n   *   Template string.\n   * @param {...unknown} values\n   *   Values to render in `format`.\n   * @returns {Fault}\n   */\n  function FormattedError(format, ...values) {\n    /** @type {string} */\n    const reason = format ? formatter(format, ...values) : format\n    return new Constructor(reason)\n  }\n}\n","/**\n * @typedef {import('hast').Text} Text\n * @typedef {import('highlight.js').HighlightResult} HighlightResult\n * @typedef {import('highlight.js').HLJSOptions} HighlightOptions\n * @typedef {import('highlight.js').LanguageFn} HighlightSyntax\n * @typedef {import('highlight.js').Emitter} HighlightEmitter\n *\n * @typedef {{type: 'element', tagName: 'span', properties: {className: Array<string>}, children: Array<Span|Text>}} Span\n * @typedef {{type: 'root', data: {language: string|null, relevance: number}, children: Array<Span|Text>}} Root\n *\n * @typedef {Object} ExtraOptions\n * @property {Array<string>} [subset]\n *   List of allowed languages, defaults to all registered languages.\n *\n * @typedef {Object} Options\n *   Configuration.\n * @property {string} [prefix='hljs-']\n *   Class prefix.\n *\n * @typedef {Options & ExtraOptions} AutoOptions\n */\n\nimport high from 'highlight.js/lib/core'\nimport {fault} from 'fault'\n\nconst own = {}.hasOwnProperty\n\nconst defaultPrefix = 'hljs-'\n\n/**\n * Highlight `value` (code) as `language` (name).\n *\n * @param {string} language\n *   Programming language name.\n * @param {string} value\n *   Code to highlight.\n * @param {Options} [options={}]\n *   Configuration.\n * @returns {Root}\n *   A hast `Root` node.\n */\nfunction highlight(language, value, options = {}) {\n  let prefix = options.prefix\n\n  if (typeof language !== 'string') {\n    throw fault('Expected `string` for name, got `%s`', language)\n  }\n\n  if (!high.getLanguage(language)) {\n    throw fault('Unknown language: `%s` is not registered', language)\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  // @ts-expect-error: Types out of date.\n  // See: <https://github.com/highlightjs/highlight.js/issues/3621#issuecomment-1528841888>\n  high.configure({__emitter: HastEmitter, classPrefix: prefix})\n\n  const result = /** @type {HighlightResult & {_emitter: HastEmitter}} */ (\n    high.highlight(value, {language, ignoreIllegals: true})\n  )\n\n  high.configure({})\n\n  // `highlight.js` seems to use this (currently) for broken grammars, so let’s\n  // keep it in there just to be sure.\n  /* c8 ignore next 3 */\n  if (result.errorRaised) {\n    throw result.errorRaised\n  }\n\n  // @ts-expect-error: `language` is always defined in `highlight`.\n  result._emitter.root.data.language = result.language\n  result._emitter.root.data.relevance = result.relevance\n\n  return result._emitter.root\n}\n\n/**\n * Highlight `value` (code) and guess its programming language.\n *\n * @param {string} value\n *   Code to highlight.\n * @param {AutoOptions} [options={}]\n *   Configuration.\n * @returns {Root}\n *   A hast `Root` node.\n */\nfunction highlightAuto(value, options = {}) {\n  const subset = options.subset || high.listLanguages()\n  let prefix = options.prefix\n  let index = -1\n  /** @type {Root} */\n  let result = {\n    type: 'root',\n    data: {language: null, relevance: 0},\n    children: []\n  }\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  while (++index < subset.length) {\n    const name = subset[index]\n\n    if (!high.getLanguage(name)) continue\n\n    const current = highlight(name, value, options)\n\n    if (current.data.relevance > result.data.relevance) result = current\n  }\n\n  return result\n}\n\n/**\n * Register a language.\n *\n * @param {string} language\n *   Programming language name.\n * @param {HighlightSyntax} syntax\n *   `highlight.js` language syntax.\n * @returns {void}\n */\nfunction registerLanguage(language, syntax) {\n  high.registerLanguage(language, syntax)\n}\n\n/**\n * Register aliases for already registered languages.\n *\n * @param {string|Record<string, string|Array<string>>} language\n *   Programming language name or a map of `language`s to `alias`es or `list`s\n * @param {string|Array<string>} [alias]\n *   New aliases for the programming language.\n * @returns {void}\n */\nconst registerAlias =\n  /**\n   * @type {(\n   *   ((language: string, alias: string|Array<string>) => void) &\n   *   ((aliases: Record<string, string|Array<string>>) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {string|Record<string, string|Array<string>>} language\n     * @param {string|Array<string>} [alias]\n     * @returns {void}\n     */\n    function (language, alias) {\n      if (typeof language === 'string') {\n        // @ts-expect-error: should be a string in this overload.\n        high.registerAliases(alias, {languageName: language})\n      } else {\n        /** @type {string} */\n        let key\n\n        for (key in language) {\n          if (own.call(language, key)) {\n            high.registerAliases(language[key], {languageName: key})\n          }\n        }\n      }\n    }\n  )\n\n/**\n * Check whether an `alias` or `language` is registered.\n *\n * @param {string} aliasOrLanguage\n *   Name of a registered language or alias.\n * @returns {boolean}\n *   Whether `aliasOrlanguage` is registered.\n */\nfunction registered(aliasOrLanguage) {\n  return Boolean(high.getLanguage(aliasOrLanguage))\n}\n\n/**\n * List registered languages.\n *\n * @returns {Array<string>}\n *   Names of registered language.\n */\nfunction listLanguages() {\n  return high.listLanguages()\n}\n\n/** @type {HighlightEmitter} */\nclass HastEmitter {\n  /**\n   * @param {HighlightOptions} options\n   */\n  constructor(options) {\n    /** @type {HighlightOptions} */\n    this.options = options\n    /** @type {Root} */\n    this.root = {\n      type: 'root',\n      data: {language: null, relevance: 0},\n      children: []\n    }\n    /** @type {[Root, ...Array<Span>]} */\n    this.stack = [this.root]\n  }\n\n  /**\n   * @param {string} value\n   */\n  addText(value) {\n    if (value === '') return\n\n    const current = this.stack[this.stack.length - 1]\n    const tail = current.children[current.children.length - 1]\n\n    if (tail && tail.type === 'text') {\n      tail.value += value\n    } else {\n      current.children.push({type: 'text', value})\n    }\n  }\n\n  /**\n   *\n   * @param {unknown} rawName\n   */\n  startScope(rawName) {\n    this.openNode(String(rawName))\n  }\n\n  /**\n   */\n  endScope() {\n    this.closeNode()\n  }\n\n  /**\n   * @param {HastEmitter} other\n   * @param {string} name\n   */\n  __addSublanguage(other, name) {\n    const current = this.stack[this.stack.length - 1]\n    const results = other.root.children\n\n    if (name) {\n      current.children.push({\n        type: 'element',\n        tagName: 'span',\n        properties: {className: [name]},\n        children: results\n      })\n    } else {\n      current.children.push(...results)\n    }\n  }\n\n  /**\n   * @param {string} name\n   */\n  openNode(name) {\n    // First “class” gets the prefix. Rest gets a repeated underscore suffix.\n    // See: <https://github.com/highlightjs/highlight.js/commit/51806aa>\n    // See: <https://github.com/wooorm/lowlight/issues/43>\n    const className = name\n      .split('.')\n      .map((d, i) => (i ? d + '_'.repeat(i) : this.options.classPrefix + d))\n    const current = this.stack[this.stack.length - 1]\n    /** @type {Span} */\n    const child = {\n      type: 'element',\n      tagName: 'span',\n      properties: {className},\n      children: []\n    }\n\n    current.children.push(child)\n    this.stack.push(child)\n  }\n\n  /**\n   */\n  closeNode() {\n    this.stack.pop()\n  }\n\n  /**\n   */\n  finalize() {}\n\n  /**\n   */\n  toHTML() {\n    return ''\n  }\n}\n\nexport const lowlight = {\n  highlight,\n  highlightAuto,\n  registerLanguage,\n  registered,\n  listLanguages,\n  registerAlias\n}\n","// @ts-expect-error: this registers types for the language files.\n/** @typedef {import('highlight.js/types/index.js')} DoNotTochItRegistersLanguageFiles */\n\nimport arduino from 'highlight.js/lib/languages/arduino'\nimport bash from 'highlight.js/lib/languages/bash'\nimport c from 'highlight.js/lib/languages/c'\nimport cpp from 'highlight.js/lib/languages/cpp'\nimport csharp from 'highlight.js/lib/languages/csharp'\nimport css from 'highlight.js/lib/languages/css'\nimport diff from 'highlight.js/lib/languages/diff'\nimport go from 'highlight.js/lib/languages/go'\nimport graphql from 'highlight.js/lib/languages/graphql'\nimport ini from 'highlight.js/lib/languages/ini'\nimport java from 'highlight.js/lib/languages/java'\nimport javascript from 'highlight.js/lib/languages/javascript'\nimport json from 'highlight.js/lib/languages/json'\nimport kotlin from 'highlight.js/lib/languages/kotlin'\nimport less from 'highlight.js/lib/languages/less'\nimport lua from 'highlight.js/lib/languages/lua'\nimport makefile from 'highlight.js/lib/languages/makefile'\nimport markdown from 'highlight.js/lib/languages/markdown'\nimport objectivec from 'highlight.js/lib/languages/objectivec'\nimport perl from 'highlight.js/lib/languages/perl'\nimport php from 'highlight.js/lib/languages/php'\nimport phpTemplate from 'highlight.js/lib/languages/php-template'\nimport plaintext from 'highlight.js/lib/languages/plaintext'\nimport python from 'highlight.js/lib/languages/python'\nimport pythonRepl from 'highlight.js/lib/languages/python-repl'\nimport r from 'highlight.js/lib/languages/r'\nimport ruby from 'highlight.js/lib/languages/ruby'\nimport rust from 'highlight.js/lib/languages/rust'\nimport scss from 'highlight.js/lib/languages/scss'\nimport shell from 'highlight.js/lib/languages/shell'\nimport sql from 'highlight.js/lib/languages/sql'\nimport swift from 'highlight.js/lib/languages/swift'\nimport typescript from 'highlight.js/lib/languages/typescript'\nimport vbnet from 'highlight.js/lib/languages/vbnet'\nimport wasm from 'highlight.js/lib/languages/wasm'\nimport xml from 'highlight.js/lib/languages/xml'\nimport yaml from 'highlight.js/lib/languages/yaml'\nimport {lowlight} from './core.js'\n\nlowlight.registerLanguage('arduino', arduino)\nlowlight.registerLanguage('bash', bash)\nlowlight.registerLanguage('c', c)\nlowlight.registerLanguage('cpp', cpp)\nlowlight.registerLanguage('csharp', csharp)\nlowlight.registerLanguage('css', css)\nlowlight.registerLanguage('diff', diff)\nlowlight.registerLanguage('go', go)\nlowlight.registerLanguage('graphql', graphql)\nlowlight.registerLanguage('ini', ini)\nlowlight.registerLanguage('java', java)\nlowlight.registerLanguage('javascript', javascript)\nlowlight.registerLanguage('json', json)\nlowlight.registerLanguage('kotlin', kotlin)\nlowlight.registerLanguage('less', less)\nlowlight.registerLanguage('lua', lua)\nlowlight.registerLanguage('makefile', makefile)\nlowlight.registerLanguage('markdown', markdown)\nlowlight.registerLanguage('objectivec', objectivec)\nlowlight.registerLanguage('perl', perl)\nlowlight.registerLanguage('php', php)\nlowlight.registerLanguage('php-template', phpTemplate)\nlowlight.registerLanguage('plaintext', plaintext)\nlowlight.registerLanguage('python', python)\nlowlight.registerLanguage('python-repl', pythonRepl)\nlowlight.registerLanguage('r', r)\nlowlight.registerLanguage('ruby', ruby)\nlowlight.registerLanguage('rust', rust)\nlowlight.registerLanguage('scss', scss)\nlowlight.registerLanguage('shell', shell)\nlowlight.registerLanguage('sql', sql)\nlowlight.registerLanguage('swift', swift)\nlowlight.registerLanguage('typescript', typescript)\nlowlight.registerLanguage('vbnet', vbnet)\nlowlight.registerLanguage('wasm', wasm)\nlowlight.registerLanguage('xml', xml)\nlowlight.registerLanguage('yaml', yaml)\n\nexport {lowlight} from './core.js'\n","/**\n * @typedef {import('./lib/core.js').Root} Root\n * @typedef {import('./lib/core.js').Options} Options\n * @typedef {import('./lib/core.js').AutoOptions} AutoOptions\n */\n\nexport {lowlight} from './lib/common.js'\n","/**\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {null | undefined | string | TestFunctionAnything | Array<string | TestFunctionAnything>} Test\n *   Check for an arbitrary element, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if an element passes a test, unaware of TypeScript inferral.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {boolean | void}\n *   Whether this element passes the test.\n */\n\n/**\n * @template {Element} T\n *   Element type.\n * @typedef {T['tagName'] | TestFunctionPredicate<T> | Array<T['tagName'] | TestFunctionPredicate<T>>} PredicateTest\n *   Check for an element that can be inferred by TypeScript.\n */\n\n/**\n * Check if an element passes a certain node test.\n *\n * @template {Element} T\n *   Element type.\n * @callback TestFunctionPredicate\n *   Complex test function for an element that can be inferred by TypeScript.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {element is T}\n *   Whether this element passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is an element, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} T\n *   Element type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific element, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is T}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if `node` is an `Element` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific element.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is an element and passes a test.\n */\nexport const isElement =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *  When nullish, checks if `node` is an `Element`.\n *   *  When `string`, works like passing `(element) => element.tagName === test`.\n *   *  When `function` checks if function passed the element is true.\n *   *  When `array`, checks any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<string | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain tag name.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Find the first node in `parent` after another `node` or after an index,\n * that passes `test`.\n\n * @param parent\n *   Parent node.\n * @param index\n *   Child of `parent` or it’s index.\n * @param test\n *   `unist-util-is`-compatible test.\n * @returns\n *   Child of `parent` or `null`.\n */\nexport const findAfter =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node | number, test: import('unist-util-is').PredicateTest<T>) => T | null) &\n   *  ((node: Parent, index: Node | number, test?: Test) => Node | null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent\n     * @param {Node | number} index\n     * @param {Test} [test]\n     * @returns {Node | null}\n     */\n    function (parent, index, test) {\n      const is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n","/**\n * @typedef {import('hast-util-is-element').TestFunctionAnything} TestFunctionAnything\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any node.\n * @typedef {Extract<Node, import('unist').Parent>} Parent\n *   Any parent.\n * @typedef {'normal' | 'pre' | 'nowrap' | 'pre-wrap'} Whitespace\n *   Valid and useful whitespace values (from CSS).\n * @typedef {0 | 1 | 2} BreakNumber\n *   Specific break:\n *\n *   *   `0` — space\n *   *   `1` — line ending\n *   *   `2` — blank line\n * @typedef {'\\n'} BreakForce\n *   Forced break.\n * @typedef {boolean} BreakValue\n *   Whether there was a break.\n * @typedef {BreakValue | BreakNumber | undefined} BreakBefore\n *   Any value for a break before.\n * @typedef {BreakValue | BreakNumber | BreakForce | undefined} BreakAfter\n *   Any value for a break after.\n *\n * @typedef CollectionInfo\n *   Info on current collection.\n * @property {Whitespace} whitespace\n *   Current whitespace setting.\n * @property {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @property {BreakAfter} breakAfter\n *   Whether there was a break after.\n *\n * @typedef Options\n *   Configuration.\n * @property {Whitespace | null | undefined} [whitespace='normal']\n *   Initial CSS whitespace setting to use.\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {findAfter} from 'unist-util-find-after'\n\nconst searchLineFeeds = /\\n/g\nconst searchTabOrSpaces = /[\\t ]+/g\n\nconst br = convertElement('br')\nconst p = convertElement('p')\nconst cell = convertElement(['th', 'td'])\nconst row = convertElement('tr')\n\n// Note that we don’t need to include void elements here as they don’t have text.\n// See: <https://github.com/wooorm/html-void-elements>\nconst notRendered = convertElement([\n  // List from: <https://html.spec.whatwg.org/#hidden-elements>\n  'datalist',\n  'head',\n  'noembed',\n  'noframes',\n  'noscript', // Act as if we support scripting.\n  'rp',\n  'script',\n  'style',\n  'template',\n  'title',\n  // Hidden attribute.\n  hidden,\n  // From: <https://html.spec.whatwg.org/#flow-content-3>\n  closedDialog\n])\n\n// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nconst blockOrCaption = convertElement([\n  'address', // Flow content\n  'article', // Sections and headings\n  'aside', // Sections and headings\n  'blockquote', // Flow content\n  'body', // Page\n  'caption', // `table-caption`\n  'center', // Flow content (legacy)\n  'dd', // Lists\n  'dialog', // Flow content\n  'dir', // Lists (legacy)\n  'dl', // Lists\n  'dt', // Lists\n  'div', // Flow content\n  'figure', // Flow content\n  'figcaption', // Flow content\n  'footer', // Flow content\n  'form,', // Flow content\n  'h1', // Sections and headings\n  'h2', // Sections and headings\n  'h3', // Sections and headings\n  'h4', // Sections and headings\n  'h5', // Sections and headings\n  'h6', // Sections and headings\n  'header', // Flow content\n  'hgroup', // Sections and headings\n  'hr', // Flow content\n  'html', // Page\n  'legend', // Flow content\n  'listing', // Flow content (legacy)\n  'main', // Flow content\n  'menu', // Lists\n  'nav', // Sections and headings\n  'ol', // Lists\n  'p', // Flow content\n  'plaintext', // Flow content (legacy)\n  'pre', // Flow content\n  'section', // Sections and headings\n  'ul', // Lists\n  'xmp' // Flow content (legacy)\n])\n\n/**\n * Get the plain-text value of a node.\n *\n * ###### Algorithm\n *\n * *   if `tree` is a comment, returns its `value`\n * *   if `tree` is a text, applies normal whitespace collapsing to its\n *     `value`, as defined by the CSS Text spec\n * *   if `tree` is a root or element, applies an algorithm similar to the\n *     `innerText` getter as defined by HTML\n *\n * ###### Notes\n *\n * > 👉 **Note**: the algorithm acts as if `tree` is being rendered, and as if\n * > we’re a CSS-supporting user agent, with scripting enabled.\n *\n * *   if `tree` is an element that is not displayed (such as a `head`), we’ll\n *     still use the `innerText` algorithm instead of switching to `textContent`\n * *   if descendants of `tree` are elements that are not displayed, they are\n *     ignored\n * *   CSS is not considered, except for the default user agent style sheet\n * *   a line feed is collapsed instead of ignored in cases where Fullwidth, Wide,\n *     or Halfwidth East Asian Width characters are used, the same goes for a case\n *     with Chinese, Japanese, or Yi writing systems\n * *   replaced elements (such as `audio`) are treated like non-replaced elements\n *\n * @param {Node} tree\n *   Tree to turn into text.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `tree`.\n */\nexport function toText(tree, options = {}) {\n  const children = 'children' in tree ? tree.children : []\n  const block = blockOrCaption(tree)\n  const whitespace = inferWhitespace(tree, {\n    whitespace: options.whitespace || 'normal',\n    breakBefore: false,\n    breakAfter: false\n  })\n\n  /** @type {Array<string | BreakNumber>} */\n  const results = []\n\n  // Treat `text` and `comment` as having normal white-space.\n  // This deviates from the spec as in the DOM the node’s `.data` has to be\n  // returned.\n  // If you want that behavior use `hast-util-to-string`.\n  // All other nodes are later handled as if they are `element`s (so the\n  // algorithm also works on a `root`).\n  // Nodes without children are treated as a void element, so `doctype` is thus\n  // ignored.\n  if (tree.type === 'text' || tree.type === 'comment') {\n    results.push(\n      ...collectText(tree, {\n        whitespace,\n        breakBefore: true,\n        breakAfter: true\n      })\n    )\n  }\n\n  // 1.  If this element is not being rendered, or if the user agent is a\n  //     non-CSS user agent, then return the same value as the textContent IDL\n  //     attribute on this element.\n  //\n  //     Note: we’re not supporting stylesheets so we’re acting as if the node\n  //     is rendered.\n  //\n  //     If you want that behavior use `hast-util-to-string`.\n  //     Important: we’ll have to account for this later though.\n\n  // 2.  Let results be a new empty list.\n  let index = -1\n\n  // 3.  For each child node node of this element:\n  while (++index < children.length) {\n    // 3.1. Let current be the list resulting in running the inner text\n    //      collection steps with node.\n    //      Each item in results will either be a JavaScript string or a\n    //      positive integer (a required line break count).\n    // 3.2. For each item item in current, append item to results.\n    results.push(\n      // @ts-expect-error Looks like a parent.\n      ...innerTextCollection(children[index], tree, {\n        whitespace,\n        breakBefore: index ? undefined : block,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : block\n      })\n    )\n  }\n\n  // 4.  Remove any items from results that are the empty string.\n  // 5.  Remove any runs of consecutive required line break count items at the\n  //     start or end of results.\n  // 6.  Replace each remaining run of consecutive required line break count\n  //     items with a string consisting of as many U+000A LINE FEED (LF)\n  //     characters as the maximum of the values in the required line break\n  //     count items.\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {number | undefined} */\n  let count\n\n  index = -1\n\n  while (++index < results.length) {\n    const value = results[index]\n\n    if (typeof value === 'number') {\n      if (count !== undefined && value > count) count = value\n    } else if (value) {\n      if (count !== undefined && count > -1) {\n        result.push('\\n'.repeat(count) || ' ')\n      }\n\n      count = -1\n      result.push(value)\n    }\n  }\n\n  // 7.  Return the concatenation of the string items in results.\n  return result.join('')\n}\n\n/**\n * <https://html.spec.whatwg.org/#inner-text-collection-steps>\n *\n * @param {Node} node\n * @param {Parent} parent\n * @param {CollectionInfo} info\n * @returns {Array<string | BreakNumber>}\n */\nfunction innerTextCollection(node, parent, info) {\n  if (node.type === 'element') {\n    return collectElement(node, parent, info)\n  }\n\n  if (node.type === 'text') {\n    return info.whitespace === 'normal'\n      ? collectText(node, info)\n      : collectPreText(node)\n  }\n\n  return []\n}\n\n/**\n * Collect an element.\n *\n * @param {Element} node\n *   Element node.\n * @param {Parent} parent\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<string | BreakNumber>}\n */\nfunction collectElement(node, parent, info) {\n  // First we infer the `white-space` property.\n  const whitespace = inferWhitespace(node, info)\n  const children = node.children || []\n  let index = -1\n  /** @type {Array<string | BreakNumber>} */\n  let items = []\n\n  // We’re ignoring point 3, and exiting without any content here, because we\n  // deviated from the spec in `toText` at step 3.\n  if (notRendered(node)) {\n    return items\n  }\n\n  /** @type {BreakNumber | undefined} */\n  let prefix\n  /** @type {BreakNumber | BreakForce | undefined} */\n  let suffix\n  // Note: we first detect if there is going to be a break before or after the\n  // contents, as that changes the white-space handling.\n\n  // 2.  If node’s computed value of `visibility` is not `visible`, then return\n  //     items.\n  //\n  //     Note: Ignored, as everything is visible by default user agent styles.\n\n  // 3.  If node is not being rendered, then return items. [...]\n  //\n  //     Note: We already did this above.\n\n  // See `collectText` for step 4.\n\n  // 5.  If node is a `<br>` element, then append a string containing a single\n  //     U+000A LINE FEED (LF) character to items.\n  if (br(node)) {\n    suffix = '\\n'\n  }\n\n  // 7.  If node’s computed value of `display` is `table-row`, and node’s CSS\n  //     box is not the last `table-row` box of the nearest ancestor `table`\n  //     box, then append a string containing a single U+000A LINE FEED (LF)\n  //     character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  //     Note: needs further investigation as this does not account for implicit\n  //     rows.\n  else if (row(node) && findAfter(parent, node, row)) {\n    suffix = '\\n'\n  }\n\n  // 8.  If node is a `<p>` element, then append 2 (a required line break count)\n  //     at the beginning and end of items.\n  else if (p(node)) {\n    prefix = 2\n    suffix = 2\n  }\n\n  // 9.  If node’s used value of `display` is block-level or `table-caption`,\n  //     then append 1 (a required line break count) at the beginning and end of\n  //     items.\n  else if (blockOrCaption(node)) {\n    prefix = 1\n    suffix = 1\n  }\n\n  // 1.  Let items be the result of running the inner text collection steps with\n  //     each child node of node in tree order, and then concatenating the\n  //     results to a single list.\n  while (++index < children.length) {\n    items = items.concat(\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? undefined : prefix,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : suffix\n      })\n    )\n  }\n\n  // 6.  If node’s computed value of `display` is `table-cell`, and node’s CSS\n  //     box is not the last `table-cell` box of its enclosing `table-row` box,\n  //     then append a string containing a single U+0009 CHARACTER TABULATION\n  //     (tab) character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  if (cell(node) && findAfter(parent, node, cell)) {\n    items.push('\\t')\n  }\n\n  // Add the pre- and suffix.\n  if (prefix) items.unshift(prefix)\n  if (suffix) items.push(suffix)\n\n  return items\n}\n\n/**\n * 4.  If node is a Text node, then for each CSS text box produced by node,\n *     in content order, compute the text of the box after application of the\n *     CSS `white-space` processing rules and `text-transform` rules, set\n *     items to the list of the resulting strings, and return items.\n *     The CSS `white-space` processing rules are slightly modified:\n *     collapsible spaces at the end of lines are always collapsed, but they\n *     are only removed if the line is the last line of the block, or it ends\n *     with a br element.\n *     Soft hyphens should be preserved.\n *\n *     Note: See `collectText` and `collectPreText`.\n *     Note: we don’t deal with `text-transform`, no element has that by\n *     default.\n *\n * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>\n *\n * @param {Text | Comment} node\n *   Text node.\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<string | BreakNumber>}\n *   Result.\n */\nfunction collectText(node, info) {\n  const value = String(node.value)\n  /** @type {Array<string>} */\n  const lines = []\n  /** @type {Array<string | BreakNumber>} */\n  const result = []\n  let start = 0\n\n  while (start <= value.length) {\n    searchLineFeeds.lastIndex = start\n\n    const match = searchLineFeeds.exec(value)\n    const end = match && 'index' in match ? match.index : value.length\n\n    lines.push(\n      // Any sequence of collapsible spaces and tabs immediately preceding or\n      // following a segment break is removed.\n      trimAndCollapseSpacesAndTabs(\n        // […] ignoring bidi formatting characters (characters with the\n        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if\n        // they were not there.\n        value\n          .slice(start, end)\n          .replace(/[\\u061C\\u200E\\u200F\\u202A-\\u202E\\u2066-\\u2069]/g, ''),\n        start === 0 ? info.breakBefore : true,\n        end === value.length ? info.breakAfter : true\n      )\n    )\n\n    start = end + 1\n  }\n\n  // Collapsible segment breaks are transformed for rendering according to the\n  // segment break transformation rules.\n  // So here we jump to 4.1.2 of [CSSTEXT]:\n  // Any collapsible segment break immediately following another collapsible\n  // segment break is removed\n  let index = -1\n  /** @type {BreakNumber | undefined} */\n  let join\n\n  while (++index < lines.length) {\n    // *   If the character immediately before or immediately after the segment\n    //     break is the zero-width space character (U+200B), then the break is\n    //     removed, leaving behind the zero-width space.\n    if (\n      lines[index].charCodeAt(lines[index].length - 1) === 0x200b /* ZWSP */ ||\n      (index < lines.length - 1 &&\n        lines[index + 1].charCodeAt(0) === 0x200b) /* ZWSP */\n    ) {\n      result.push(lines[index])\n      join = undefined\n    }\n\n    // *   Otherwise, if the East Asian Width property [UAX11] of both the\n    //     character before and after the segment break is Fullwidth, Wide, or\n    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the\n    //     segment break is removed.\n    //\n    //     Note: ignored.\n    // *   Otherwise, if the writing system of the segment break is Chinese,\n    //     Japanese, or Yi, and the character before or after the segment break\n    //     is punctuation or a symbol (Unicode general category P* or S*) and\n    //     has an East Asian Width property of Ambiguous, and the character on\n    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,\n    //     and not Hangul, then the segment break is removed.\n    //\n    //     Note: ignored.\n\n    // *   Otherwise, the segment break is converted to a space (U+0020).\n    else if (lines[index]) {\n      if (typeof join === 'number') result.push(join)\n      result.push(lines[index])\n      join = 0\n    } else if (index === 0 || index === lines.length - 1) {\n      // If this line is empty, and it’s the first or last, add a space.\n      // Note that this function is only called in normal whitespace, so we\n      // don’t worry about `pre`.\n      result.push(0)\n    }\n  }\n\n  return result\n}\n\n/**\n * Collect a text node as “pre” whitespace.\n *\n * @param {Text} node\n *   Text node.\n * @returns {Array<string | BreakNumber>}\n *   Result.\n */\nfunction collectPreText(node) {\n  return [String(node.value)]\n}\n\n/**\n * 3.  Every collapsible tab is converted to a collapsible space (U+0020).\n * 4.  Any collapsible space immediately following another collapsible\n *     space—even one outside the boundary of the inline containing that\n *     space, provided both spaces are within the same inline formatting\n *     context—is collapsed to have zero advance width. (It is invisible,\n *     but retains its soft wrap opportunity, if any.)\n *\n * @param {string} value\n *   Value to collapse.\n * @param {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @param {BreakAfter} breakAfter\n *   Whether there was a break after.\n * @returns {string}\n *   Result.\n */\nfunction trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  /** @type {number | undefined} */\n  let end\n\n  while (start < value.length) {\n    searchTabOrSpaces.lastIndex = start\n    const match = searchTabOrSpaces.exec(value)\n    end = match ? match.index : value.length\n\n    // If we’re not directly after a segment break, but there was white space,\n    // add an empty value that will be turned into a space.\n    if (!start && !end && match && !breakBefore) {\n      result.push('')\n    }\n\n    if (start !== end) {\n      result.push(value.slice(start, end))\n    }\n\n    start = match ? end + match[0].length : end\n  }\n\n  // If we reached the end, there was trailing white space, and there’s no\n  // segment break after this node, add an empty value that will be turned\n  // into a space.\n  if (start !== end && !breakAfter) {\n    result.push('')\n  }\n\n  return result.join(' ')\n}\n\n/**\n * Figure out the whitespace of a node.\n *\n * We don’t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {Node} node\n *   Node (typically `Element`).\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Whitespace}\n *   Applied whitespace.\n */\nfunction inferWhitespace(node, info) {\n  if (node.type === 'element') {\n    const props = node.properties || {}\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp': {\n        return 'pre'\n      }\n\n      case 'nobr': {\n        return 'nowrap'\n      }\n\n      case 'pre': {\n        return props.wrap ? 'pre-wrap' : 'pre'\n      }\n\n      case 'td':\n      case 'th': {\n        return props.noWrap ? 'nowrap' : info.whitespace\n      }\n\n      case 'textarea': {\n        return 'pre-wrap'\n      }\n\n      default:\n    }\n  }\n\n  return info.whitespace\n}\n\n/** @type {TestFunctionAnything} */\nfunction hidden(node) {\n  return Boolean((node.properties || {}).hidden)\n}\n\n/** @type {TestFunctionAnything} */\nfunction closedDialog(node) {\n  return node.tagName === 'dialog' && !(node.properties || {}).open\n}\n","/**\n * @typedef {import('lowlight').Root} LowlightRoot\n * @typedef {import('lowlight/lib/core.js').HighlightSyntax} HighlightSyntax\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='hljs-']\n *   Prefix to use before classes.\n * @property {boolean} [detect=false]\n *   Whether to detect the programming language on code without a language\n *   class.\n * @property {Array<string>} [subset]\n *   Scope of languages to check when auto-detecting (default: all languages).\n * @property {boolean} [ignoreMissing=false]\n *   Swallow errors for missing languages.\n *   By default, unregistered syntaxes throw an error when they are used.\n *   Pass `true` to swallow those errors and thus ignore code with unknown code\n *   languages.\n * @property {Array<string>} [plainText=[]]\n *   List of plain-text languages.\n *   Pass any languages you would like to be kept as plain-text instead of\n *   getting highlighted.\n * @property {Record<string, string|Array<string>>} [aliases={}]\n *   Register more aliases.\n *   Passed to `lowlight.registerAlias`.\n * @property {Record<string, HighlightSyntax>} [languages={}]\n *   Register more languages.\n *   Each key/value pair passed as arguments to `lowlight.registerLanguage`.\n */\n\nimport {lowlight} from 'lowlight'\nimport {toText} from 'hast-util-to-text'\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Plugin to highlight the syntax of code with lowlight (`highlight.js`).\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeHighlight(options = {}) {\n  const {aliases, languages, prefix, plainText, ignoreMissing, subset, detect} =\n    options\n  let name = 'hljs'\n\n  if (aliases) {\n    lowlight.registerAlias(aliases)\n  }\n\n  if (languages) {\n    /** @type {string} */\n    let key\n\n    for (key in languages) {\n      if (own.call(languages, key)) {\n        lowlight.registerLanguage(key, languages[key])\n      }\n    }\n  }\n\n  if (prefix) {\n    const pos = prefix.indexOf('-')\n    name = pos > -1 ? prefix.slice(0, pos) : prefix\n  }\n\n  return (tree, file) => {\n    // eslint-disable-next-line complexity\n    visit(tree, 'element', (node, _, givenParent) => {\n      const parent = /** @type {Node?} */ (givenParent)\n\n      if (\n        !parent ||\n        !('tagName' in parent) ||\n        parent.tagName !== 'pre' ||\n        node.tagName !== 'code' ||\n        !node.properties\n      ) {\n        return\n      }\n\n      const lang = language(node)\n\n      if (\n        lang === false ||\n        (!lang && !detect) ||\n        (lang && plainText && plainText.includes(lang))\n      ) {\n        return\n      }\n\n      if (!Array.isArray(node.properties.className)) {\n        node.properties.className = []\n      }\n\n      if (!node.properties.className.includes(name)) {\n        node.properties.className.unshift(name)\n      }\n\n      /** @type {LowlightRoot} */\n      let result\n\n      try {\n        result = lang\n          ? lowlight.highlight(lang, toText(parent), {prefix})\n          : lowlight.highlightAuto(toText(parent), {prefix, subset})\n      } catch (error) {\n        const exception = /** @type {Error} */ (error)\n        if (!ignoreMissing || !/Unknown language/.test(exception.message)) {\n          file.fail(exception, node, 'rehype-highlight:missing-language')\n        }\n\n        return\n      }\n\n      if (!lang && result.data.language) {\n        node.properties.className.push('language-' + result.data.language)\n      }\n\n      if (Array.isArray(result.children) && result.children.length > 0) {\n        node.children = result.children\n      }\n    })\n  }\n}\n\n/**\n * Get the programming language of `node`.\n *\n * @param {Element} node\n * @returns {false|string|undefined}\n */\nfunction language(node) {\n  const className = node.properties && node.properties.className\n  let index = -1\n\n  if (!Array.isArray(className)) {\n    return\n  }\n\n  while (++index < className.length) {\n    const value = String(className[index])\n\n    if (value === 'no-highlight' || value === 'nohighlight') {\n      return false\n    }\n\n    if (value.slice(0, 5) === 'lang-') {\n      return value.slice(5)\n    }\n\n    if (value.slice(0, 9) === 'language-') {\n      return value.slice(9)\n    }\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Content | Root} Node\n *\n * @typedef {Properties[string]} PropertyValue\n *   Possible property values.\n * @typedef {string | number | boolean} PrimitivePropertyValue\n *   Possible primitive HTML attribute values.\n *\n * @typedef {Record<string, Array<string | [string, ...Array<PrimitivePropertyValue | RegExp>]>>} Attributes\n *  Map of tag names to allow lists for each property.\n * @typedef {Record<string, Array<PrimitivePropertyValue | RegExp>>} AttributeClean\n *   Normalized input.\n *\n * @typedef Schema\n *   Sanitization configuration.\n * @property {Attributes | undefined} [attributes]\n *   Map of tag names to allowed properties.\n *\n *   The special `'*'` key defines property names allowed on all elements.\n * @property {Record<string, Record<string, PropertyValue>> | undefined} [required]\n *   Map of tag names to required property names and their default property value.\n * @property {Array<string> | undefined} [tagNames]\n *   List of allowed tag names.\n * @property {Record<string, Array<string>> | undefined} [protocols]\n *   Map of protocols to allow in property values.\n * @property {Record<string, Array<string>> | undefined} [ancestors]\n *   Map of tag names to their required ancestor elements.\n * @property {Array<string> | undefined} [clobber]\n *   List of allowed property names which can clobber.\n * @property {string | undefined} [clobberPrefix]\n *   Prefix to use before potentially clobbering property names.\n * @property {Array<string> | undefined} [strip]\n *   Names of elements to strip from the tree.\n * @property {boolean | undefined} [allowComments]\n *   Whether to allow comments.\n * @property {boolean | undefined} [allowDoctypes]\n *   Whether to allow doctypes.\n *\n * @typedef {(schema: Schema, value: any, node: any, stack: Array<string>) => unknown} Handler\n * @typedef {Record<string, Handler>} NodeDefinition\n * @typedef {((schema: Schema, node: Node) => NodeDefinition | undefined)} NodeDefinitionGetter\n * @typedef {Record<string, NodeDefinition | NodeDefinitionGetter>} NodeSchema\n */\n\nimport {defaultSchema} from './schema.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {NodeSchema} */\nconst nodeSchema = {\n  root: {children: all},\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {value: handleValue},\n  '*': {data: allow, position: allow}\n}\n\n/**\n * Utility to sanitize a tree\n *\n * @param {Node} node\n *   Hast tree to sanitize\n * @param {Schema} [schema]\n *   Schema defining how to sanitize - defaults to Github style sanitation\n */\nexport function sanitize(node, schema) {\n  /** @type {Node} */\n  let ctx = {type: 'root', children: []}\n\n  if (node && typeof node === 'object' && node.type) {\n    const replace = one(\n      Object.assign({}, defaultSchema, schema || {}),\n      node,\n      []\n    )\n\n    if (replace) {\n      if (Array.isArray(replace)) {\n        if (replace.length === 1) {\n          ctx = replace[0]\n        } else {\n          // @ts-expect-error Assume `root` is not a child.\n          ctx.children = replace\n        }\n      } else {\n        ctx = replace\n      }\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {Schema} schema\n * @param {Node} node\n * @param {Array<string>} stack\n * @returns {Node | Array<Node> | undefined}\n */\nfunction one(schema, node, stack) {\n  const type = node && node.type\n  /** @type {Node} */\n  // @ts-expect-error rest of props added later.\n  const replacement = {type: node.type}\n  /** @type {boolean | undefined} */\n  let replace\n\n  if (own.call(nodeSchema, type)) {\n    /** @type {NodeDefinition | NodeDefinitionGetter | undefined} */\n    let definition = nodeSchema[type]\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node)\n    }\n\n    if (definition) {\n      const allowed = Object.assign({}, definition, nodeSchema['*'])\n      /** @type {string} */\n      let key\n\n      replace = true\n\n      for (key in allowed) {\n        if (own.call(allowed, key)) {\n          // @ts-expect-error: fine.\n          // type-coverage:ignore-next-line\n          const result = allowed[key](schema, node[key], node, stack)\n\n          // eslint-disable-next-line max-depth\n          if (result === false) {\n            replace = undefined\n            // Set the non-safe value.\n            // @ts-expect-error: fine.\n            // type-coverage:ignore-next-line\n            replacement[key] = node[key]\n          } else if (result !== undefined && result !== null) {\n            // @ts-expect-error: fine.\n            // type-coverage:ignore-next-line\n            replacement[key] = result\n          }\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement\n  }\n\n  return replacement.type === 'element' &&\n    schema.strip &&\n    !schema.strip.includes(replacement.tagName)\n    ? replacement.children\n    : undefined\n}\n\n/**\n * Sanitize `children`.\n *\n * @type {Handler}\n * @param {Array<Node>} children\n * @param {Node} node\n * @returns {Array<Node>}\n */\nfunction all(schema, children, node, stack) {\n  /** @type {Array<Node>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    let index = -1\n\n    if (node.type === 'element') {\n      stack.push(node.tagName)\n    }\n\n    while (++index < children.length) {\n      const value = one(schema, children[index], stack)\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      stack.pop()\n    }\n  }\n\n  return results\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {name: handleDoctypeName} : undefined\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleComment(schema) {\n  return schema.allowComments ? {value: handleCommentValue} : undefined\n}\n\n/**\n * Sanitize `properties`.\n *\n * @type {Handler}\n * @param {Properties} properties\n * @param {Element} node\n * @returns {Properties}\n */\nfunction handleProperties(schema, properties, node, stack) {\n  const name = handleTagName(schema, node.tagName, node, stack)\n  /* c8 ignore next */\n  const attrs = schema.attributes || {}\n  /* c8 ignore next */\n  const reqs = schema.required || {}\n  const props = properties || {}\n  const allowed = Object.assign(\n    {},\n    toPropertyValueMap(attrs['*']),\n    toPropertyValueMap(name && own.call(attrs, name) ? attrs[name] : [])\n  )\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      let value = props[key]\n      /** @type {AttributeClean[string]} */\n      let definition\n\n      if (own.call(allowed, key)) {\n        definition = allowed[key]\n      } else if (data(key) && own.call(allowed, 'data*')) {\n        definition = allowed['data*']\n      } else {\n        continue\n      }\n\n      value = Array.isArray(value)\n        ? handlePropertyValues(schema, value, key, definition)\n        : handlePropertyValue(schema, value, key, definition)\n\n      if (value !== undefined && value !== null) {\n        result[key] = value\n      }\n    }\n  }\n\n  if (name && own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Always return a valid HTML5 doctype.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleDoctypeName() {\n  return 'html'\n}\n\n/**\n * Sanitize `tagName`.\n *\n * @param {Schema} schema\n * @param {string} tagName\n * @param {Node} _\n * @param {Array<string>} stack\n * @returns {string | false}\n */\nfunction handleTagName(schema, tagName, _, stack) {\n  const name = typeof tagName === 'string' ? tagName : ''\n  let index = -1\n\n  if (\n    !name ||\n    name === '*' ||\n    (schema.tagNames && !schema.tagNames.includes(name))\n  ) {\n    return false\n  }\n\n  // Some nodes can break out of their context if they don’t have a certain\n  // ancestor.\n  if (schema.ancestors && own.call(schema.ancestors, name)) {\n    while (++index < schema.ancestors[name].length) {\n      if (stack.includes(schema.ancestors[name][index])) {\n        return name\n      }\n    }\n\n    return false\n  }\n\n  return name\n}\n\n/**\n * See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n *\n * @type {Handler}\n * @param {unknown} value\n * @returns {string}\n */\nfunction handleCommentValue(_, value) {\n  /** @type {string} */\n  const result = typeof value === 'string' ? value : ''\n  const index = result.indexOf('-->')\n  return index < 0 ? result : result.slice(0, index)\n}\n\n/**\n * Sanitize `value`.\n *\n * @type {Handler}\n * @param {unknown} value\n * @returns {string}\n */\nfunction handleValue(_, value) {\n  return typeof value === 'string' ? value : ''\n}\n\n/**\n * Allow `value`.\n *\n * @type {Handler}\n * @param {unknown} value\n */\nfunction allow(_, value) {\n  return value\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {Schema} schema\n * @param {Array<unknown>} values\n * @param {string} prop\n * @param {AttributeClean[string]} definition\n * @returns {Array<string | number>}\n */\nfunction handlePropertyValues(schema, values, prop, definition) {\n  let index = -1\n  /** @type {Array<string | number>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = handlePropertyValue(schema, values[index], prop, definition)\n\n    if (value !== undefined && value !== null) {\n      // @ts-expect-error Assume no booleans were in arrays.\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @param {AttributeClean[string]} definition\n * @returns {PropertyValue}\n */\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if (\n    (typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string') &&\n    safeProtocol(schema, value, prop) &&\n    (definition.length === 0 ||\n      definition.some((allowed) =>\n        allowed && typeof allowed === 'object' && 'flags' in allowed\n          ? allowed.test(String(value))\n          : allowed === value\n      ))\n  ) {\n    return schema.clobberPrefix &&\n      schema.clobber &&\n      schema.clobber.includes(prop)\n      ? schema.clobberPrefix + value\n      : value\n  }\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @returns {boolean}\n */\nfunction safeProtocol(schema, value, prop) {\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n  const protocols =\n    schema.protocols && own.call(schema.protocols, prop)\n      ? schema.protocols[prop].concat()\n      : []\n  let index = -1\n\n  if (\n    protocols.length === 0 ||\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  while (++index < protocols.length) {\n    if (\n      colon === protocols[index].length &&\n      url.slice(0, protocols[index].length) === protocols[index]\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a map from a list of props or a list of properties and values.\n *\n * @param {Attributes[string]} values\n * @returns {AttributeClean}\n */\nfunction toPropertyValueMap(values) {\n  /** @type {AttributeClean} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    const value = values[index]\n\n    if (Array.isArray(value)) {\n      result[value[0]] = value.slice(1)\n    } else {\n      result[value] = []\n    }\n  }\n\n  return result\n}\n\n/**\n * Check if `prop` is a data property.\n *\n * @param {string} prop\n * @returns {boolean}\n */\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data'\n}\n","/**\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-sanitize').Schema} Options\n *   The sanitation schema defines how and if nodes and properties should be cleaned.\n *   See `hast-util-sanitize`.\n *   The default schema is exported as `defaultSchema`.\n */\n\nimport {sanitize as hastUtilSanitize, defaultSchema} from 'hast-util-sanitize'\n\n/**\n * Plugin to sanitize HTML.\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root, Root>}\n */\nexport default function rehypeSanitize(options = defaultSchema) {\n  // @ts-expect-error: assume input `root` matches output root.\n  return (tree) => hastUtilSanitize(tree, options)\n}\n\nexport {defaultSchema} from 'hast-util-sanitize'\n"],"names":["namespace","format","fmt","c","arg","tmp","precision","argIndex","args","slice","call","arguments","i","n","length","result","escaped","leadingZero","nextArg","slurpNumber","digits","test","parseInt","toString","String","fromCharCode","parseFloat","toFixed","replace","JSON","stringify","toUpperCase","module","exports","vsprintf","replacements","apply","concat","console","log","printf","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","trim","str","style","options","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","end","source","prototype","content","errorsList","error","msg","err","reason","filename","silent","push","re","m","exec","comments","rules","comment","pos","FORWARD_SLASH","charAt","ASTERISK","EMPTY_STRING","type","declarations","decl","decls","declaration","prop","val","ret","property","value","parse","__webpack_require__","StyleToObject","iterator","output","hasIterator","len","Response","constructor","mode","undefined","data","isMatchIgnored","ignoreMatch","escapeHTML","inherit$1","original","objects","Object","create","key","forEach","obj","emitsWrappingTags","scope","scopeToCSSClass","name","prefix","startsWith","includes","pieces","split","shift","map","x","repeat","join","HTMLRenderer","parseTree","buffer","classPrefix","walk","addText","text","openNode","className","span","closeNode","newNode","opts","children","assign","TokenTree","rootNode","stack","top","root","add","pop","closeAllNodes","toJSON","builder","_walk","child","_collapse","every","el","TokenTreeEmitter","startScope","endScope","__addSublanguage","emitter","toHTML","renderer","finalize","lookahead","anyNumberOfTimes","optional","either","splice","capture","countMatchGroups","BACKREF_RE","_rewriteBackreferences","regexps","joinWith","numCaptures","offset","regex","out","substring","index","Number","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","BACKSLASH_ESCAPE","begin","relevance","COMMENT","modeOptions","contains","excludeBegin","ENGLISH_WORD","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","MODES","freeze","__proto__","MATCH_NOTHING_RE","RE_STARTERS_RE","SHEBANG","beginShebang","binary","resp","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","END_SAME_AS_BEGIN","_beginMatch","skipIfHasPrecedingDot","response","input","scopeClassName","_parent","beginKeywords","parent","__beforeBegin","keywords","compileIllegal","Array","isArray","compileMatch","compileRelevance","beforeMatchExt","beforeMatch","starts","originalMode","keys","endsParent","COMMON_KEYWORDS","seenDeprecations","message","warn","deprecated","version","MultiClassError","remapScopeNames","regexes","scopeNames","emit","positions","_emit","_multi","MultiClass","beginScope","_wrap","beginMultiClass","skip","returnBegin","endMultiClass","excludeEnd","returnEnd","HTMLInjectionError","Error","html","NO_MATCH","Symbol","HLJS","hljs","languages","aliases","plugins","SAFE_MODE","LANGUAGE_NOT_FOUND","PLAINTEXT_LANGUAGE","disableAutodetect","ignoreUnescapedHTML","throwUnescapedHTML","noHighlightRe","languageDetectRe","cssSelector","__emitter","shouldNotHighlight","languageName","highlight","codeOrLanguageName","optionsOrCode","ignoreIllegals","code","language","context","fire","_highlight","codeToHighlight","continuation","keywordHits","processKeywords","modeBuffer","lastIndex","keywordPatternRe","buf","word","case_insensitive","toLowerCase","kind","keywordRelevance","cssClass","classNameAliases","emitKeyword","processBuffer","subLanguage","processSubLanguage","continuations","_top","highlightAuto","_emitter","keyword","emitMultiClass","max","klass","startNewMode","lastMatch","processLexeme","textBeforeMatch","lexeme","badRule","rule","doBeginMatch","newMode","cb","matcher","regexIndex","resumeScanAtSamePosition","processed","doEndMatch","matchPlusRemainder","endMode","endOfMode","matched","endRe","endsWithParent","origin","iterations","getLanguage","md","compileLanguage","langRe","global","unicodeRegex","MultiRegex","matchIndexes","matchAt","addRule","compile","terminators","matcherRe","s","findIndex","matchData","ResumableMultiRegex","multiRegexes","count","getMatcher","resumingScanAtSamePosition","considerAll","m2","compilerExtensions","compileMode","isCompiled","ext","keywordPattern","$pattern","compileKeywords","rawKeywords","caseInsensitive","scopeName","compiledKeywords","compileList","keywordList","providedScore","pair","commonKeyword","cmode","beginRe","terminatorEnd","illegalRe","variants","cachedVariants","variant","dependencyOnParent","isFrozen","buildModeRegex","mm","term","processContinuations","list","current","unshift","item","__emitTokens","processedCount","escape","_illegalBy","resultSoFar","errorRaised","languageSubset","plaintext","justTextHighlightResult","results","filter","autoDetection","best","secondBest","sort","a","b","supersetOf","highlightElement","element","blockLanguage","block","classes","parentNode","find","_class","innerHTML","textContent","updateClassName","currentLang","resultLang","classList","wantsHighlight","highlightAll","document","readyState","blocks","querySelectorAll","registerAliases","aliasList","alias","lang","event","plugin","window","addEventListener","highlightBlock","configure","userOptions","inherit","initHighlighting","initHighlightingOnLoad","registerLanguage","languageDefinition","error$1","rawDefinition","bind","unregisterLanguage","listLanguages","addPlugin","removePlugin","indexOf","debugMode","safeMode","versionString","deepFreeze","Map","clear","delete","set","Set","getOwnPropertyNames","newInstance","HighlightJS","default","defaultSchema","strip","clobberPrefix","clobber","ancestors","tbody","tfoot","thead","td","th","tr","protocols","href","cite","src","longDesc","tagNames","attributes","img","li","div","blockquote","del","ins","q","required","disabled","normalizeUri","charCodeAt","micromark_util_character","H$","next","encodeURIComponent","pointStart","point","pointEnd","own","hasOwnProperty","clean","footnoteReference","state","counter","id","identifier","safeId","footnoteOrder","footnoteCounts","reuseCounter","link","tagName","properties","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","referenceType","suffix","label","alt","contents","all","head","tail","listItemLoose","spread","trimLine","startIndex","endIndex","codePointAt","handlers","wrap","break","meta","emphasis","footnote","footnoteById","no","heading","depth","dangerous","imageReference","def","definition","url","title","image","inlineCode","linkReference","listItem","loose","listLoose","checked","paragraph","ordered","strong","table","rows","firstRow","tableContent","body","tableCell","tableRow","siblings","rowIndex","align","cellIndex","cells","cell","alignValue","trimLines","search","last","thematicBreak","toml","ignore","yaml","footnoteDefinition","state_own","from","to","hName","hChildren","hProperties","one","passThrough","state_all","unknownHandler","defaultUnknownHandler","values","nodes","toHast","tree","createState","settings","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","definitions","cache","unist_util_visit_lib","Vn","augment","left","right","ctx","props","foot","footer","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","remark_rehype_lib","destination","file","run","Schema","normal","space","merge","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","types_boolean","increment","checks","types_namespaceObject","DefinedInfo","mask","check","create_own","info","transform","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html_html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","charSet","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","loading","loop","low","manifest","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","reversed","rowSpan","sandbox","scoped","seamless","selected","shape","size","sizes","slot","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","target","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","operator","order","orient","orientation","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","property_information_html","property_information_svg","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","remove","unwrapDisallowed","valid","dash","cap","kebab","$0","camelcase","hastToReact","uriTransformer","uri","first","colon","protocol","ast_to_react_own","tableElements","getElementsBeforeCount","styleReplacer","$1","react_markdown_own","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","processor","unified_lib","l","use","remark_parse_lib","Z","remarkPlugins","remarkRehypeOptions","rehypePlugins","lib","hastNode","runSync","react","createElement","Fragment","childrenToReact","childIndex","toReact","transformLinkUri","parentSchema","schema","addProperty","Type","rest","dashes","comma_separated_tokens_stringify","padRight","padLeft","parseStyle","node_modules_style_to_object","v","listDepth","component","components","basic","react_is","isValidElementType","linkTarget","inline","level","transformImageUri","getInputElement","Boolean","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","has","whitespace","thing","skipHtml","propTypes","prop_types","func","arrayOf","bool","oneOfType","any","IMPORTANT","BLOCK_COMMENT","HEXCOLOR","FUNCTION_DISPATCH","ATTRIBUTE_SELECTOR_MODE","CSS_NUMBER_MODE","CSS_VARIABLE","TAGS","MEDIA_FEATURES","PSEUDO_CLASSES","PSEUDO_ELEMENTS","ATTRIBUTES","reverse","decimalDigits","frac","hexDigits","NUMERIC","KEYWORDS","LITERALS","TYPES","ERROR_TYPES","BUILT_IN_GLOBALS","BUILT_IN_VARIABLES","BUILT_INS","kotlin_decimalDigits","kotlin_frac","kotlin_hexDigits","kotlin_NUMERIC","less_MODES","less_TAGS","less_MEDIA_FEATURES","less_PSEUDO_CLASSES","less_PSEUDO_ELEMENTS","less_ATTRIBUTES","PSEUDO_SELECTORS","scss_MODES","scss_TAGS","scss_MEDIA_FEATURES","scss_PSEUDO_CLASSES","scss_PSEUDO_ELEMENTS","scss_ATTRIBUTES","keywordWrapper","dotKeywords","optionalDotKeywords","keywordTypes","literals","precedencegroupKeywords","numberSignKeywords","builtIns","operatorHead","operatorCharacter","identifierHead","identifierCharacter","typeIdentifier","keywordAttributes","availabilityKeywords","typescript_IDENT_RE","typescript_KEYWORDS","typescript_LITERALS","typescript_TYPES","typescript_ERROR_TYPES","typescript_BUILT_IN_GLOBALS","typescript_BUILT_IN_VARIABLES","typescript_BUILT_INS","fault","eval","EvalError","range","RangeError","reference","ReferenceError","syntax","SyntaxError","TypeError","URIError","Constructor","FormattedError","displayName","format_format","defaultPrefix","es_core","HastEmitter","rawName","other","lowlight","subset","registerAlias","ARDUINO","cPlusPlus","DECLTYPE_AUTO_RE","NAMESPACE_RE","FUNCTION_TYPE_RE","CPP_PRIMITIVE_TYPES","STRINGS","NUMBERS","PREPROCESSOR","FUNCTION_TITLE","CPP_KEYWORDS","literal","built_in","_type_hints","_hint","EXPRESSION_CONTAINS","EXPRESSION_CONTEXT","FUNCTION_DECLARATION","kws","_hints","VAR","SUBST","HERE_DOC","QUOTE_STRING","ARITHMETIC","KNOWN_SHEBANG","FUNCTION","preprocessor","strings","NORMAL_KEYWORDS","VERBATIM_STRING","VERBATIM_STRING_NO_LF","SUBST_NO_LF","INTERPOLATED_STRING","INTERPOLATED_VERBATIM_STRING","INTERPOLATED_VERBATIM_STRING_NO_LF","STRING","GENERIC_MODIFIER","TYPE_IDENT_RE","AT_IDENTIFIER","FUNCTION_MODIFIERS","modes","keyframePosition","COMMENTS","VARIABLES","ANY_KEY","JAVA_IDENT_RE","GENERIC_IDENT_RE","recurRegex","substitution","ANNOTATION","PARAMS","hasClosingTag","after","tag","KEYWORDS$1","decimalInteger","NUMBER","HTML_TEMPLATE","CSS_TEMPLATE","GRAPHQL_TEMPLATE","TEMPLATE_STRING","IDENT_RE$1","SUBST_INTERNALS","SUBST_AND_COMMENTS","PARAMS_CONTAINS","CLASS_OR_EXTENDS","CLASS_REFERENCE","FUNCTION_CALL","PROPERTY_ACCESS","FUNC_LEAD_IN_RE","FUNCTION_VARIABLE","afterMatchIndex","nextChar","afterMatch","LITERALS_MODE","LABEL","VARIABLE","ANNOTATION_USE_SITE","KOTLIN_NESTED_COMMENT","KOTLIN_PAREN_TYPE","KOTLIN_PAREN_TYPE2","INTERP_IDENT_RE","RULES","VALUE_MODES","STRING_MODE","IDENT_MODE","AT_KEYWORDS","VALUE_WITH_RULESETS","MIXIN_GUARD_MODE","RULE_MODE","SELECTOR_MODE","PSEUDO_SELECTOR_MODE","PSEUDO_SELECTORS$1","OPENING_LONG_BRACKET","CLOSING_LONG_BRACKET","LONG_BRACKETS","ASSIGNMENT","INLINE_HTML","LINK","BOLD","ITALIC","BOLD_WITHOUT_ITALIC","ITALIC_WITHOUT_BOLD","CONTAINABLE","IDENTIFIER_RE","CLASS_KEYWORDS","REGEX_MODIFIERS","PERL_KEYWORDS","METHOD","STRING_CONTAINS","REGEX_DELIMS","PAIRED_DOUBLE_RE","close","middle","PAIRED_RE","PERL_DEFAULT_CONTAINS","NOT_PERL_ETC","PASCAL_CASE_CLASS_NAME_RE","SINGLE_QUOTED","DOUBLE_QUOTED","HEREDOC","NOWDOC","WHITESPACE","KWS","dualCase","items","normalizeKeywords","CONSTRUCTOR_CALL","CONSTANT_REFERENCE","LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON","NAMED_ARGUMENT","PARAMS_MODE","FUNCTION_INVOKE","ATTRIBUTE_CONTAINS","RESERVED_WORDS","PROMPT","LITERAL_BRACKET","digitpart","pointfloat","COMMENT_TYPE","NUMBER_TYPES_RE","OPERATORS_RE","PUNCTUATION_RE","RUBY_METHOD_RE","CLASS_NAME_RE","CLASS_NAME_WITH_NAMESPACE_RE","RUBY_KEYWORDS","YARDOCTAG","IRB_OBJECT","COMMENT_MODES","RUBY_DEFAULT_CONTAINS","IRB_DEFAULT","NUMBER_SUFFIX","BUILTINS","PSEUDO_CLASSES$1","PSEUDO_ELEMENTS$1","COMMENT_MODE","RESERVED_FUNCTIONS","COMBOS","reduceRelevancy","exceptions","when","qualifyFn","DOT_KEYWORD","KEYWORD_GUARD","PLAIN_KEYWORDS","kw","KEYWORD","KEYWORD_MODES","OPERATOR_GUARD","OPERATORS","ESCAPED_CHARACTER","rawDelimiter","ESCAPED_NEWLINE","INTERPOLATION","MULTILINE_STRING","SINGLE_LINE_STRING","QUOTED_IDENTIFIER","IDENTIFIERS","TYPE","GENERIC_ARGUMENTS","TUPLE","GENERIC_PARAMETERS","FUNCTION_PARAMETERS","PRECEDENCEGROUP","interpolation","submodes","tsLanguage","typescript_javascript","NAMESPACE","INTERFACE","DECORATOR","swapMode","replacement","indx","functionDeclaration","MM_DD_YYYY","YYYY_MM_DD","TIME_12H","TIME_24H","DATE","DOC_COMMENT","TAG_NAME_RE","XML_ENTITIES","XML_META_KEYWORDS","XML_META_PAR_KEYWORDS","APOS_META_STRING_MODE","QUOTE_META_STRING_MODE","TAG_INTERNALS","URI_CHARACTERS","CONTAINER_STRING","VALUE_CONTAINER","convertElement","hast_util_is_element_element","anyFactory","tests","castFactory","parameters","findAfter","O","POSITIVE_INFINITY","searchLineFeeds","searchTabOrSpaces","br","p","row","notRendered","blockOrCaption","toText","inferWhitespace","breakBefore","breakAfter","collectText","innerTextCollection","collectElement","trimAndCollapseSpacesAndTabs","lib_own","rehypeHighlight","plainText","ignoreMissing","detect","givenParent","exception","fail","nodeSchema","lib_all","doctype","allowDoctypes","handleDoctypeName","allowComments","handleCommentValue","handleTagName","attrs","reqs","allowed","toPropertyValueMap","handlePropertyValues","handlePropertyValue","safeProtocol","questionMark","numberSign","slash","some","rehypeSanitize","lib_schema","R","sanitize"],"sourceRoot":""}